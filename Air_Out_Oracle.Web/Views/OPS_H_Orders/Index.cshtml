@model IEnumerable<AirOut.Web.Models.OPS_H_Order>
@{
    ViewBag.Title = "OPS_H_Order";
	var Num = 1;
}
<!--DataGrid 回车Editor下一个 和 为控件添加 Key事件 -->
<script async defer type="text/javascript" src="~/Scripts/EasyUIDataGrid_ControlNext.js"></script>
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">OPS_H_Orders</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
	<div class="row">
	    <div class="col-lg-12">
	        <div class="ibox float-e-margins">
	            <div class="ibox-title">
	                <h5>OPS_H_Order</h5>
	                <div class="ibox-tools">
	                    <a class="collapse-link">
	                        <i class="fa fa-chevron-up"></i>
	                    </a>
	                </div>
	            </div>
	            <div class="ibox-content">
	                <form id="searchform" method="post" style="padding-bottom:10px; width:auto">
                        <div id="div_search" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title="查询条件"
                             data-options="collapsible:true">
                            <div class="form-group col-md-4">
                                <input id="CodeQuery" name="CodeQuery" tabindex="@(Num++)" data-options="prompt1:'业务编号'" style="width:20%" class="easyui-combogrid" type="text" />
                                <input id="Operation_Id" name="Operation_Id" tabindex="@(Num++)" data-options="prompt1:''" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">总单号:</label>
                                <input id="MBL" name="MBL" tabindex="@(Num++)" data-options="prompt1:'总单号'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">拼箱码:</label>
                                <input id="Lot_No" name="Lot_No" tabindex="@(Num++)" data-options="prompt1:'拼箱码'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">委托方:</label>
                                <input id="Entrustment_Code" name="Entrustment_Code" tabindex="@(Num++)" data-options="prompt1:'委托方'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">订舱方:</label>
                                <input id="Book_Flat_Code" name="Book_Flat_Code" tabindex="@(Num++)" data-options="prompt1:'订舱方'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">批次号:</label>
                                <input id="Batch_Num" name="Batch_Num" tabindex="@(Num++)" data-options="prompt1:'批次号'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>


                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">起运港:</label>
                                <input id="Depart_Port" name="Depart_Port" tabindex="@(Num++)" data-options="prompt1:'起运港'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">航班日期:</label>
                                <input id="_Flight_Date_Want" name="_Flight_Date_Want" tabindex="@(Num++)" data-options="prompt1:'航班日期'" style="width:79%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">至:</label>
                                <input id="Flight_Date_Want_" name="Flight_Date_Want_" tabindex="@(Num++)" data-options="prompt1:'至'" style="width:79%" class="easyui-datebox" type="text" />
                            </div>

                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">目的港:</label>
                                <input id="End_Port" name="End_Port" tabindex="@(Num++)" data-options="prompt1:'目的港'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">操作人:</label>
                                <input id="ADDID" name="ADDID" tabindex="@(Num++)" data-options="prompt1:'操作人'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">航班号:</label>
                                <input id="Flight_No" name="Flight_No" tabindex="@(Num++)" data-options="prompt1:'航班号'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>

                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">BSA:</label>
                                <input id="BSA" name="BSA" tabindex="@(Num++)" data-options="prompt1:'BSA'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">代操作:</label>
                                <input id="Is_DCZ" name="Is_DCZ" tabindex="@(Num++)" data-options="prompt1:'代操作'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">重板:</label>
                                <input id="Is_ZB" name="Is_ZB" tabindex="@(Num++)" data-options="prompt1:'重板'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>

                            <div class="form-group col-md-4">
                                <label for="name" style="width:20%">退关:</label>
                                <input id="Is_TG" name="Is_TG" tabindex="@(Num++)" data-options="prompt1:'退关'" style="width:79%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-8">
                                <input id="HWD" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />货未齐
                                <input id="HDQ" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />货到齐
                                <input id="WBG" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />未报关
                                <input id="YBG" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />已报关
                                <input id="WDZD" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />未打主单
                                <input id="ZDWC" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />主单完成
                                <input id="WSFD" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />未输分单
                                <input id="FDWC" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />分单完成
                                <input id="WZBQ" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />未制标签
                                <input id="YZBQ" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />已制标签
                                <input id="WCK" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />未出库
                                <input id="YCK" name="ADDWHOQuery" tabindex="@(Num++)" class="easyui-checkbox" type="checkbox" />已出库
                            </div>

                            <div class="form-group col-md-4">
                            </div>

                            <div class="form-group col-md-4">
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="searchf()">查询</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="clearfrom()">重置</a>
                            </div>

                            <div class="form-group col-md-4">
                            </div>
                        </div>
                    </form>
					<div class="table-responsive">
		           	    <table id="ops_h_order_datagrid" class="easyui-datagrid" title="" style="width:auto;height:auto"
							data-options="
							rownumbers:true,
							checkOnSelect:true,
							selectOnCheck:true,
							idField:'Id',
							sortName:'Id',
							sortOrder:'desc',
							remoteFilter: true,
							singleSelect: true,
							toolbar: '#ops_h_order_toolbar',
							url: '/OPS_H_Orders/GetData',
							method: 'get',
							onClickCell: onClickCell,
							onSelect:onSelect,
							pagination: 'true',
                            onBeginEdit:onBeginEdit">
		                <thead>
		                    <tr>
		                        <th data-options="field:'ck',checkbox:true"></th>
								@*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                                <th data-options="field:'Batch_Num',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,200]'
										}
								}">@Html.DisplayNameFor(model => model.Batch_Num)</th>
								<th data-options="field:'Shipper_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,200]' 
										}
								}">@Html.DisplayNameFor(model => model.Shipper_H)</th>
								<th data-options="field:'Consignee_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,200]' 
										}
								}">@Html.DisplayNameFor(model => model.Consignee_H)</th>
								<th data-options="field:'Notify_Part_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,200]' 
										}
								}">@Html.DisplayNameFor(model => model.Notify_Part_H)</th>
								<th data-options="field:'Currency_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Currency_H)</th>
								<th data-options="field:'Bragainon_Article_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Bragainon_Article_H)</th>
								<th data-options="field:'Pay_Mode_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Pay_Mode_H)</th>
								<th data-options="field:'Carriage_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,1]' 
										}
								}">@Html.DisplayNameFor(model => model.Carriage_H)</th>
								<th data-options="field:'Incidental_Expenses_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,1]' 
										}
								}">@Html.DisplayNameFor(model => model.Incidental_Expenses_H)</th>
								<th data-options="field:'Declare_Value_Trans_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Declare_Value_Trans_H)</th>
								<th data-options="field:'Declare_Value_Ciq_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Declare_Value_Ciq_H)</th>
								<th data-options="field:'Risk_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Risk_H)</th>
								<th data-options="field:'Marks_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,1000]' 
										}
								}">@Html.DisplayNameFor(model => model.Marks_H)</th>
								<th data-options="field:'EN_Name_H',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,500]' 
										}
								}">@Html.DisplayNameFor(model => model.EN_Name_H)</th>
								<th data-options="field:'Pieces_H',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:false  
										} 
								}">@Html.DisplayNameFor(model => model.Pieces_H)</th>
								<th data-options="field:'Weight_H',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:false  
										} 
								}">@Html.DisplayNameFor(model => model.Weight_H)</th>
								<th data-options="field:'Volume_H',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:false  
										} 
								}">@Html.DisplayNameFor(model => model.Volume_H)</th>
								<th data-options="field:'Charge_Weight_H',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:false  
										} 
								}">@Html.DisplayNameFor(model => model.Charge_Weight_H)</th>
								<th data-options="field:'HBL',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.HBL)</th>
								<th data-options="field:'Operation_Id',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Operation_Id)</th>
								<th data-options="field:'Is_Self',width:120,
									editor: { 
										type:'combobox',
										options:{
										panelHeight: 'auto',
										data: [ 
											{ value: '1', text: 'true' },
											{ value: '0', text: 'false' } 
										],
										required:false
									}
								}">@Html.DisplayNameFor(model => model.Is_Self)</th>
								<th data-options="field:'Ty_Type',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Ty_Type)</th>
								<th data-options="field:'Lot_No',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Lot_No)</th>
								<th data-options="field:'Hbl_Feight',width:140,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,20]' 
										}
								}">@Html.DisplayNameFor(model => model.Hbl_Feight)</th>
								<th data-options="field:'Is_XC',width:120,
									editor: { 
										type:'combobox',
										options:{
										panelHeight: 'auto',
										data: [ 
											{ value: '1', text: 'true' },
											{ value: '0', text: 'false' } 
										],
										required:false
									}
								}">@Html.DisplayNameFor(model => model.Is_XC)</th>
								<th data-options="field:'Is_BAS',width:120,
									editor: { 
										type:'combobox',
										options:{
										panelHeight: 'auto',
										data: [ 
											{ value: '1', text: 'true' },
											{ value: '0', text: 'false' } 
										],
										required:false
									}
								}">@Html.DisplayNameFor(model => model.Is_BAS)</th>
								<th data-options="field:'Is_DCZ',width:120,
									editor: { 
										type:'combobox',
										options:{
										panelHeight: 'auto',
										data: [ 
											{ value: '1', text: 'true' },
											{ value: '0', text: 'false' } 
										],
										required:false
									}
								}">@Html.DisplayNameFor(model => model.Is_DCZ)</th>
								<th data-options="field:'Is_ZB',width:120,
									editor: { 
										type:'combobox',
										options:{
										panelHeight: 'auto',
										data: [ 
											{ value: '1', text: 'true' },
											{ value: '0', text: 'false' } 
										],
										required:false
									}
								}">@Html.DisplayNameFor(model => model.Is_ZB)</th>
								<th data-options="field:'ADDPoint',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:true ,precision:0 
										} 
								}">@Html.DisplayNameFor(model => model.ADDPoint)</th>
								<th data-options="field:'EDITPoint',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:true ,precision:0 
										} 
								}">@Html.DisplayNameFor(model => model.EDITPoint)</th>
								<th data-options="field:'Status',width:120,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false 
										}
								}">@Html.DisplayNameFor(model => model.Status)</th>
								<th data-options="field:'OperatingPoint',width:100,align:'right',sortable:true,resizable:true,
									editor:{
										type:'numberbox',
										options:{
											required:true ,precision:0 
										} 
								}">@Html.DisplayNameFor(model => model.OperatingPoint)</th>
	
								@*<th data-options="field:'ADDID',width:120,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,50]'
										}
								}">@Html.DisplayNameFor(model => model.ADDID)</th>*@
								@*<th data-options="field:'ADDWHO',width:120,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,50]'
										}
								}">@Html.DisplayNameFor(model => model.ADDWHO)</th>*@
								@*<th data-options="field:'ADDTS',width:160,align:'right',sortable:true,resizable:true,
									formatter:datetimeformatter,
									editor:{
										type:'datetimebox',
										options:{
											required:false    
										}
								}">@Html.DisplayNameFor(model => model.ADDTS)</th>*@
								@*<th data-options="field:'EDITWHO',width:120,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,50]'
										}
								}">@Html.DisplayNameFor(model => model.EDITWHO)</th>*@
								@*<th data-options="field:'EDITTS',width:160,align:'right',sortable:true,resizable:true,
									formatter:datetimeformatter,
									editor:{
										type:'datetimebox',
										options:{
											required:false    
										}
								}">@Html.DisplayNameFor(model => model.EDITTS)</th>*@
								@*<th data-options="field:'EDITID',width:120,sortable:true,resizable:true,
									editor:{
										type:'textbox',
										options:{
											required:false ,validType:'length[0,50]'
										}
								}">@Html.DisplayNameFor(model => model.EDITID)</th>*@
							</tr>
						</thead>
	 				</table>
					<div id="ops_h_order_toolbar" style="height:auto">
						@if (Html.IsAuthorize("Create"))
						{
						    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
						}
						@if (Html.IsAuthorize("Delete"))
						{
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>
						}
						@if (Html.IsAuthorize("Edit"))
						{
						    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload()">刷新</a>
						}
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>
						@if (Html.IsAuthorize("Import"))
						{
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true" onclick="exportexcel()">导出 Excel</a>
						}
						@*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true" onclick="exportexcel()">导出 Excel</a>
						<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload()">刷新</a>*@
					</div>
				</div>
				<!-- end ibox-content -->
	            </div>
	        </div>
	    </div>
	</div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入"   data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
    <p><input type="file" name="file_upload" id="file_upload" /></p>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            initPage();
			$("#file_upload").uploadifive({
                'height': 30,
                'fileTypeDesc': 'Excel 2010 Files',
                'fileTypeExts': '*.xlsx',
                'uploadScript': '/FileUpload/Upload',
                'buttonText': '选择EXCEL',
                'multi': true,
                'displayData': 'speed',
                'formData': { 'modelType': 'OPS_H_Order' },
                'width': 120,
                'successTimeout': 100000,
                'onFallback': function () {
                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                    $('#file_upload').uploadifive('clearQueue')
                },
                'onSelect': function (queue) {
                    $.messager.progress({
                        title: '执行导入',
                        msg: '请等待...'
                    });
                },
                'onUploadComplete': function (file, data) {
                    $.messager.progress('close');
                    var data = $.parseJSON(data);
                    //console.log(data);
                    if (data.success == false) {
                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                        $("#file_upload").uploadifive('clearQueue')
                    } else {
                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                        $dg.datagrid('reload');
                        $('#importwindow').window('close');
                    }
                    return true;
                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                }
			});
        });
		//初始化页面
		function initPage() {
		    //设置Combogrid 分页控件 简单模式

		    //业务编号和批次号 
		    $("#CodeQuery").combogrid({
		        panelHeight: 'auto',
		        idField: 'ID',
		        valueField: 'ID',
		        textField: 'TEXT',
		        data: [
                    { ID: 'Operation_Id', TEXT: '业务编号' },
		            { ID: 'Batch_Num', TEXT: '批次号' }
		        ],
		        columns: [[
                    { field: 'TEXT', title: '请选择……', width: 130 }
		        ]]
		    });
		}

		//点击重置按钮时，触发，清空查询条件
		function clearfrom() {
		    $('#searchform').form('clear');
		}
		//点击查询按钮时，触发
		function searchf() {
		    setfilteropts();//设置查询条件
		    var opts = $('#cusbusinfo_datagrid').datagrid('options');
		    opts.url = '/CusBusInfos/GetData';
		    opts.pageNumber = 1;
		    var pager = $('#cusbusinfo_datagrid').datagrid('getPager');
		    pager.pagination('refresh', {
		        pageNumber: 1
		    });
		    $('#cusbusinfo_datagrid').datagrid('reload');
		}
		//设置查询条件
		function setfilteropts() {
		    var Operation_Id = $("#Operation_Id").textbox("getValue");
		    var MBL = $("#MBL").textbox("getValue");
		    var Lot_No = $("#Lot_No").textbox("getValue");
		    var Entrustment_Code = $("#Entrustment_Code").textbox("getValue");
		    var Book_Flat_Code = $("#Book_Flat_Code").textbox("getValue");
		    var Batch_Num = $("#Batch_Num").textbox("getValue");
		    var Depart_Port = $("#Depart_Port").textbox("getValue");
		    var _Flight_Date_Want = $("#_Flight_Date_Want").textbox("getValue");
		    var Flight_Date_Want_ = $("#Flight_Date_Want_").textbox("getValue");
		    var End_Port = $("#End_Port").textbox("getValue");
		    var Flight_No = $("#Flight_No").textbox("getValue");
		    var ADDID = $("#ADDID").textbox("getValue");
		    var BSA = $("#BSA").textbox("getValue");
		    var Is_DCZ = $("#Is_DCZ").textbox("getValue");
		    var Is_ZB = $("#Is_ZB").textbox("getValue");
		    var Is_TG = $("#Is_TG").textbox("getValue");


		    var params = [];
		    var opts = $('#cusbusinfo_datagrid').datagrid('options');
		    if (!(typeof (Operation_Id) === 'undefined' || Operation_Id == null || Operation_Id == "")) {
		        params.push({ "field": "Operation_Id", "op": "equal", "value": Operation_Id });
		    }
		    if (!(typeof (MBL) === 'undefined' || MBL == null || MBL == "")) {
		        params.push({ "field": "MBL", "op": "equal", "value": MBL });
		    }
		    if (!(typeof (Lot_No) === 'undefined' || Lot_No == null || Lot_No == "")) {
		        params.push({ "field": "Lot_No", "op": "equal", "value": Lot_No });
		    }
		    if (!(typeof (Entrustment_Code) === 'undefined' || Entrustment_Code == null || Entrustment_Code == "")) {
		        params.push({ "field": "Entrustment_Code", "op": "equal", "value": Entrustment_Code });
		    }
		    if (!(typeof (Book_Flat_Code) === 'undefined' || Book_Flat_Code == null || Book_Flat_Code == "")) {
		        params.push({ "field": "Book_Flat_Code", "op": "equal", "value": Book_Flat_Code }); 
		    }
		    if (!(typeof (Batch_Num) === 'undefined' || Batch_Num == null || Batch_Num == "")) {
		        params.push({ "field": "Batch_Num", "op": "equal", "value": Batch_Num });
		    }
		    if (!(typeof (Depart_Port) === 'undefined' || Depart_Port == null || Depart_Port == "")) {
		        params.push({ "field": "Depart_Port", "op": "equal", "value": Depart_Port });
		    }
		    if (!(typeof (_Flight_Date_Want) === 'undefined' || _Flight_Date_Want == null || _Flight_Date_Want == "")) {
		        params.push({ "field": "_Flight_Date_Want", "op": "equal", "value": _Flight_Date_Want });
		    }
		    if (!(typeof (Flight_Date_Want_) === 'undefined' || Flight_Date_Want_ == null || Flight_Date_Want_ == "")) {
		        params.push({ "field": "Flight_Date_Want_", "op": "equal", "value": Flight_Date_Want_ });
		    } 
		    if (!(typeof (End_Port) === 'undefined' || End_Port == null || End_Port == "")) {
		        params.push({ "field": "End_Port", "op": "equal", "value": End_Port });
		    } 
		    if (!(typeof (Flight_No) === 'undefined' || Flight_No == null || Flight_No == "")) {
		        params.push({ "field": "Flight_No", "op": "equal", "value": Flight_No });
		    } 
		    if (!(typeof (ADDID) === 'undefined' || ADDID == null || ADDID == "")) {
		        params.push({ "field": "ADDID", "op": "equal", "value": ADDID });
		    } 
		    if (!(typeof (BSA) === 'undefined' || BSA == null || BSA == "")) {
		        params.push({ "field": "BSA", "op": "equal", "value": BSA });
		    } 
		    if (!(typeof (Is_DCZ) === 'undefined' || Is_DCZ == null || Is_DCZ == "")) {
		        params.push({ "field": "Is_DCZ", "op": "equal", "value": Is_DCZ });
		    } 
		    if (!(typeof (Is_ZB) === 'undefined' || Is_ZB == null || Is_ZB == "")) {
		        params.push({ "field": "Is_ZB", "op": "equal", "value": Is_ZB });
		    }
		    if (!(typeof (Is_TG) === 'undefined' || Is_TG == null || Is_TG == "")) {
		        params.push({ "field": "Is_TG", "op": "equal", "value": Is_TG });
		    }
		    opts.queryParams = {
		        'filterRules': JSON.stringify(params)
		    };

		}
        function importexcel() {
			$('#importwindow').window('open');
        }

		function exportexcel() {
			var opts = $dg.datagrid('options');
			//var filterRules = JSON.stringify(opts.filterRules);
			//$.messager.progress({ title: '正在执行导出！' });
			//var formData = new FormData();
			//formData.append('filterRules', filterRules);
			//formData.append('sort', 'Id');
			//formData.append('order', 'asc');
			//$.postDownload('/OPS_H_Orders/ExportExcel', formData, function (fileName) {
			//	$.messager.progress('close');
			//});
			
			var formData = { filterRules: opts.filterRules,sort:opts.sortName,order:opts.sortOrder };
			var url = '/OPS_H_Orders/ExportExcel';
			$.DownLoadProgress({
			    url: url,         //下载文件的url
			    method: 'Post',   //链接打开方式
			    data: postdata,         //要发送的数据
			    downLoadInfo: '下载文件', //下载界面文字
			    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
			    callbackFuc: function () {
			        $.messager.progress('close');
			    }
			});
		}

        var $dg = $('#ops_h_order_datagrid');
		var editIndex = undefined;

		function reload() {
            reject();//回滚所有变更
            $dg.datagrid('reload');
        }

		//combogrid 设置信息（onBeginEdit时,使用）
        var combogrid_Settings = {
			'COUNTRY': {
				required: true,
                url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY',
                method: 'get',
                delay: 500,
                multiple: false,
                panelHeight: 'auto',
                panelWidth: 205,
                idField: 'COUNTRY_CO',
                valueField: 'COUNTRY_CO',
                textField: 'COUNTRY_NA',
                pageSize: 10,//每页显示的记录条数，默认为10
                pageList: [5, 10, 20],//可以设置每页记录条数的列表
                pagination: true,//是否分页
                columns: [[
					{ field: 'COUNTRY_CO', title: '代码', width: 53 },
                    { field: 'COUNTRY_NA', title: '名称', width: 150 }
                ]],
                onLoadSuccess: function () {
					ondgLoadSuccess($dg, 'COUNTRY', rowIndex);
                },
                onChange: function(value){
				    var targetEditor = $dg.datagrid('getEditor', {
				        field: 'COUNTRY',
				        index: editIndex
				    });
				    if (targetEditor != null) {
				        var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
				        if (Selted) {
				            var datarow = $dg.datagrid('getData').rows[editIndex];
				            if (!(typeof datarow === 'undefined' || datarow == null)) {
				                datarow['COUNTRY'+'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
				            }
				        }
				    }
				},
				keyHandler: {
			        up: function (e) {
			            combogrid_upKey(this, e);
			        },
			        down: function (e) {
			            combogrid_downKey(this, e);
			        },
			        enter: function (e) {
			            combogrid_enterKey(this, e, $dg, 'COUNTRY', rowIndex);
			        },
			        query: function (q) {
			            combogrid_query(this, q, rowIndex, {});
			        }
			    }
			}
		};

		//开始编辑行时，赋值 联动数据
        function onBeginEdit(rowIndex, rowData) {
			var num = 0;
			var regx = /^\/Date\([0-9]+(\)\/)$/g;
            for (var i in rowData) {
			    if (regx.test(rowData[i])) {
			        rowData[i] = datetimeformatter(rowData[i]);
			    }
                var targetEditor = $dg.datagrid('getEditor', {
                    field: i,
                    index: rowIndex
                });
                //console.log("targetEditor", i, targetEditor);
                if (targetEditor) {
                    num++;
                    if (num == 1 && $(targetEditor.target).val() == '') {
                        $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                    }

                    var OldVal = targetEditor.oldHtml;
                    switch (targetEditor.type.toLowerCase()) {
                        case "combogrid":
                            //console.log(targetEditor);
                            var combogrid_Setting = combogrid_Settings[targetEditor.field];
                            if (combogrid_Setting) {
                                $(targetEditor.target).combogrid(combogrid_Setting);
                            }
                            if (!(typeof(OldVal) === 'undefined'|| OldVal == null || OldVal == '')) {
								if (rowData[targetEditor.field]) {
								    OldVal = rowData[targetEditor.field];
								}
								$(targetEditor.target).combogrid('setValue', OldVal);
								var opts = $(targetEditor.target).combogrid('options');
								var url = opts.url;
								//设置查询参数
								var queryParams = {
								    page: 1,
								    rows: opts.pageSize,
								    q: OldVal
								};
								$(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                            }
                            break;
                        case "combobox":
                            var opts = $(targetEditor.target).combobox({
                                inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        combobox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "textbox":
                            $(targetEditor.target).textbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "numberbox":
                            $(targetEditor.target).numberbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "datebox":
                            $(targetEditor.target).datebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "datetimebox":
                            $(targetEditor.target).datetimebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "checkbox":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "radio":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                    }
                }
            }
        }

        function endEditing() {
            if (editIndex == undefined)  
				return true; 
            if ($dg.datagrid('validateRow', editIndex)) {
				$dg.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }

        function onClickCell(index, field) {
			var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
            if ($.inArray(field, _operates) >= 0) {
                return;
            }
            if (editIndex != index) {
                if (endEditing()) {
                    @if (!Html.IsAuthorize("OPS_H_Orders", "Index", "Edit"))
                    {
                        @Html.Raw("$.messager.alert('提示', '您没有编辑权限！');");
                        @Html.Raw("return;\r\n");
                    }
					//动态设置 编辑样式
                    var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
					if(!(typeof(byteColumn)==='undefined'||byteColumn==null||byteColumn=='')){
						byteColumn.editor = {};
						byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
						byteColumn.editor = {};
						var byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
						byteColumn.editor = {
						    type: 'textbox',
						    options: {
						        required: false,
						        validType: 'length[0,20]'
						    }
						};
						byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
						byteColumn.editor = {
						    type: 'datebox',
						    options: {
						        required: false
						    }
						};
					}

                    $dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
		
		//加载成功
		function onLoadSuccess(rowdata) {
		    //行号自适应宽度
		    $(this).datagrid("fixRownumber");
		}

        function append() {
            if (endEditing()) {
                var NewRow = {};
                var Columns = $dg.datagrid('getColumnFields');
                for (var column in Columns) {
                    NewRow[Columns[column]] = null;
                }
				//动态设置 编辑样式
                var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
				if(!(typeof(byteColumn)==='undefined'||byteColumn==null||byteColumn=='')){
					byteColumn.editor = {
					    type: 'textbox',
					    options: {
					        required: false,
					        validType: 'length[0,20]'
					    }
					};
					byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
					byteColumn.editor = {
					    type: 'datebox',
					    options: {
					        required: false
					    }
					};
					byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
					byteColumn.editor = {};
					byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
					byteColumn.editor = {};
				}
				$dg.datagrid('insertRow', { index: 0, row: NewRow });
				editIndex = 0 ;
                $dg.datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
            }
        }

        function removeit() {
			var Seltdata = $dg.datagrid('getSelections');
			if (!(typeof editIndex === 'undefined'|| editIndex ==null || isNaN(editIndex)))
			{
			    $dg.datagrid('cancelEdit', editIndex);
			    editIndex = undefined;
			}
			for (var i = Seltdata.length; i > 0; i--) {
			    var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
			    //console.log(rowindex);
			    $dg.datagrid('deleteRow', rowindex);
			}
        }

        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
					var url = '/OPS_H_Orders/SaveData';
					$.ajax({
                        type: 'POST',
                        url: url,//获取数据的函数
                        async: true,//true 异步，false 同步
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                        beforeSend: function (xhr) {//发送请求前运行的函数
                            $.messager.progress({
                                title: '数据处理中',
                                msg: '数据处理中，请等待...'
                            });
                            //验证重复提交时 请加上 这句
                            AddAjaxActionGuidName(this);
                        },
                        success: function (response) {//查询成功,data为返回的数据
                            if (response.Success) {
                                $.messager.alert("提示", "提交成功！");
                                $dg.datagrid('acceptChanges');
                                $dg.datagrid('reload');
                            }
                            else {
								var ErrMsgStr = '提交错误了！';
								if(!(typeof(response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
									ErrMsgStr = response.ErrMsg;
                                $.messager.alert("错误", ErrMsgStr, 'error');
                            }
                        },
                        error: function () {//查询失败
                            $.messager.alert("错误", "提交错误了！", 'error');
                        },
                        complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                            $.messager.progress('close');
                        }
                    });
                }
                //$dg.datagrid('acceptChanges');
            }
        }

        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }

        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }

		$(function () {
           $dg.datagrid('enableFilter',[
				{
					field: 'Status',
					type: 'combobox',
					options: {
						panelHeight: 'auto',
                        data: [
							{ value: '', text: 'All' }, 
							{ value: 'true', text: '启用' }, 
							{ value: 'false', text: '停用' }
						],
                        onChange: function (value) {
                            if (value == '') {
                                $dg.datagrid('removeFilterRule', 'Status');
                            } else {
                                $dg.datagrid('addFilterRule', {
                                    field: 'Status',
                                    op: 'equal',
                                    value: value
                                });
                            }
							//自动添加 textbox 或 text的值
                            //AutoAddFilterRule($dg);
                            $dg.datagrid('doFilter');
						}
					}
				},
                //{
                //    field: 'UNIT',
                //    type: 'combogrid',
                //    options: {
                //        url: '/PARA_UNITS/GetPagerPARA_UNIT',
                //        method: 'get',
                //        multiple: false,
                //        panelHeight: 'auto',
                //        panelWidth: 205,
                //        idField: 'UNIT_CODE',
                //        valueField: 'UNIT_CODE',
                //        textField: 'UNIT_NAME',
                //        pageSize: 10,//每页显示的记录条数，默认为10
                //        pageList: [5, 10, 20],//可以设置每页记录条数的列表
                //        pagination: true,//是否分页
                //        columns: [[
                //            { field: 'UNIT_CODE', title: '代码', width: 53 },
                //            { field: 'UNIT_NAME', title: '名称', width: 150 }
                //        ]],
                //        keyHandler: {
                //            up: function (e) {
                //                combogrid_upKey(this, e);
                //            },
                //            down: function (e) {
                //                combogrid_downKey(this, e);
                //            },
                //            enter: function (e) {
                //                combogrid_enterKey(this, e, $dg, '', editIndex);
                //            },
                //            query: function (q) {
                //                combogrid_query(this, q, editIndex, {});
                //            }
                //        },
                //        onChange: function (value) {
                //            if (value == '') {
                //                $dg.datagrid('removeFilterRule', 'UNIT');
                //            } else {
                //                $dg.datagrid('addFilterRule', {
                //                    field: 'UNIT',
                //                    op: 'equal',
                //                    value: value
                //                });
                //            }
                //            //自动添加 textbox 或 text的值
                //            AutoAddFilterRule($dg);
                //            $dg.datagrid('doFilter');
                //        }
                //    }
                //},
			]);
		});

		//自动添加 textbox 或 text的值
		function AutoAddFilterRule($dg_)
		{
		    var ColumnsFields =$dg_.datagrid('getColumnFields');
		    $.each(ColumnsFields,function(i,ColumnName){
		        var input = $dg_.datagrid('getFilterComponent', ColumnName);
		        if(!(input.data("datebox") ||input.data("datetimebox") || input.data("combobox")|| input.data("checkbox") || input.data("combotree")|| input.data("combogrid") || input.data("numberbox"))){
		            var rule = $dg_.datagrid('getFilterRule',  ColumnName);
		            var value = input.val();
		            if (!(typeof(value)==='undefined'||value==null || value == '')) {
		                if ((rule && rule.value != value) || !rule) {
		                    $dg_.datagrid('addFilterRule', {
		                        field: ColumnName,
		                        op: 'equal',
		                        value: value
		                    });
		                }
		            } else {
		                if (rule) {
		                    $dg_.datagrid('removeFilterRule', ColumnName);
		                }
		            }
		        }
		    });
		}
		
		//-----------------------------------------------------
		//datagrid onSelect
		//-----------------------------------------------------
		function onSelect(index, row) {
            //console.log(index, row);
        }
 		
		//自适应页面大小
		function MyNavResize() {
		    var opts = $("#navbar-minimalize").NavResize('getOptions');
		    opts.Auto = false;
		    opts.OnNavResizefunc = function () {
		        //$("#edit_div_one").css('width', "100%");
		        //$("#edit_div_two").css('width', "100%");
		        //$("#OrderInfo").datagrid("resize", { width: "100%" });
		        //$("#OrderDetail").datagrid("resize", { width: "100%" });
		        //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
		        //$("#Order_Head_panel").panel("resize", { width: "100%" });
		        //setTimeout(function () {
		        //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
		        //    $("#edit_div_one").css(paddigLeftRight);
		        //    $("#edit_div_two").css(paddigLeftRight);
		        //    $("#OrderInfo").css(paddigLeftRight);
		        //    $("#OrderDetail").css(paddigLeftRight);
		        //    $("#ProductNameMerge").css(paddigLeftRight);
		        //    $("#Order_Head_panel").css(paddigLeftRight);
		        //    SetbuttonssWidth();
		        //}, 100);
		    };
		}
	 </script>
}

