@model AirOut.Web.Models.BmsBillAp_ArView
@{
    ViewBag.Title = "应收账单";
    int Num = 1;
    var ArrStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrAuditStatus = AirOut.Web.Extensions.Common.GetEnumToDic("AuditStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrUseStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusIsOrNoEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrBms_BillCreate_Status = AirOut.Web.Extensions.Common.GetEnumToDic("Bms_BillCreate_Status", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    
    object objAr = new AirOut.Web.Models.Bms_Bill_Ar();
    object objDtlAr = new AirOut.Web.Models.Bms_Bill_Ar_Dtl();
    if (!Model.IsBmsBillAr)
    {
        objAr = new AirOut.Web.Models.Bms_Bill_Ap(); 
        objDtlAr = new AirOut.Web.Models.Bms_Bill_Ap_Dtl();
        ViewBag.Title = "应付账单";
    }
    ViewData["Num"] = Num;
}
<!--回车下一个-->
<script src="~/Scripts/jsext.js?date=2019013001"></script>
<script type="text/javascript">
    var Ops_M_OrdId = @Model.OPS_M_Id;//主单号
    var Ops_H_OrdId = @Model.OPS_H_Id;//分单号
    var IsBmsBillAr = @(Model.IsBmsBillAr?"true":"false");//是否应收账单

    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
    $(document).ready(function () {
        initJcdt(); //初始化基础数据
        initPage();//初始化页面
    });
    //初始化基础数据
    function initJcdt() {

    }
    //初始化页面
    function initPage() {
        //////账册号
        ////$("#BOOKSNO").combogrid({
        ////    panelWidth: comgridWidth,
        ////    //panelHeight: 'auto',
        ////    fitColumns:true,
        ////    mode: 'remote',
        ////    idField: 'EMS_NO',
        ////    valueField: 'EMS_NO',
        ////    textField: 'EMS_NO',
        ////    url: '/EMS_HEADs/GetEMS_NOS',
        ////    columns: [[
        ////        { field: 'EMS_NO', title: '账册号', width: comfiledWidth },
        ////        { field: 'EMS_TYPE', title: '账册类型', width: comfiledWidth }
        ////    ]]
        ////});
    }
    //加载成功
    function onLoadSuccess(rowdata) {
        //行号自适应宽度
        $(this).datagrid("fixRownumber");
    }
    //自适应页面大小
    function MyNavResize() {
        //var opts = $("#navbar-minimalize").NavResize('getOptions');
        //opts.Auto = false;
        //opts.OnNavResizefunc = function () {
        //
        //};
    }
    //异步获取 提取 借用账册 强行提取 选择框
    var ArrIsLoadWin = {
        IsLoad@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap") : false
    };
    //AsyncGetMyWin(url, IsLoadMyWin, InitMyWinFucName, Async_Load) 扩展在jsext
    //导入
    function importexcel() {
        ////异步获取 提取 借用账册 强行提取 选择框
        //var retTF = AsyncGetMyWin('/ORDERS_SECLINE_HEADS/Get_ImportWinDialog','IsLoadImportWin',"InitImportWin()");
        //if(!retTF)
        //    return;
        var OrderId = getQueryString("id");
        var $winImpt = $('#importwindow');
        $winImpt.data('uploadifive').settings.uploadScript = '/ORDERS_SECLINE_HEADS/Get_ImportWinDialog';
        $winImpt.data('uploadifive').settings.formData = { 'ID': OrderId, 'modelType': 'ORDERS_SECLINE_PRODUCT' };
        $winImpt.window('open');
        $winImpt.window('center');
    }
    //导出
    function exportexcel() {
        $.messager.progress({ title: '正在执行导出！' });
        var inserted_product = $('#ProductNameMerge').datagrid('getRows');
        if (inserted_product.length > 0) {
            var postdata = { orders_secline_productStr: JSON.stringify(inserted_product) };
            var url = '/ORDERS_SECLINE_HEADs/ExportExcelProduct';
            $.DownLoadProgress({
                url: url,         //下载文件的url
                method: 'Post',   //链接打开方式
                data: postdata,         //要发送的数据
                downLoadInfo: '下载文件', //下载界面文字
                closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                callbackFuc: function () {
                    $.messager.progress('close');
                }
            });
        } else {
            $.messager.progress('close');
            $.messager.alert('提示！', '没有可以导出的数据。');
        }
    }
</script>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-8">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action(" index", "Home" )">主页</a>
            </li>
            <li>
                <a href="#">@ViewBag.Title</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title 信息</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-4">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
</div>
<div style="width:auto; height:1000px;">
    <div id="T_layout" class="easyui-layout" data-options="fit:false" style="height:930px; min-height:930px; margin-top:10px;">   
        <!--应收账单头信息（主单-委托-分单 数据拼接）-->
        <div data-options="region:'north',split:false" style="height:200px; min-height:200px;">
            @{
                Html.RenderPartial("../Bms_Bill_Ars/ArApContentView", Model, ViewData);
                //部分试图与主视图之间传递值用TempData 注：TempData使用过一次后就会销毁
                var NumStr = (TempData["Num"] ?? "").ToString();
                if (!string.IsNullOrEmpty(NumStr))
                {
                    int.TryParse(NumStr, out Num);
                }
            }
        </div>
        <div data-options="region:'center', split:false" style="height:672px; min-height:672px; padding:3px 3px">
            <div id="M_layout" class="easyui-layout" data-options="fit:true" style="height:660px; min-height:630px;">
                <div data-options="region:'center', split:false, border:true, title:'@(ViewBag.Title)'" style="border:0px; height:330px; min-height:310px;">                    
                    <!--应收账单信息（主单/委托 订单号查找）-->
                    @Html.Partial("ListView", objAr, ViewData)
                    <div id="@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_toolbar" style="height:auto; display:none;" class="datagrid-toolbar">
                        @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Create", "Create"))
                        {
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append.call(this)">新增</a>
                        }
                        @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Delete", "Delete"))
                        {
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" title="" onclick="removeit.call(this)">删除</a>
                        }
                        @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Edit", "Edit"))
                        {
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" title="" onclick="accept.call(this)">保存</a>
                        }
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" title="" onclick="reload.call(this)">刷新</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" title="" onclick="reject.call(this)">取消</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-check',plain:true" title="" onclick="settleaccount.call(this)">结算</a>
                        @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Audit", "Audit"))
                        {
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-check-circle',plain:true" title="" onclick="audit.call(this)">审核</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-check-circle',plain:true" title="" onclick="audit.call(this,1)">取消审核</a>
                        }
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-edit',plain:true" onclick="taxrateedit.call(this)">税金编辑</a>
                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-edit',plain:true,disabled:true" title="" id="btnAuditNo" onclick="EditAuditNo.call(this)">修改审核号</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-money',plain:true,disabled:true" title="" id="btnMoneyCode" onclick="ChangeMoney_Code.call(this)">变更币别</a>*@
                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-file',plain:true">实报实销</a>*@
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-link',plain:true" title="" onclick="RedictToApAr.call(this)">转到@(Model.IsBmsBillAr ? "应付" : "应收")</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-eye',plain:true" onclick="BmsBillApView.call(this)">查看@(Model.IsBmsBillAr ? "应付" : "应收")</a>
                    </div>                    
                    <!--应收账单明细信息（应收账单信息 查找）-->
                    @Html.Partial("../" + (!Model.IsBmsBillAr ? "Bms_Bill_Ap_Dtls" : "Bms_Bill_Ar_Dtls") + "/ListView", objDtlAr)
                </div>
            </div>
        </div>
        <!--应收账单审核信息（主单-委托-分单 数据拼接）-->
        <div data-options="region:'south',split:false" style="height:60px;">
            @{
                ViewData["Num"] = Num;
                Html.RenderPartial("../Bms_Bill_Ars/AuditView", Model, ViewData);
                //部分试图与主视图之间传递值用TempData 注：TempData使用过一次后就会销毁
                NumStr = (TempData["Num"] ?? "").ToString();
                if (!string.IsNullOrEmpty(NumStr))
                {
                    int.TryParse(NumStr, out Num);
                }
            }
        </div>
    </div>
</div>
<!--应收账单 明细 Tollbar-->
<div id="@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_dtl_toolbar_bak" style="height:auto; display:none;" class="datagrid-toolbar">
    @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Create", "Create"))
    {
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append.call(this)">新增</a>
    }
    @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Delete", "Delete"))
    {
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit.call(this)">删除</a>
    }
    @if (Html.IsAuthorize((!Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Edit", "Edit"))
    {
        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept.call(this)">保存</a>*@
    }
    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload.call(this)">刷新</a>
    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" title="" onclick="reject.call(this)">取消</a>
    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-list',plain:true" onclick="reload.call(this)">费用单列账单</a>
</div>
<!--应付账单 Tollbar-->
<div id="@(!Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_toolbar_bak" style="height:auto; display:none;" class="datagrid-toolbar">
    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true,iconAlign:'top'" title="" onclick="reload.call(this)">刷新</a>
    @if (Html.IsAuthorize((Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Import", "Import"))
    {
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true,iconAlign:'top'" onclick="exportexcel.call(this)">导出 Excel</a>
    }
</div>
<!--应付账单 明细Tollbar-->
<div id="@(!Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_dtl_toolbar_bak" style="height:auto; display:none;" class="datagrid-toolbar">
    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true,iconAlign:'top'" title="" onclick="reload.call(this)">刷新</a>
    @if (Html.IsAuthorize((Model.IsBmsBillAr ? "Bms_Bill_Aps" : "Bms_Bill_Ars"), "Import", "Import"))
    {
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true,iconAlign:'top'" onclick="exportexcel.call(this)">导出 Excel</a>
    }
</div>
<!--导入弹出框-->
<div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
    <p><input type="file" name="file_upload" id="file_upload" /></p>
</div>
<!--用于后端 加载dom并且渲染成EasyUI样式-->
<div id="EasyUIDom" style="height:35px; clear:both; border:0 solid;"></div>

<script>
    const ArrStatus = @Html.Raw(ArrStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrStatus));//数据状态
    const ArrAuditStatus = @Html.Raw(ArrAuditStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrAuditStatus));//数据审核状态
    const ArrUseStatus = @Html.Raw(ArrUseStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrUseStatus));//数据bool状态
    const ArrBms_BillCreate_Status = @Html.Raw(ArrBms_BillCreate_Status == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrBms_BillCreate_Status));//账单产生标志

    const Editable = '@Html.IsAuthorize((Model.IsBmsBillAr ? "Bms_Bill_Ars" : "Bms_Bill_Aps"), "Index", "Edit")';//编辑权限
    const BmsBillApViewTital = '@(Model.IsBmsBillAr ? "应付" : "应收")账单';//切换Layout-East显示应收/应付账单
    const Curr$dgCtrl = '@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")'; //当前dg是应收/应付账单 id前缀
    //与当前操作主dg 取反（应收-应付）
    const EastPanelloaderCtrl = '/@(Model.IsBmsBillAr ? "Bms_Bill_Ap" : "Bms_Bill_Ar")';//切换Layout-East显示应收/应付账单 Url
    const East$dgtoolbarName = '@(Model.IsBmsBillAr ? "bms_bill_ap" : "bms_bill_ar")'; //切换Layout - East显示应收 / 应付账单 导航条id前缀
    const East$dgTitleName = '@(Model.IsBmsBillAr ? "应付" : "应收")账单'; //切换Layout - East显示应收 / 应付账单 导航条id前缀

    var TotalStr = '@(ViewData["TotalStr"]??"")';//应收 数据 合计&毛利

    var $dg = null;//当前操作的datagrid
    var editIndex = undefined;//当前datagrid 操作行号

    //获取是否是应收账单
    function getIsBmsBillAr(){
        if(typeof IsBmsBillAr ==='bool')
            return IsBmsBillAr;
        else{
            if(Curr$dgCtrl == "bms_bill_ar")
                IsBmsBillAr='true';
            else
                IsBmsBillAr='false';
            return IsBmsBillAr;
        }
    }
    //跳转 应收/应付
    function RedictToApAr(){
        var Top_href = EastPanelloaderCtrl+"s"+EastPanelloaderCtrl.replace(/_/g,'')+"View?";
        if(Ops_M_OrdId>0)
            window.location.href = Top_href+"Ops_M_OrdId="+Ops_M_OrdId;
        else if(Ops_H_OrdId>0)
            window.location.href = Top_href+"Ops_H_OrdId="+Ops_H_OrdId;
        else{
            $.messager.alert('错误', '无法跳转到 '+East$dgTitleName);
            return false;
        }
    }
    //查看应付账单
    function BmsBillApView() {
        let $layout = $("#M_layout");
        let opts = $layout.layout('options');
        let C_panel = $layout.layout("panel", 'center');
        let C_opts = C_panel.panel('options');
        let E_panel = $layout.layout("panel", 'east');
        let $bbar_dg = $("table.easyui-datagrid.datagrid-f", C_panel);//$("#"+Curr$dgCtrl+"_datagrid", C_panel);

        //重置Panel与datagrid宽度和高度
        let Owidth = { width: opts.width / 2 };
        if (typeof (E_panel) === 'undefined' || E_panel == null || E_panel.length <= 0) {
            let newlayoutOPTs = {
                width: Owidth.width,
                height: C_opts.height,
                region: 'east',
                split: false,
                border: true,
                collapsible: true,
                hideCollapsedContent: false,
                title: BmsBillApViewTital,
                onExpand: onExpandCollapse,
                onCollapse: onExpandCollapse,
                //href: '/Bms_Bill_Aps/ListView',
                //onLoad: PanelonLoad,
                //cache:true,
                //loader:Panelloader,//必须设置Panel 的 href，不然不会触发
            };
            $layout.layout("add", newlayoutOPTs);
            C_panel.panel("resize", Owidth);
            $.each($bbar_dg,function(i,item){
                //var item = $bbar_dg[i];
                let dgopts = $(item).datagrid('options');
                dgopts.width = Owidth.width-10;
                dgopts.height = C_opts.height/2;
                $("span.l-btn-left", dgopts.toolbar).removeClass("l-btn-icon-left").addClass("l-btn-icon-top");
                let $item_panel = $(item).datagrid('getPanel');
                $item_panel.css({ "border-right": 0});
                //Owidth["height"] = dgopts.height;
                //$(item).datagrid('resize', Owidth);
                //$(item).datagrid('resize',{Height:C_opts.height/2-10});
                //$(item).datagrid('resize');
                $item_panel.panel('resize',{ width:opts.width / 2, height:C_opts.height/2-14});
            });
            //异步加载East-Panel
            Panelloader();
            C_panel.siblings("div.panel-header:first").css({ "border-right": 0 });
        } else {
            let E_opts = E_panel.panel('options');
            let E_body = E_panel.panel('body');
            if (E_opts.collapsed) {
                $layout.layout('expand', 'east');
            } else {
                $layout.layout('collapse', 'east');
            }
        }
    }
    //利用Panel onLoad 方法触发 加载后事件
    function PanelonLoad() {
        let $layout = $("#M_layout");
        var opts = $layout.layout('options');
        let Owidth = { width: opts.width / 2 };
        E_panel = $layout.layout("panel", 'east');
        if (!(typeof (E_panel) === 'undefined' || E_panel == null || E_panel.length <= 0)) {
            var Pbody = E_panel.panel('body');
            InitEast_dg($(Pbody.find("table.easyui-datagrid")[0]));
            console.log(Pbody, $(Pbody.find("table.easyui-datagrid")[0]).datagrid('options'));
        }
    }
    //异步加载 触发 加载后事件
    function Panelloader(Pparam, Psuccess, Perror) {
        let $layout = $("#M_layout");
        let opts = $layout.layout('options');
        let C_panel = $layout.layout("panel", 'center');
        let E_panel = $layout.layout("panel", 'east');
        let Pbody = E_panel.panel('body');
        E_panel.html('<div class="panel-loading">加载中...</div>');
        if (!(typeof (E_panel) === 'undefined' || E_panel == null || E_panel.length <= 0)) {
            $.ajax({
                url: EastPanelloaderCtrl + 's/Dtl_ListView',
                dataType: 'html',
                success: function (data) {
                    Pbody.html(data);
                    $.parser.parse(Pbody);
                    let ArrEast$dg =  $(Pbody.find("table.easyui-datagrid"));
                    let ArrCenter$dg =  $("table.easyui-datagrid",C_panel);
                    $.each(ArrEast$dg,function(i,item){
                        let East$dg = $(item);
                        let $panel = East$dg.datagrid('getPanel');
                        //触发 加载后事件
                        InitEast_dg(East$dg,$(ArrCenter$dg[i]));
                        ////重置Panel与datagrid宽度和高度
                        //let Owidth = { width: opts.width / 2-4 };
                        //$panel.panel('resize', Owidth);
                        //East$dg.datagrid('resize');

                        if(East$dg.attr("id").indexOf('_dtl_datagrid')<0)
                            East$dg.datagrid('reload');
                    });
                },
                error: function (e) {
                    console.log('加载Panel 错误', e);
                    E_panel.html('<div>数据加载错误...</div>');
                }
            });
        }
        else {
            $.messager.alert('错误', '加载Panel 错误：Panel不存在');
        }
    }
    //触发 加载后事件
    function InitEast_dg(East$dg,Center$dg) {
        let C_opts = Center$dg.datagrid('options');
        let opts = East$dg.datagrid('options');
        let toolbarName = East$dgtoolbarName;
        opts.url = EastPanelloaderCtrl + 's/GetData';
        if(East$dg.attr('id').indexOf('_dtl_datagrid')>0){
            opts.url = EastPanelloaderCtrl + '_Dtls/GetData';
            toolbarName = East$dgtoolbarName+"_dtl";
        }
        opts.toolbar = "#" + toolbarName + "_toolbar";
        opts.fit = true;
        opts.border = false;
        opts.onSelect = onSelect;
        //opts.onClickCell = onClickCell;
        //opts.onBeginEdit = onBeginEdit;
        //设置获取参数
        opts.queryParams = {
            page: 1,
            rows: opts.pageSize,
            sort: opts.sortName,
            order: opts.sortOrder,
            filterRules:[]
        };
        if(Ops_M_OrdId>=0)
            opts.queryParams.filterRules.push({field:"Ops_M_OrdId",op:'equles',value: Ops_M_OrdId});
        if(Ops_H_OrdId>=0)
            opts.queryParams.filterRules.push({field:"Ops_H_OrdId",op:'equles',value: Ops_H_OrdId});
        opts.queryParams.filterRules = JSON.stringify(opts.queryParams.filterRules);
        var $panel = East$dg.datagrid('getPanel');
        //复制Toolbar
        var toolbar = $("#" + toolbarName + "_toolbar_bak").clone().attr('id', toolbarName + "_toolbar").css({ display: '' });
        if(East$dg.attr('id').indexOf('_dtl_datagrid')>0){
            $("span.l-btn-left", $(toolbar)).removeClass("l-btn-icon-top").addClass("l-btn-icon-left");
            $panel.css({ "border-left": 0, "border-right": 0,'border-bottom': 0,'border-top': "1px solid #ddd" });
        }else
            $panel.css({ "border": 0, 'border-bottom': 0 });
        $panel.prepend(toolbar);
        //去除边框
        $panel.removeClass('panel-body-noheader');
        $panel.panel('resize',{height:C_opts.height-1});
    }
    //当Panel 展开/折叠时
    function onExpandCollapse() {
        let collapseBtnWidth_Height = 28;//折叠区域宽度/高度
        let $layout = $("#M_layout");
        let L_opts = $layout.layout('options');
        let C_panel = $layout.layout("panel", 'center');
        let C_opts = C_panel.panel('options');
        let E_panel = $layout.layout("panel", 'east');
        let S_panel = $layout.layout("panel", 'south');
        let S_opts ={};
        if(!(typeof(S_panel)==='undefined'||S_panel==null||S_panel.length<=0))
            S_opts = S_panel.panel('options');
        let $Panel = $(this);
        let Arr$Panel = $Panel.parent().siblings('.panel.layout-panel');
        let opts = $Panel.panel('options');
        //重置Panel与datagrid宽度和高度
        //let OSize = { width: L_opts.width / 2, height: L_opts.height - S_opts.height };
        //if (S_opts.collapsed) {
        //    OSize.height = L_opts.height - collapseBtnWidth_Height;
        //}
        let OSize = { width: L_opts.width / 2 };
        if (opts.cls.indexOf('layout-panel-south') > 0) {
            $.each(Arr$Panel, function (i, elem) {
                if ($(elem) != $Panel) {
                    let $dg = $(elem).find('table.easyui-datagrid.datagrid-f');
                    let _$panel = $(elem).find('div.panel-body.layout-body');
                    let _$dgpager = $(elem).find('div.datagrid-pager.pagination');
                    if (typeof (E_panel) === 'undefined' || E_panel == null || E_panel.length <= 0) {
                        OSize.width = L_opts.width;
                        //OSize.height -= 1;
                    } else {
                        let E_opts = E_panel.panel('options');
                        if (E_opts.collapsed) {
                            OSize.width = L_opts.width;
                            if ($(elem) != E_panel)
                                OSize.width -= collapseBtnWidth_Height;
                        } else {
                            E_panel.css({ "border-bottom": 0 });
                        }
                    }
                    _$panel.panel("resize", OSize);
                    setTimeout(function () {
                        if ($dg.length > 0) {
                            $dg.datagrid('options').width = OSize.width;
                            $dg.datagrid('resize', OSize);
                        }
                    }, 1);
                }
            });
        } else if (opts.cls.indexOf('layout-panel-east') > 0) {
            let Arrbbar_dg = $("table.easyui-datagrid.datagrid-f", C_panel);
            $.each(Arrbbar_dg,function(i,item){
                let $bbar_dg =$(item);
                let ar_dgopts = $bbar_dg.datagrid('options');
                if (opts.collapsed) {
                    $("span.l-btn-left", ar_dgopts.toolbar).removeClass("l-btn-icon-top").addClass("l-btn-icon-left");
                    OSize.width = L_opts.width - collapseBtnWidth_Height;
                } else {
                    $("span.l-btn-left", ar_dgopts.toolbar).removeClass("l-btn-icon-left").addClass("l-btn-icon-top");
                    E_panel.css({ "border-bottom": '' });
                    if (E_panel.html().indexOf('数据加载错误') > 0) {
                        //异步加载East-Panel
                        Panelloader();
                    }else {
                        let Pbody = E_panel.panel('body');
                        let East$dg = $(Pbody.find("table.easyui-datagrid")[0]);
                        if (East$dg)
                            East$dg.datagrid('reload');
                    }
                }
                //panel中的 datagrid个数
                var dgNum = $("table.easyui-datagrid.datagrid-f", C_panel).length;
                //OSize.height = OSize.height/dgNum;
                C_panel.panel("resize", OSize);
                setTimeout(function () {
                    ar_dgopts = OSize.width;
                    $bbar_dg.datagrid('getPanel').panel('resize', OSize);
                }, 1);
            });

            ////panel中的 datagrid个数
            //var E_dgNum = $("table.easyui-datagrid.datagrid-f", E_panel);
            //OSize.height = OSize.height/E_dgNum;
            //E_panel.panel("resize", OSize);
            //let $bbap_dg = $('table.easyui-datagrid.datagrid-f', E_panel);
            //if ($bbap_dg.length > 0) {
            //    let ap_dgopts = $bbap_dg.datagrid('options');
            //    ap_dgopts.width = OSize.width;
            //    $bbap_dg.datagrid('getPanel').panel('resize', OSize);
            //}
        }
    }

    //datagrid  键盘事件(写在 jsext/EasyUIDataGrid_ControlNext 文件中)
    //var dg_keyHandler = dg_keyHandler;
    //datagrid 编辑时的 combogrid通用参数设置
    var dg_combo_coSettings = combogrid_DefaultSettings;
    //datagrid 编辑时的 combogrid参数设置
    var Arrcombogrid_Settings = {};
    Arrcombogrid_Settings = function setInitCombogridSettings(){
        var _Arrcombogrid_Settings ={};
        _Arrcombogrid_Settings[Curr$dgCtrl + '_datagrid'] = {
            'COUNTRY': $.extend({}, dg_combo_coSettings, {
                required: true,
                url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY_FromCache',
                idField: 'COUNTRY_CO',
                valueField: 'COUNTRY_CO',
                textField: 'COUNTRY_NA',
                columns: [[
                    { field: 'COUNTRY_CO', title: '代码', width: 53 },
                    { field: 'COUNTRY_NA', title: '名称', width: 150 }
                ]],
                onChange: function (value) {
                    var targetEditor = $dg.datagrid('getEditor', {
                        field: 'COUNTRY',
                        index: editIndex
                    });
                    if (targetEditor != null) {
                        var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
                        if (Selted) {
                            var datarow = $dg.datagrid('getData').rows[editIndex];
                            if (!(typeof datarow === 'undefined' || datarow == null)) {
                                datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
                            }
                        }
                    }
                }
            }),
            'Money_Code': $.extend({}, dg_combo_coSettings, {
                required: true,
                disabled: true,
                url: '/PARA_Currs/GetPagerPARA_CURR_FromCache',
            }),
            'Org_Money_Code': $.extend({}, dg_combo_coSettings, {
                required: true,
                url: '/PARA_Currs/GetPagerPARA_CURR_FromCache',
            }),
            'Bill_Object_Id': $.extend({}, dg_combo_coSettings, {
                required: true,
                url: '/CusBusInfos/GetPagerCusBusInfos_FromCache',
                onChange: function () {
                    console.log(arguments);
                    var Selted = $(this).combogrid('grid').datagrid('getSelected');
                    if (Selted) {
                        var datarow = $dg.datagrid('getData').rows[editIndex];
                        if (!(typeof datarow === 'undefined' || datarow == null)) {
                            datarow["Bill_Object_Name"] = Selted[$(this).combogrid('options').textField];
                        }
                    }
                }
            }),
            'Status':$.extend({}, dg_combo_coSettings, {
                required: true,
                mode:'local',
                pagination: false,
                data:ArrStatus
            }),
            'AuditStatus':$.extend({}, dg_combo_coSettings, {
                required: true,
                mode:'local',
                pagination: false,
                data:ArrAuditStatus
            }),
        };
        //明细
        _Arrcombogrid_Settings[Curr$dgCtrl + '_dtl_datagrid'] = {
            'Status':$.extend({}, dg_combo_coSettings, {
                required: true,
                mode:'local',
                pagination: false,
                data:ArrStatus
            }),
        };
        //bool状态
        var ArrboolCol = [
            /*应收/应付*/
            "Create_Status",//产生标志
            "Jk_Status",//集卡产生标志
            "Ishk_Status", //记录是否传入香港
            "Sbsx_Status",//实报实销状态
            "Dsdf_Status",//代收代付状态
            /*应收/应付-明细*/
            //"Create_Status",//产生标志
            "Invoice_Status",//开票标志
            "Chalk_Status",//签收标志
            "Collate_Status",//对帐标志
            "Refer_Status",//提交标志
            "Blank_Status",//销帐标志
            "Special_Status",//专项标志
            "Invos_Status",//开票后修改标志
        ];
        //设置combogrid-bool状态
        for(var i in _Arrcombogrid_Settings){
            for(var ii in ArrboolCol){
                _Arrcombogrid_Settings[i][ArrboolCol[ii]] = $.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrUseStatus
                });
            }
        }
        return _Arrcombogrid_Settings;
    }();

    //获取当前操作dg
    function getCurrent$dg(obj){
        let type = typeof(obj);
        if(!( type ==='undefined' || obj === window || obj == null )){
            let _$dg = $(obj).parent().siblings(".datagrid-view").children("table.easyui-datagrid");
            if (typeof (_$dg) === 'undefined' || _$dg == null || _$dg.length <= 0) {
                if (typeof (editIndex) === 'undefined' || editIndex == null || editIndex < 0) {
                    $.messager.alert('提示', '无法找到datagrid或没有正在编辑的('+editIndex+')行！');
                    return false;
                }
            } else
                $dg = _$dg;
            return true;
        }else{
            $.messager.alert('提示', '无法找到datagrid！');
            return false;
        }
    }
    //开始编辑行时，赋值 联动数据
    function onBeginEdit(rowIndex, rowData) {
        //console.log(this);
        $dg = $(this);
        var num = 0;
        var regx = /^\/Date\([0-9]+(\)\/)$/g;
        for (var i in rowData) {
            //时间格式转换
            if (regx.test(rowData[i])) {
                rowData[i] = datetimeformatter(rowData[i]);
            }
            var targetEditor = $dg.datagrid('getEditor', {
                field: i,
                index: rowIndex
            });
            //console.log("targetEditor", i, targetEditor);
            if (targetEditor) {
                num++;
                if (num == 1 && $(targetEditor.target).val() == '') {
                    $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                }
                var OldVal = targetEditor.oldHtml;
                switch (targetEditor.type.toLowerCase()) {
                    case "combogrid":
                        //console.log(targetEditor);
                        let combogrid_Setting = Arrcombogrid_Settings[$(this).attr('id')][targetEditor.field];
                        if (combogrid_Setting) {
                            if(targetEditor.field =="Money_Code" ){//新增时不设置 禁用
                                if(rowData.Id==0)//新增时不设置 禁用
                                    combogrid_Setting.disabled = false;
                                else
                                    combogrid_Setting.disabled = true;
                            }
                            //设置 combogrid 参数（回车下一个等）利用JS闭包原理，让js不回收变量
                            var fnGetcmgrid_Setting = function (_combogrid_Setting,field, _rowIndex) {
                                return $.extend(combogrid_Setting, {
                                    onLoadSuccess: function (data) {
                                        ondgLoadSuccess($dg, field, _rowIndex);
                                    }
                                }, dg_keyHandler);
                            };
                            $(targetEditor.target).combogrid(fnGetcmgrid_Setting(combogrid_Setting, targetEditor.field, rowIndex));
                            //设置Combogrid 分页控件 简单模式
                            SetCombogridPager(targetEditor.target);
                        }
                        if (!(typeof (OldVal) === 'undefined' || OldVal == null || OldVal == '')) {
                            if (rowData[targetEditor.field]) {
                                OldVal = rowData[targetEditor.field];
                            }
                            $(targetEditor.target).combogrid('setValue', OldVal);
                            var opts = $(targetEditor.target).combogrid('options');
                            var url = opts.url;
                            //设置查询参数
                            var queryParams = {
                                page: 1,
                                rows: opts.pageSize,
                                q: OldVal
                            };
                            $(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                        }
                        break;
                    case "combobox":
                        var opts = $(targetEditor.target).combobox({
                            inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                keydown: function (event) {
                                    dg_combobox_keydown(this, event, $dg, rowIndex);
                                }
                            })
                        });
                        setTargetVal(targetEditor, OldVal);
                        break;
                    case "textbox":
                    case "numberbox":
                    case "datebox":
                    case "datetimebox":
                        var data = $(targetEditor.target).data();
                        var options = {
                            inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                keydown: function (event) {
                                    dg_Listtextbox_keydown(this, event, $dg, rowIndex);
                                }
                            })
                        };
                        if(targetEditor.field=='AuditNo')
                            options["disabled"] = true;
                        //var $txtbox = $(data.textbox).find("input.textbox-text");
                        var $target = $(targetEditor.target);
                        $target.textbox(options);
                        setTargetVal(targetEditor, OldVal);

                        //var data = $(targetEditor.target).data();
                        //var options = {
                        //    inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                        //        keydown: function (event) {
                        //            dg_Listtextbox_keydown(this, event, $dg, rowIndex);
                        //        }
                        //    })
                        //};
                        //data.textbox.options.inputEvents = options.inputEvents;
                        //var tb = data.textbox.textbox;//span 嵌套了ipunt
                        //var _501 = tb.find("input.textbox-text");//展示的input
                        //var _502 = "keydown";//动作
                        //var _4ff =targetEditor.target;//需要EasyUI渲染的input
                        //_501.bind(_502+".textbox",{target:_4ff},options.inputEvents[_502]);

                        //if(targetEditor.field=='AuditNo'){
                        //    options["disabled"] = true;
                        //    data.textbox.options.disabled = true;
                        //    var ss=$(_4ff).add(tb.find(".textbox-value"));
                        //    if(data.textbox.options.disabled){
                        //        _501.validatebox("disable");
                        //        tb.addClass("textbox-disabled");
                        //        ss.attr("disabled","disabled");
                        //        $(data.label).addClass("textbox-label-disabled");
                        //    }else{
                        //        _501.validatebox("enable");
                        //        tb.removeClass("textbox-disabled");
                        //        ss.removeAttr("disabled","disabled");
                        //        $(data.label).removeClass("textbox-label-disabled");
                        //    }
                        //    //if(data.textbox.options.readonly){
                        //    //    _50d.triggerHandler("blur.textbox");
                        //    //}else{
                        //    //    _50d.validatebox("readonly",opts.readonly);
                        //    //    tb.removeClass("textbox-readonly").addClass(opts.readonly?"textbox-readonly":"");
                        //    //}

                        //    //_4e7(_4ff,data.textbox.options.disabled);
                        //    //_4e8(_4ff,opts.readonly);
                        //}
                        //setTargetVal(targetEditor, OldVal);
                        break;
                    case "checkbox":
                    case "radio":
                        $(targetEditor.target).keydown(function (e) {
                            dg_chk_rdo_keydown(this, e, $dg, rowIndex);
                        });
                        setTargetVal(targetEditor, OldVal);
                        break;
                }
            }
        }
    }
    //选中行
    function onSelect(index, row) {
        //console.log(this, index, row);
        $dg = $(this);
        let id= $dg.attr('id');
        let opts = $dg.datagrid('options');
        if(opts.url.indexOf('_Dtls/GetData')<=0){
            id = id.replace("_datagrid","_dtl_datagrid");
            let $Dtldg = $("#"+id);
            $Dtldg.datagrid('clearSelections').datagrid('clearChecked');
            let dtlopts = $Dtldg.datagrid('options');
            //获取明细数据 关联字段名
            let ColDtlRefIdName = getDtlRefId($dg);//Bms_Bill_Ar_Id
            dtlopts.queryParams = {
                page: 1,
                rows: dtlopts.pageSize,
                sort: dtlopts.sortName,
                order: dtlopts.sortOrder,
                filterRules:JSON.stringify([{field:ColDtlRefIdName,op:'equles',value: row.Id}])
            };
            $Dtldg.datagrid('reload');
            //设置 审核数据
            setAuditVal(row);
            //启用button 修改审核号/变更币别
            enableLinkbutton();

            //if(typeof(dtlopts.queryParams)==='undefined'||opts.queryParams==null){
            //    dtlopts.queryParams = {
            //        page: 1,
            //        rows: dtlopts.pageSize,
            //        sort: dtlopts.sortName,
            //        order: dtlopts.sortOrder
            //    };
            //}else{
            //    if(typeof(dtlopts.queryParams.filterRules)==='undefined'||dtlopts.queryParams.filterRules==null){
            //        dtlopts.queryParams.filterRules =[{field:ColDtlRefIdName,op:'equles',value: row.Id}];
            //    }else{
            //        let filterRules={};
            //        if(typeof(dtlopts.queryParams.filterRules)==='string'){
            //            filterRules=JSON.parse(dtlopts.queryParams.filterRules);
            //        }else{
            //            filterRules = dtlopts.queryParams.filterRules;
            //        }
            //        let hasColDtlRefIdName = false;
            //        filterRules.each(function(i,item){
            //            if(item.field ==ColDtlRefIdName){
            //                item.value= row.Id;
            //                hasColDtlRefIdName = true;
            //                return;
            //            }
            //        });
            //        if(!hasColDtlRefIdName){
            //            filterRules.push({field:ColDtlRefIdName,op:'equles',value: row.Id});
            //        }
            //    }
            //}
        }
    }
    //取消选中行
    function onUnselect(index,row){
        $dg = $(this);
        let id= $dg.attr('id');
        let opts = $dg.datagrid('options');
        if(opts.url.indexOf('_Dtls/GetData')<=0){
            var Selted = $dg.datagrid("getSelected");
            if(Selted==null){
                id = id.replace("_datagrid","_dtl_datagrid");
                let $Dtldg = $("#"+id);
                let dtlopts = $Dtldg.datagrid('options');
                //获取明细数据 关联字段名
                let ColDtlRefIdName = getDtlRefId($dg);//Bms_Bill_Ar_Id
                dtlopts.queryParams.filterRules=JSON.stringify([{field:ColDtlRefIdName,op:'equles',value: 0}]);
                $Dtldg.datagrid('reload');
            }
        }
    }
    //设置 不需要编辑的字段
    var Arr$dgNoEditorSet={};
    //设置 不需要编辑的字段
    var ColEditorNull = function(){
        return [
            "ADDWHO",
            "ADDTS",
            "Bill_Object_Name",//客户名称
            "AuditId",//审核人Id
            "Cancel_Id",//作废人Id
            "Chalk_Id",//签收人Id
            "Collate_Id",//对帐人Id
            "Invoice_Id",//发票人Id
            "Blank_Id",//销帐人Id
            "User_Id",//操作人员
        ];
    }();
    function Set$dgNoEditor(_$dg){
        var IsSet = false;//是否设置过
        var funcSet = function(_ColEditorNull){
            if(!IsSet){
                for(var i in ColEditorNull){
                    var Column = _$dg.datagrid('getColumnOption', ColEditorNull[i]);
                    if (!(typeof (Column) === 'undefined' || Column == null || Column == '')) {
                        Column.editor = {};
                    }
                }
            }
        };
        return {
            IsSet:IsSet,
            ColEditorNullColumn:ColEditorNull,
            Set:funcSet
        }
    }
    //点击单元格
    function onClickCell(index, field) {
        //console.log(this);
        $dg = $(this);
        var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
        if ($.inArray(field, _operates) >= 0) {
            return;
        }
        if (editIndex != index) {
            if (endEditing()) {
                //是否有权限编辑
                if (!Editable) {
                    $.messager.alert('提示', '您没有编辑权限！');
                    return;
                }
                var O$dgNoEditorSet =Arr$dgNoEditorSet[$dg.attr('id')];
                if(typeof(O$dgNoEditorSet)==='undefined'||O$dgNoEditorSet==null||O$dgNoEditorSet==''){
                    for(var i in ColEditorNull){
                        var Column = $dg.datagrid('getColumnOption', ColEditorNull[i]);
                        if (!(typeof (Column) === 'undefined' || Column == null || Column == '')) {
                            Column.editor = {};
                        }
                    }
                    Arr$dgNoEditorSet[$dg.attr('id')] = 1;
                }

                $dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                var ed = $dg.datagrid('getEditor', { index: index, field: field });
                if (ed) {
                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                }
                editIndex = index;
            } else {
                $dg.datagrid('selectRow', editIndex);
            }
        }
    }
    //双击行
    function onDblClickRow(index, row) {
        var $dg = $(this);
        var IsLoadName = 'IsLoad'+Curr$dgCtrl;
        //销毁弹出框
        DestoryPoupWinFunc();
        ArrIsLoadWin[IsLoadName] = false;//不要异步 每次都获取
        var EditUrlParam = "";
        if($dg.attr('id').indexOf('_dtl_datagrid')<0){
            EditUrlParam = "&Id="+row.Id;
        }else
            EditUrlParam = "&DtlId="+row.Id;
        var url = '/Bms_Bill_Ars/AddEdit_PopupWin?Ops_M_OrdId='+Ops_M_OrdId+'&Dzbh='+$("#Operation_Id").textbox('getValue')+'&IsBmsBillAr='+getIsBmsBillAr()+EditUrlParam;
        //异步获取 数据
        AsyncGetMyWin(url,IsLoadName , 'InitAddEdit_PopupWinFuc();', true);
        if($("#AddEdit_PoupWin"))
            $("#AddEdit_PoupWin").window('open');
        return false;
    }
    //结束编辑
    function endEditing() {
        if (editIndex == undefined)
            return true;
        if ($dg.datagrid('validateRow', editIndex)) {
            $dg.datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }
    //刷新
    function reload() {
        //console.log(this);
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        if($dg.attr('id').indexOf('_dtl_datagrid')<0){
            //设置 审核数据 为空
            setAuditVal({});
        }else{
            //let _$dg = $("#"+$dg.attr('id').replace('_dtl_datagrid','_datagrid'));
            //let Selted = _$dg.datagrid("getSelected");
            //if(typeof(Selted)==='undefined'||Selted==null||Selted.length<=0)
            //{
            //    $.messager.alert("Warning","查看明细数据必须选择主数据");
            //    return false;
            //}
        }
        reject();//回滚所有变更
        $dg.datagrid('reload');
    }
    //添加
    function append() {
        //console.log(this);
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        //弹出编辑框
        var $dgId = $dg.attr("id");
        var IsDtlAppend = false;
        var DtlHeadId =0;
        if($dgId.indexOf("_dtl_datagrid")>0){
            IsDtlAppend = true;
            var $dgHead = $("#"+$dgId.replace("_dtl_datagrid","_datagrid"));
            var ArrHeadSeltRows = $dgHead.datagrid('getSelections');
            var type = typeof(ArrHeadSeltRows);
            if(type==='undefined' || ArrHeadSeltRows==null ||ArrHeadSeltRows.length<=0 ){
                $.messager.alert("警告","请选择一条主数据，再添加");
                return false;
            }else if(ArrHeadSeltRows.length!=1){
                $.messager.alert("警告","每次只能选择一条主数据，添加");
                return false;
            }else
                DtlHeadId = ArrHeadSeltRows[0].Id;
            for(i = 0;i < ArrHeadSeltRows.length;i++){
                if(ArrHeadSeltRows[i].AuditStatus == 2)
                {
                    $.messager.alert("警告","编辑 应收数据，已审核，无法操作！");
                    return false;
                }
            }
        }
        var IsLoadName = 'IsLoad'+Curr$dgCtrl;
        DestoryPoupWinFunc();//销毁弹出框及js
        ArrIsLoadWin[IsLoadName] = false;//不要异步 每次都获取
        var url = '/Bms_Bill_Ars/AddEdit_PopupWin?Ops_M_OrdId='+Ops_M_OrdId+'&Dzbh='+$("#Operation_Id").textbox('getValue')+'&IsBmsBillAr='+getIsBmsBillAr();
        if(IsDtlAppend)
            url +="&DtlHeadId="+DtlHeadId;
        else
            url +='&Settle_Code='+$("#Settle_Code").val();
        //异步获取 数据
        AsyncGetMyWin(url,IsLoadName , 'InitAddEdit_PopupWinFuc();', true);
        if($("#AddEdit_PoupWin"))
            $("#AddEdit_PoupWin").window('open');
        return false;

        if (endEditing()) {
            var NewRow = {};
            var Columns = $dg.datagrid('getColumnFields');
            for (var column in Columns) {
                var ColName = Columns[column];
                NewRow[ColName] = null;
            }
            //赋值主要字段
            NewRow['Id'] =  0;
            NewRow['Ops_M_OrdId'] =  Ops_M_OrdId;
            NewRow['Ops_H_OrdId'] =  Ops_H_OrdId;
            NewRow['Dzbh'] = $("#Operation_Id").textbox('getValue');
            NewRow['Status'] = 1;
            NewRow['AuditStatus'] = 1;

            //获取明细数据 关联字段名
            var ColIdName = getDtlRefId($dg);//Bms_Bill_Ar_Id
            //验证 是否可添加 明细
            var SeltdRow = $("#"+Curr$dgCtrl+"_datagrid").datagrid('getSelected');
            if(SeltdRow){
                if($.inArray(ColIdName,Columns)>=0){
                    if(typeof(SeltdRow.Id)==='undefined'||SeltdRow.Id==null||SeltdRow.Id<=0){
                        $.messager.alert('Warning','添加 明细数据时，必须先保存 主数据');
                        return false;
                    }
                }
                NewRow[ColIdName] = SeltdRow.Id;
            }
            else{
                if($.inArray(ColIdName,Columns)>=0){
                    $.messager.alert('Warning','添加 明细数据时，必须选择 主数据');
                    return false;
                }
                else
                    NewRow[ColIdName] = -1;
            }
            //动态设置 编辑样式
            var O$dgNoEditorSet =Arr$dgNoEditorSet[$dg.attr('id')];
            if(typeof(O$dgNoEditorSet)==='undefined'||O$dgNoEditorSet==null||O$dgNoEditorSet==''){
                for(var i in ColEditorNull){
                    var Column = $dg.datagrid('getColumnOption', ColEditorNull[i]);
                    if (!(typeof (Column) === 'undefined' || Column == null || Column == '')) {
                        Column.editor = {};
                    }
                }
                Arr$dgNoEditorSet[$dg.attr('id')] = 1;
            }
            $dg.datagrid('insertRow', { index: 0, row: NewRow });
            editIndex = 0;
            $dg.datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
        }
    }
    //删除
    function removeit() {
        //console.log(this);
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        var Seltdata = $dg.datagrid('getChecked');
        if (!(typeof editIndex === 'undefined' || editIndex == null || isNaN(editIndex))) {
            $dg.datagrid('cancelEdit', editIndex);
            editIndex = undefined;
        }
        for (var i = Seltdata.length; i > 0; i--) {
            var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
            //console.log(rowindex);
            $dg.datagrid('deleteRow', rowindex);
        }
        accept.call(this);
        $("table.easyui-datagrid").datagrid('reload');
    }
    //接受变更
    function accept() {
        //console.log(this);
        if(!(this ===window || typeof ($dg) === 'undefined' || $dg == null || $dg.length <= 0)){
            if(this !==window){
                //获取datagrid
                if(!getCurrent$dg(this))
                    return false;
            }
        }
        if (endEditing()) {
            if ($dg.datagrid('getChanges').length) {
                var inserted = $dg.datagrid('getChanges', "inserted");
                var deleted = $dg.datagrid('getChanges', "deleted");
                var updated = $dg.datagrid('getChanges', "updated");
                var effectRow = new Object();
                if (inserted.length) {
                    effectRow.inserted = inserted;
                }
                if (deleted.length) {
                    effectRow.deleted = deleted;
                }
                if (updated.length) {
                    effectRow.updated = updated;
                }
                //console.log(JSON.stringify(effectRow));
                var opts = $dg.datagrid('options');
                var url = opts.url.replace('GetData', 'SaveData');
                $.ajax({
                    type: 'POST',
                    url: url,//获取数据的函数
                    async: true,//true 异步，false 同步
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                    beforeSend: function (xhr) {//发送请求前运行的函数
                        $.messager.progress({
                            title: '数据处理中',
                            msg: '数据处理中，请等待...'
                        });
                        //验证重复提交时 请加上 这句
                        AddAjaxActionGuidName(this);
                    },
                    success: function (response) {//查询成功,data为返回的数据
                        if (response.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
                            $dg.datagrid('reload');
                        }
                        else {
                            var ErrMsgStr = '提交错误了！';
                            if (!(typeof (response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
                                ErrMsgStr = response.ErrMsg;
                            $.messager.alert("错误", ErrMsgStr, 'error');
                        }
                    },
                    error: function () {//查询失败
                        $.messager.alert("错误", "提交错误了！", 'error');
                    },
                    complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                        $.messager.progress('close');
                    }
                });
            }
        }
    }
    //回滚变更
    function reject() {
        //console.log(this);
        if(!(this ===window || typeof ($dg) === 'undefined' || $dg == null || $dg.length <= 0)){
            if(this !==window){
                //获取datagrid(this指向window时,不执行后面语句)
                if(!getCurrent$dg(this))
                    return false;
            }
            $dg.datagrid('rejectChanges');
        }
        editIndex = undefined;
    }
    //销毁弹出框
    function DestoryPoupWinFunc(){
        if($("#TaxRateEdit_PoupWin")){
            $("#TaxRateEdit_PoupWin").window("destroy").remove();
            $("#TaxRateEdit_PoupWin_js").remove();
            //$.parser.onComplete 会触发两次
            window.InitAddEdit_PopupWinFuc = function() {
                //console.log('--------------InitTaxRateEdit_PoupWinFuc---------------');
            };
        } 
        if($("#AddEdit_PoupWin")){
            $("#AddEdit_PoupWin").window("destroy").remove();
            $("#AddEdit_PoupWin_js").remove();
            //$.parser.onComplete 会触发两次
            window.InitTaxRateEdit_PoupWinFuc = function() {
                //console.log('--------------InitTaxRateEdit_PoupWinFuc---------------');
            };
        }
    }
    //审核
    function audit(cancel) {
        var IsCancel = false;//取消审核
        if (!(typeof (cancel) === 'undefined' || cancel == null || cancel == '')) {
            IsCancel=true;
        }
        //console.log(this);
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        var ArrSelted = $dg.datagrid("getChecked");
        if (typeof (ArrSelted) === 'undefined' || ArrSelted == null || ArrSelted.length < 1) {
            $.messager.alert('提示', '请至少选择一条数据，才能操作！');
            return false;
        } else {
            var ArrId =  ArrSelted.map(function(item){
                return item.Id;
            });
            let param = { ArrAuditId: ArrId };
            if(IsCancel)
                param["AuditState"] = 0;//草稿
            let opts = $dg.datagrid('options');
            let url = opts.url.replace('GetData', 'Audit');
            $.ajax({
                url: url,//'/Bms_Bill_Ars/Audit',
                method: 'post',
                data: param,
                success: function (retdata) {
                    if (typeof (retdata) === 'undefined' || retdata == null) {
                        $.messager.alert('提示', '数据格式不正确，请联系管理员！');
                    } else {
                        if (retdata.Success) {
                            $.messager.alert('提示', (IsCancel?"取消":"")+'审核成功！');
                            ArrSelted[0].AuditStatus = retdata.AuditStatus;
                            ArrSelted[0].AuditId = retdata.AuditId;
                            ArrSelted[0].AuditDate = retdata.AuditDate;
                            ArrSelted[0].AuditName = retdata.AuditName;
                            let rowindex = $dg.datagrid("getRowIndex",ArrSelted[0]);
                            $dg.datagrid("refreshRow",rowindex)
                            //设置 审核数据
                            setAuditVal(ArrSelted[0]);
                        } else {
                            var errMsg = retdata.ErrMsg;
                            $.messager.alert('提示', errMsg);
                        }
                    }
                },
                error: function () {
                    $.messager.alert('提示', '审核中出现网络错误！');
                }
            });
        }
    }
    //结算
    function settleaccount() {
        //console.log(this);
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        //var ArrData = $dg.datagrid("getData");
        //if (!(typeof (ArrData) === 'undefined' || ArrData == null || ArrData.length <=0)){
        //    $.messager.alert('提示', '已有结算数据，不能手动结算！');
        //    return false;
        //} else {
            let param = { Ops_M_Id: $("#OPS_M_Id").val() };
            let opts = $dg.datagrid('options');
            let url = opts.url.replace('GetData', 'SettleAccount');
            $.ajax({
                url: url,//'/Bms_Bill_Ars/SettleAccount',
                method: 'post',
                data: param,
                success: function (retdata) {
                    if (typeof (retdata) === 'undefined' || retdata == null) {
                        $.messager.alert('提示', '数据格式不正确，请联系管理员！');
                    } else {
                        if (retdata.Success) {
                            $.messager.alert('提示', '结算成功！');
                            $dg.datagrid("reload");
                        } else {
                            var errMsg = retdata.ErrMsg;
                            $.messager.alert('提示', errMsg);
                        }
                    }
                },
                error: function () {
                    $.messager.alert('提示', '结算中出现网络错误！');
                }
            });
        //}
    }
    //税金编辑
    function taxrateedit(){
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        //弹出编辑框
        var $dgId = $dg.attr("id");
        var HeadId =0;
        if($dgId.indexOf("_dtl_datagrid")<0){
            var ArrHeadSeltRows = $dg.datagrid('getSelections');
            var type = typeof(ArrHeadSeltRows);
            if(type==='undefined' || ArrHeadSeltRows==null ||ArrHeadSeltRows.length<=0 ){
                $.messager.alert("警告","请选择一条主数据，再操作");
                return false;
            }else if(ArrHeadSeltRows.length!=1){
                $.messager.alert("警告","每次只能选择一条主数据，进行税金编辑");
                return false;
            }else
                HeadId = ArrHeadSeltRows[0].Id;
        }else{
            $.messager.alert("警告","税金编辑，只有表头数据才有的功能！");
            return false;
        }
        var IsLoadName = 'IsLoadTaxRateEdit';
        DestoryPoupWinFunc();//销毁弹出框及js
        ArrIsLoadWin[IsLoadName] = false;//不要异步 每次都获取
        var url = '/Bms_Bill_Ars/TaxRateEdit_PopupWin?Id='+HeadId+'&IsBmsBillAr='+getIsBmsBillAr();
        //异步获取 数据
        AsyncGetMyWin(url, IsLoadName, 'InitTaxRateEdit_PoupWinFuc();', true);
        if($("#TaxRateEdit_PoupWin"))
            $("#TaxRateEdit_PoupWin").window('open');
        return false;
    }
    //费用单列账单
    function Fee2OneColumn(){
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        var $dgId = $dg.attr("id");
        if($dgId.indexOf("_dtl_datagrid")>0){
            $.messager.alert('提示', '费用单列账单，只用 费用列表才可以操作！');
            return false;
        }
        var ArrSelted = $dg.datagrid("getChecked");
        if (typeof (ArrSelted) === 'undefined' || ArrSelted == null || ArrSelted.length < 1) {
            $.messager.alert('提示', '请至少选择一条数据，才能进行操作！');
            return false;
        } else {
            var ArrId =  ArrSelted.map(function(item){
                return item.Id;
            });
            let param = { ArrArApFeeIds: ArrId,IsBmsBillAr: getIsBmsBillAr()};
            let opts = $dg.datagrid('options');
            let url = '/Bms_Bill_Ars/Fee2OneColumn';
            $.ajax({
                url: url,
                method: 'post',
                data: param,
                success: function (retdata) {
                    if (typeof (retdata) === 'undefined' || retdata == null) {
                        $.messager.alert('提示', '数据格式不正确，请联系管理员！');
                    } else {
                        if (retdata.Success) {
                            $.messager.alert('提示', '费用单列账单 成功！');
                            $dg.datagrid("reload");

                            var $dgHead;
                            if($dgId.indexOf("_dtl_datagrid")>0){
                                $dgHead = $("#"+$dgId.replace("_dtl_datagrid","_datagrid"));
                            }else
                                $dgHead = $("#"+$dgId.replace("_datagrid","_dtl_datagrid"));
                            $dgHead.datagrid("reload");
                        } else {
                            var errMsg = retdata.ErrMsg;
                            $.messager.alert('提示', errMsg);
                        }
                    }
                },
                error: function () {
                    $.messager.alert('提示', '费用单列账单中出现网络错误！');
                }
            });
        }
    }
    //获取明细数据 关联字段名
    function getDtlRefId(_$dg){
        var ColIdName = '';//Bms_Bill_Ar_Id
        //let Arr = Curr$dgCtrl.split('_');
        let Pid =_$dg.attr('id');
        if(Pid.indexOf('_dtl_datagrid')>0)
            Pid = Pid.replace("_dtl_datagrid","");
        else
            Pid = Pid.replace("_datagrid","");
        let Arr = Pid.split('_');
        $.each(Arr,function(i,item){
            if(item.length>1)
                ColIdName+=item.substr(0,1).toUpperCase()+item.substr(1);
            ColIdName+="_";
        });
        ColIdName+="Id";
        return ColIdName;
    }
    //设置 审核数据
    function setAuditVal(row){
        if(!(typeof(row.AuditId)==='undefined'||row.AuditId==null||row.AuditId==''))
            $("#AuditId").val(row.AuditId);
        else
            $("#AuditId").val("");

        if(!(typeof(row.AuditNo)==='undefined'||row.AuditNo==null||row.AuditNo==''))
            $("#AuditNo").textbox('setValue',row.AuditNo);
        else
            $("#AuditNo").textbox('setValue',"");

        if(!(typeof(row.AuditDate)==='undefined'||row.AuditDate==null||row.AuditDate==''))
            $("#AuditDate").datetimebox('setValue',moment(row.AuditDate).format('YYYY-MM-DD HH:mm:ss'));
        else
            $("#AuditDate").datetimebox('setValue',"");

        if(!(typeof(row.AuditName)==='undefined'||row.AuditName==null||row.AuditName==''))
            $("#AuditName").textbox('setValue',row.AuditName);
        else
            $("#AuditName").textbox('setValue',"");

        var AuditStatusName = row.AuditStatus;
        if(!(typeof(row.AuditStatusName)==='undefined'||row.AuditStatusName==null||row.AuditStatusName==''))
            AuditStatusName = row.AuditStatusName;
        else{
            if(!(typeof(row.AuditStatus)==='undefined'||row.AuditStatus==null||row.AuditStatus=='')){
                for(var i in ArrAuditStatus) {
                    var item = ArrAuditStatus[i]
                    if(item.Value == row.AuditStatus)
                    {
                        AuditStatusName = item.DisplayName;
                        break;
                    }
                }
            }else{
                AuditStatusName ="";
            }
        }
        $("#AuditStatusName").textbox('setValue',AuditStatusName);
    }
    //启用操作button
    function enableLinkbutton(){
        if (!(typeof ($dg) === 'undefined' || $dg == null || $dg.length <= 0)) {
            var $toolbar = $($dg.datagrid('options').toolbar);
            if (typeof ($toolbar) === 'undefined' || $toolbar == null || $toolbar.length <= 0) {
                $.messager.alert('提示', '找不到菜单！');
                return false;
            }else{
                $toolbar.find("a.easyui-linkbutton").each(function(i,item){
                    let idStr = $(item).attr("id");
                    if(!(typeof (idStr) === 'undefined' || idStr == null || idStr == "")){
                        $(item).linkbutton('enable');
                    }
                });
            }
        }else{
            $.messager.alert('提示', '找不到要编辑的数据集！');
            return false;
        }
    }
    //修改审核号
    function EditAuditNo(){
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        let opts = $dg.datagrid('options');
        if(opts.url.indexOf('_dtl_datagrid')>0){
            $.messager.alert("Warning","明细数据没有该功能，请确认正在操作的数据！");
            return false;
        }
        var field ='AuditNo';
        var targetEditor = $dg.datagrid('getEditor', { index: editIndex, field: field });
        if(targetEditor){
            let tb_opts = $(targetEditor.target).textbox("options");
            if(tb_opts.disabled){
                $(targetEditor.target).textbox("enable");
                $(this).linkbutton('select');
            }
            else{
                $(targetEditor.target).textbox("disable");
                $(this).linkbutton('unselect');
            }
        }else{
            $.messager.alert("Warning","无法找到审核号字段，请确认正在操作的数据！");
            return false;
        }
    }
    //变更币别
    function ChangeMoney_Code(){
        //获取datagrid
        if(!getCurrent$dg(this))
            return false;
        let opts = $dg.datagrid('options');
        if(opts.url.indexOf('_dtl_datagrid')>0){
            $.messager.alert("Warning","明细数据没有该功能，请确认正在操作的数据！");
            return false;
        }
        var field ='Money_Code';
        var targetEditor = $dg.datagrid('getEditor', { index: editIndex, field: field });
        if(targetEditor){
            let tb_opts = $(targetEditor.target).textbox("options");
            if(tb_opts.disabled){
                $(targetEditor.target).textbox("enable");
                $(this).linkbutton('select');
            }
            else{
                $(targetEditor.target).textbox("disable");
                $(this).linkbutton('unselect');
            }
        }else{
            $.messager.alert("Warning","无法找到币种字段，请确认正在操作的数据！");
            return false;
        }
    }

    $(function () {
        $("#file_upload").uploadifive({
            'height': 30,
            'fileTypeDesc': 'Excel 2010 Files',
            'fileTypeExts': '*.xlsx',
            'uploadScript': '/FileUpload/Upload',
            'buttonText': '选择EXCEL',
            'multi': true,
            'displayData': 'speed',
            'formData': { 'modelType': 'Bms_Bill_Ap' },
            'width': 120,
            'successTimeout': 100000,
            'onFallback': function () {
                $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                $('#file_upload').uploadifive('clearQueue')
            },
            'onSelect': function (queue) {
                $.messager.progress({
                    title: '执行导入',
                    msg: '请等待...'
                });
            },
            'onUploadComplete': function (file, data) {
                $.messager.progress('close');
                var data = $.parseJSON(data);
                //console.log(data);
                if (data.success == false) {
                    $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                    $("#file_upload").uploadifive('clearQueue')
                } else {
                    $.messager.alert('导入完成', '导入完成！<br>', 'info');
                    $dg.datagrid('reload');
                    $('#importwindow').window('close');
                }
                return true;
            }
        });
        //设置datagrid url等参数
        var Arr$dg = [
            { id: '@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_datagrid', url: '/@(Model.IsBmsBillAr ? "Bms_Bill_Ar" : "Bms_Bill_Ap")s/GetData' },
            { id: '@(Model.IsBmsBillAr ? "bms_bill_ar" : "bms_bill_ap")_dtl_datagrid', url: '/@(Model.IsBmsBillAr ? "Bms_Bill_Ar" : "Bms_Bill_Ap")_Dtls/GetData' },
        ];
        let $layout = $("#M_layout");
        let opts = $layout.layout('options');
        let C_panel = $layout.layout("panel", 'center');
        let C_opts = C_panel.panel('options');
        var OSize = {width:C_opts.width-10,height:C_opts.height/2-14};

        if(!(typeof(TotalStr)==='undefined'||TotalStr==null||TotalStr=='')){
            var C_panelHeader = C_panel.panel('header').find("div.panel-title");
            C_panelHeader.append("&nbsp;&nbsp;&nbsp;<span style='font-size: 10px; font-weight: normal;'>"+TotalStr+"</span>");
        }

        $.each(Arr$dg, function (i, elem) {
            let idStr = "#" + elem.id;
            let opts = $(idStr).datagrid('options');
            $(idStr).datagrid("columnMoving");
            opts.url = elem.url;
            opts.fit = true;
            opts.border = false;
            //opts.onClickCell = onClickCell;
            //opts.onBeginEdit = onBeginEdit;
            opts.onDblClickRow = onDblClickRow;
            opts.onSelect = onSelect;
            if(elem.id.indexOf('_dtl_datagrid')<0){
                //opts.onUnselect = onUnselect;
                opts.queryParams = {
                    page: 1,
                    rows: opts.pageSize,
                    sort: opts.sortName,
                    order: opts.sortOrder,
                    filterRules:[]
                };
                if(Ops_M_OrdId>=0)
                    opts.queryParams.filterRules.push({field:"Ops_M_OrdId",op:'equles',value: Ops_M_OrdId});
                if(Ops_H_OrdId>=0)
                    opts.queryParams.filterRules.push({field:"Ops_H_OrdId",op:'equles',value: Ops_H_OrdId});
                opts.queryParams.filterRules = JSON.stringify(opts.queryParams.filterRules);
                $(idStr).datagrid('reload');
            }else{
                opts.onBeforeLoad = function(param){
                    if(typeof param.filterRules ==='undefined'|| param.filterRules==null){
                        let _$dg = $("#"+$(this).attr('id').replace('_dtl_datagrid','_datagrid'));
                        let Selted = _$dg.datagrid("getSelected");
                        if(typeof(Selted)==='undefined'||Selted==null||Selted.length<=0)
                        {
                            $.messager.alert("Warning","查看明细数据必须选择主数据");
                            return false;
                        }
                    }
                    //console.log(param);
                }
            }
            opts.width = OSize.width;
            OSize.height = OSize.height;
            //$(idStr).datagrid('resize');

            let dgPanel = $(idStr).datagrid('getPanel');
            //dgPanel.panel('resize',OSize);
            if ($(opts.toolbar).length <= 0) {
                var toolbarStr = elem.id.replace('datagrid', '') + "toolbar";
                if ($("#" + toolbarStr + '_bak').length > 0) {
                    opts.toolbar = '#' + toolbar;
                    //复制Toolbar
                    var toolbar = $("#" + toolbarStr + '_bak').clone().attr('id', toolbarStr).css({ display: '' });
                    dgPanel.prepend(toolbar);
                    //去除toolbar-Header边框
                    if (dgPanel.hasClass('panel-body-noheader'))
                        dgPanel.removeClass('panel-body-noheader');
                    //if (elem.id == 'bms_bill_ar_datagrid')
                    //    dgPanel.css({ 'border-bottom': 0 });
                }
            } else {
                //去除toolbar-Header边框
                if (dgPanel.hasClass('panel-body-noheader'))
                    dgPanel.removeClass('panel-body-noheader');
                //if (elem.id == 'bms_bill_ar_datagrid')
                //    dgPanel.css({ 'border-bottom': 0 });
            }
        });
    });
</script>