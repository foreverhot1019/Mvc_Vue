
@{
    ViewBag.Title = "退单登记";
    var Num = 1;
    var mblid = ViewBag.MBLId;
}
<!--DataGrid 回车Editor下一个 和 为控件添加 Key事件 -->
<script async defer type="text/javascript" src="~/Scripts/EasyUIDataGrid_ControlNext.js"></script>
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">承揽接单</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <form id="searchform" method="post" style="padding-bottom:10px; width:auto">

                        <div id="toolsmenu">
                            <a href="#" onclick="searchShow()" style="width:80px">查询条件</a>
                        </div>

                        <div id="div_search" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title=" "
                             data-options="tools:'#toolsmenu'">
                            <div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">业务编号:</label>
                                    <input id="Operation_IdQuery" name="Operation_IdQuery" tabindex="@(Num++)" data-options="prompt1:'业务编号'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">贸易方式:</label>
                                    <input id="Batch_NumQuery" name="Batch_NumQuery" tabindex="@(Num++)" data-options="prompt1:'贸易方式'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">总单号:</label>
                                    <input id="MBLQuery" name="MBLQuery" tabindex="@(Num++)" data-options="prompt1:'总单号'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                            </div>
                            <div id="searchHide">
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">委托方:</label>
                                    <input id="Entrustment_NameQuery" name="Entrustment_NameQuery" tabindex="@(Num++)" data-options="prompt1:'委托方'" style="width:170px" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">订舱方:</label>
                                    <input id="Book_Flat_CodeQuery" name="Book_Flat_CodeQuery" tabindex="@(Num++)" data-options="prompt1:'订舱方'" style="width:170px" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">核销单号:</label>
                                    <input id="hxQuery" name="hxQuery" tabindex="@(Num++)" data-options="prompt1:'核销单号'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">目的港:</label>
                                    <input id="End_PortQuery" name="End_PortQuery" tabindex="@(Num++)" data-options="prompt1:'目的港'" style="width:170px" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">航班日期:</label>
                                    <input id="_Flight_Date_WantQuery" name="_Flight_Date_WantQuery" tabindex="@(Num++)" data-options="prompt1:'航班日期'" style="width:170px" class="easyui-datebox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">至:</label>
                                    <input id="Flight_Date_WantQuery_" name="Flight_Date_WantQuery_" tabindex="@(Num++)" data-options="prompt1:'至'" style="width:170px" class="easyui-datebox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">委托方编号:</label>
                                    <input id="Entrustment_CodeQuery" name="Entrustment_CodeQuery" tabindex="@(Num++)" data-options="prompt1:'委托方编号'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <label for="name" style="width:30%">航班号:</label>
                                    <input id="Flight_NoQuery" name="Flight_NoQuery" tabindex="@(Num++)" data-options="prompt1:'航班号'" style="width:170px" class="easyui-textbox" type="text" />
                                </div>
                            </div>


                            <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                </div>

                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                    <button id="btn-search" class="btn btn-primary">
                                        @*<i class="fa fa-search"></i>*@
                                        搜索
                                    </button>
                                    <button id="btn-reset" class="btn btn-default">
                                        <i class="fa fa-reset"></i>
                                        重置
                                    </button>
                                </div>

                                <div class="form-group col-lg-4 col-md-4 col-sm-4">
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="table-responsive">
                        <table id="ops_order_datagrid" class="easyui-datagrid" title="" style="width:auto;height:auto"
                               data-options="
							rownumbers:true,
							checkOnSelect:true,
							selectOnCheck:true,
							idField:'Id',
							sortName:'Id',
							sortOrder:'desc',
							remoteFilter: true,
							singleSelect: false,
							toolbar: '#ops_h_order_toolbar',
							method: 'get',
							onClickCell: onClickCell,
							onSelect:onSelect,
							pagination: 'true',
                            onBeginEdit:onBeginEdit">
                            <thead>
                                <tr>
                                    <th data-options="field:'ck',checkbox:true"></th>
                                    @*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                                    <th data-options="field:'Operation_Id',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">业务编号</th>
                                    <th data-options="field:'Entrustment_Name',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">委托方</th>
                                    <th data-options="field:'MBL',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">总单号</th>
                                    <th data-options="field:'HBL',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">分单号</th>
                                    <th data-options="field:'Flight_No',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">航班号</th>
                                    <th data-options="field:'Flight_Date_Want',width:160,align:'right',sortable:true,resizable:true,
									    formatter:datetimeformatter,
									    editor:{
										    type:'datebox',
										    options:{
											    required:false
										    }
								    }">航班日期</th>
                                    <th data-options="field:'Book_Flat_Code',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">订舱方</th>
                                    <th data-options="field:'Airways_Code',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">航空公司</th>
                                    <th data-options="field:'End_Port',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'textbox',
										    options:{
											    required:false
										    }
								    }">目的港</th>
                                    <th data-options="field:'Pieces_Fact',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'numberbox',
										    options:{
											    required:false
										    }
								    }">实际件数</th>
                                    <th data-options="field:'Weight_Fact',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'numberbox',
										    options:{
											    required:false
										    }
								    }">实际重量</th>
                                    <th data-options="field:'Volume_Fact',width:100,align:'right',sortable:true,resizable:true,
									    editor:{
										    type:'numberbox',
										    options:{
											    required:false
										    }
								    }">实际体积</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="ops_h_order_toolbar" style="height:auto">
                            @*@if (Html.IsAuthorize("Create"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
                            }
                            @if (Html.IsAuthorize("Delete"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>
                            }
                            @if (Html.IsAuthorize("Edit"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload()">刷新</a>
                            }
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>
                            @if (Html.IsAuthorize("Import"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true" onclick="exportexcel()">导出 Excel</a>
                            }*@
                        </div>
                    </div>
                    <!-- end ibox-content -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
    $(function () {
        $("#searchHide").hide();
        initPage();
        searchf();
    });
    //初始化页面
    function initPage() {
        //设置Combogrid 分页控件 简单模式
        $("#Entrustment_NameQuery").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'TEXT',
            valueField: 'TEXT',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetCusBusInf',
            columns: [[
                { field: 'ID', title: '代码' },
                { field: 'TEXT', title: '名称'}
            ]]
        });
        //订舱方
        $("#Book_Flat_CodeQuery").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetCusBusInf',
            columns: [[
                { field: 'ID', title: '代码'},
                { field: 'TEXT', title: '名称' }
            ]]
        });
        //目的港
        $("#End_PortQuery").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts',
            columns: [[
                { field: 'ID', title: '代码'},
                { field: 'TEXT', title: '名称'}
            ]]
        });

        
        //启用港
        $("#Depart_Port").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts',
            columns: [[
                { field: 'ID', title: '代码'},
                { field: 'TEXT', title: '名称'}
            ]]
        });
        //目的港
        $("#End_Port").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts',
            columns: [[
                { field: 'ID', title: '代码'},
                { field: 'TEXT', title: '名称'}
            ]]
        });
        //订舱方
        $("#Book_Flat_Code").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetCusBusInf',
            columns: [[
                { field: 'ID', title: '代码'},
                { field: 'TEXT', title: '名称' }
            ]]
        });
        //航空公司
        $("#Airways_Code").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetCusBusInf',
            columns: [[
                { field: 'ID', title: '代码', width: 100 },
                { field: 'TEXT', title: '名称', width: 130 }
            ]]
        });
    }

    //复选框，选择与取消
    function CheckCheckBoxStatuser(checkid, selectid, type){
        if($("#"+ checkid).prop("checked")){
            $("#" + selectid)[type]("enable");
        }else{
            $("#" + selectid)[type]("disable");
        }
    }

    //显示或隐藏查询条件
    function searchShow(){
        if($("#searchHide").is(":hidden")){
            $("#searchHide").show();
        }else{
            $("#searchHide").hide();
        }
    }
    //点击重置按钮时，触发，清空查询条件
    function clearfrom() {
        $('#searchform').form('clear');
    }
     
    //查询条件重置按钮 点击事件
    $("#btn-reset").click(function (e) {
        e.preventDefault();
        clearfrom();
    });   
    //点击查询
    $("#btn-search").click(function (e) {
        e.preventDefault();
        searchf();
    });
    //点击查询按钮时，触发
    function searchf() {
        setfilteropts();//设置查询条件
        var opts = $dg.datagrid('options');
        opts.url = '/OPS_EntrustmentInfors/GetData';
        opts.pageNumber = 1;
        var pager = $dg.datagrid('getPager');
        pager.pagination('refresh', {
            pageNumber: 1
        });
        $dg.datagrid('reload');
    }
    //设置查询条件
    function setfilteropts() {
        var Operation_Id = $("#Operation_IdQuery").textbox("getValue");
        var MBL = $("#MBLQuery").textbox("getValue");
        var Batch_Num = $("#Batch_NumQuery").textbox("getValue");
        var Entrustment_Name = $("#Entrustment_NameQuery").combogrid("getValue");
        var Book_Flat_Code = $("#Book_Flat_CodeQuery").combogrid("getValue");
        var hx = $("#hxQuery").textbox("getValue");
        var End_Port = $("#End_PortQuery").combogrid("getValue");
        var _Flight_Date_Want = $("#_Flight_Date_WantQuery").datebox("getValue");
        var Flight_Date_Want_ = $("#Flight_Date_WantQuery_").datebox("getValue");
        var Entrustment_Code = $("#Entrustment_CodeQuery").textbox("getValue");
        var Flight_No = $("#Flight_NoQuery").textbox("getValue");

        var params = [];
        var opts = $dg.datagrid('options');
        if(@mblid > 0){
            params.push({ "field": "MBLId", "op": "equal", "value": @mblid });
        }
        if (!(typeof (Operation_Id) === 'undefined' || Operation_Id == null || Operation_Id == "")) {
            params.push({ "field": "Operation_Id", "op": "equal", "value": Operation_Id });
        }
        if (!(typeof (MBL) === 'undefined' || MBL == null || MBL == "")) {
            params.push({ "field": "MBL", "op": "equal", "value": MBL });
        }
        if (!(typeof (Batch_Num) === 'undefined' || Batch_Num == null || Batch_Num == "")) {
            params.push({ "field": "Batch_Num", "op": "equal", "value": Batch_Num });
        }
        if (!(typeof (Entrustment_Name) === 'undefined' || Entrustment_Name == null || Entrustment_Name == "")) {
            params.push({ "field": "Entrustment_Name", "op": "equal", "value": Entrustment_Name });
        }
        if (!(typeof (Book_Flat_Code) === 'undefined' || Book_Flat_Code == null || Book_Flat_Code == "")) {
            params.push({ "field": "Book_Flat_Code", "op": "equal", "value": Book_Flat_Code });
        }
        if (!(typeof (hx) === 'undefined' || hx == null || hx == "")) {
            params.push({ "field": "hx", "op": "equal", "value": hx });
        }
        if (!(typeof (End_Port) === 'undefined' || End_Port == null || End_Port == "")) {
            params.push({ "field": "End_Port", "op": "equal", "value": End_Port });
        }
        if (!(typeof (_Flight_Date_Want) === 'undefined' || _Flight_Date_Want == null || _Flight_Date_Want == "")) {
            params.push({ "field": "_Flight_Date_Want", "op": "equal", "value": _Flight_Date_Want });
        }
        if (!(typeof (Flight_Date_Want_) === 'undefined' || Flight_Date_Want_ == null || Flight_Date_Want_ == "")) {
            params.push({ "field": "Flight_Date_Want_", "op": "equal", "value": Flight_Date_Want_ });
        }
        if (!(typeof (Entrustment_Code) === 'undefined' || Entrustment_Code == null || Entrustment_Code == "")) {
            params.push({ "field": "Entrustment_Code", "op": "equal", "value": Entrustment_Code });
        }
        if (!(typeof (Flight_No) === 'undefined' || Flight_No == null || Flight_No == "")) {
            params.push({ "field": "Flight_No", "op": "equal", "value": Flight_No });
        }



        opts.queryParams = {
            'filterRules': JSON.stringify(params)
        };

        }
        function importexcel() {
            $('#importwindow').window('open');
    }

    function exportexcel() {
            var opts = $dg.datagrid('options');
            //var filterRules = JSON.stringify(opts.filterRules);
            //$.messager.progress({ title: '正在执行导出！' });
            //var formData = new FormData();
            //formData.append('filterRules', filterRules);
            //formData.append('sort', 'Id');
            //formData.append('order', 'asc');
            //$.postDownload('/OPS_H_Orders/ExportExcel', formData, function (fileName) {
            //	$.messager.progress('close');
            //});

            var formData = { filterRules: opts.filterRules, sort: opts.sortName, order: opts.sortOrder };
            var url = '/OPS_H_Orders/ExportExcel';
            $.DownLoadProgress({
                url: url,         //下载文件的url
                method: 'Post',   //链接打开方式
                data: postdata,         //要发送的数据
                downLoadInfo: '下载文件', //下载界面文字
                closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                callbackFuc: function () {
                    $.messager.progress('close');
                }
            });
        }

    var $dg = $('#ops_order_datagrid');
    var editIndex = undefined;

    function reload() {
            reject();//回滚所有变更
            $dg.datagrid('reload');
    }

    //datagrid 编辑时的 combogrid通用参数设置
    var dg_combo_coSettings = {
        required: false,
        method: 'get',
        delay: 500,
        multiple: false,
        panelHeight: 'auto',
        panelWidth: 230,
        pageSize: 10,//每页显示的记录条数，默认为10
        pageList: [5, 10, 20],//可以设置每页记录条数的列表
        pagination: true,//是否分页
        idField: 'ID',
        valueField: 'ID',
        textField: 'TEXT',
        columns: [[
            { field: 'ID', title: '代码', width: 53 },
            { field: 'TEXT', title: '名称', width: 150 }
        ]]
    } 
    //datagrid 编辑时的 combogrid参数设置
    var Arrcombogrid_Settings = {
        'ops_order_datagrid': {
            'Entrustment_Name': $.extend(dg_combo_coSettings,{
                required: true,
                url: '/OPS_EntrustmentInfors/GetCusBusInf',
                idField: 'ID',
                valueField: 'ID',
                textField: 'TEXT',
                columns: [[
                    { field: 'ID', title: '代码', width: 53 },
                    { field: 'TEXT', title: '名称', width: 150 }
                ]],
                onChange: function (value) {
                    var targetEditor = $dg.datagrid('getEditor', {
                        field: 'Entrustment_Name',
                        index: editIndex
                    });
                    if (targetEditor != null) {
                        var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
                        if (Selted) {
                            var datarow = $dg.datagrid('getData').rows[editIndex];
                            if (!(typeof datarow === 'undefined' || datarow == null)) {
                                datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
                            }
                        }
                    }
                }
            }),
            'Book_Flat_Code': $.extend(dg_combo_coSettings, {
                required: true,
                url: '/OPS_EntrustmentInfors/GetCusBusInf',
            }),
            'Airways_Code': $.extend(dg_combo_coSettings, {
                required: true,
                url: '/OPS_EntrustmentInfors/GetCusBusInf',
                onChange: function () {
                    console.log(arguments);
                    var Selted = $(this).combogrid('grid').datagrid('getSelected');
                    if (Selted) {
                        var datarow = $dg.datagrid('getData').rows[editIndex];
                        if (!(typeof datarow === 'undefined' || datarow == null)) {
                            datarow[Bill_Object_Name] = Selted[$(this).combogrid('options').textField];
                        }
                    }
                }
            })
        }
    };

    //combogrid 设置信息（onBeginEdit时,使用）
    var combogrid_Settings = {
        'COUNTRY': {
            required: true,
            url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY',
            method: 'get',
            delay: 500,
            multiple: false,
            panelHeight: 'auto',
            panelWidth: 205,
            idField: 'COUNTRY_CO',
            valueField: 'COUNTRY_CO',
            textField: 'COUNTRY_NA',
            pageSize: 10,//每页显示的记录条数，默认为10
            pageList: [5, 10, 20],//可以设置每页记录条数的列表
            pagination: true,//是否分页
            columns: [[
	            { field: 'COUNTRY_CO', title: '代码', width: 53 },
                { field: 'COUNTRY_NA', title: '名称', width: 150 }
            ]],
            onLoadSuccess: function () {
                ondgLoadSuccess($dg, 'COUNTRY', rowIndex);
            },
            onChange: function (value) {
                var targetEditor = $dg.datagrid('getEditor', {
                    field: 'COUNTRY',
                    index: editIndex
                });
                if (targetEditor != null) {
                    var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
                    if (Selted) {
                        var datarow = $dg.datagrid('getData').rows[editIndex];
                        if (!(typeof datarow === 'undefined' || datarow == null)) {
                            datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
                        }
                    }
                }
            },
            keyHandler: {
                up: function (e) {
                    combogrid_upKey(this, e);
                },
                down: function (e) {
                    combogrid_downKey(this, e);
                },
                enter: function (e) {
                    combogrid_enterKey(this, e, $dg, 'COUNTRY', rowIndex);
                },
                query: function (q) {
                    combogrid_query(this, q, rowIndex, {});
                }
            }
        }
    };

    //开始编辑行时，赋值 联动数据
    function onBeginEdit(rowIndex, rowData) {
            var num = 0;
            var regx = /^\/Date\([0-9]+(\)\/)$/g;
            for (var i in rowData) {
                if (regx.test(rowData[i])) {
                    rowData[i] = datetimeformatter(rowData[i]);
                }
                var targetEditor = $dg.datagrid('getEditor', {
                    field: i,
                    index: rowIndex
                });
                //console.log("targetEditor", i, targetEditor);
                if (targetEditor) {
                    num++;
                    if (num == 1 && $(targetEditor.target).val() == '') {
                        $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                    }

                    var OldVal = targetEditor.oldHtml;
                    switch (targetEditor.type.toLowerCase()) {
                        case "combogrid":
                            //console.log(targetEditor);
                            var combogrid_Setting = combogrid_Settings[targetEditor.field];
                            if (combogrid_Setting) {
                                $(targetEditor.target).combogrid(combogrid_Setting);
                            }
                            if (!(typeof (OldVal) === 'undefined' || OldVal == null || OldVal == '')) {
                                if (rowData[targetEditor.field]) {
                                    OldVal = rowData[targetEditor.field];
                                }
                                $(targetEditor.target).combogrid('setValue', OldVal);
                                var opts = $(targetEditor.target).combogrid('options');
                                var url = opts.url;
                                //设置查询参数
                                var queryParams = {
                                    page: 1,
                                    rows: opts.pageSize,
                                    q: OldVal
                                };
                                $(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                            }
                            break;
                        case "combobox":
                            var opts = $(targetEditor.target).combobox({
                                inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        combobox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "textbox":
                            $(targetEditor.target).textbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "numberbox":
                            $(targetEditor.target).numberbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "datebox":
                            $(targetEditor.target).datebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "datetimebox":
                            $(targetEditor.target).datetimebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "checkbox":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "radio":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                    }
                }
            }
        }

    function endEditing() {
            if (editIndex == undefined)
                return true;
            if ($dg.datagrid('validateRow', editIndex)) {
                $dg.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }

    function onClickCell(index, field) {
        var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
        if ($.inArray(field, _operates) >= 0) {
            return;
        }
        if (editIndex != index) {
            if (endEditing()) {
                @if (!Html.IsAuthorize("OPS_H_Orders", "Index", "Edit"))
                {
                    @Html.Raw("$.messager.alert('提示', '您没有编辑权限！');");
                    @Html.Raw("return;\r\n");
                }
                //动态设置 编辑样式
                var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
                if (!(typeof (byteColumn) === 'undefined' || byteColumn == null || byteColumn == '')) {
                    byteColumn.editor = {};
                    byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
                    byteColumn.editor = {};
                    var byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
                    byteColumn.editor = {
                        type: 'textbox',
                        options: {
                            required: false,
                            validType: 'length[0,20]'
                        }
                    };
                    byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
                    byteColumn.editor = {
                        type: 'datebox',
                        options: {
                            required: false
                        }
                    };
                }

                //$dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                var ed = $dg.datagrid('getEditor', { index: index, field: field });
                if (ed) {
                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                }
                editIndex = index;
            } else {
                $dg.datagrid('selectRow', editIndex);
            }
        }
    }

    //加载成功
    function onLoadSuccess(rowdata) {
        //行号自适应宽度
        $(this).datagrid("fixRownumber");
    }

    function append() {
        if (endEditing()) {
            var NewRow = {};
            var Columns = $dg.datagrid('getColumnFields');
            for (var column in Columns) {
                NewRow[Columns[column]] = null;
            }
            //动态设置 编辑样式
            var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
            if (!(typeof (byteColumn) === 'undefined' || byteColumn == null || byteColumn == '')) {
                byteColumn.editor = {
                    type: 'textbox',
                    options: {
                        required: false,
                        validType: 'length[0,20]'
                    }
                };
                byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
                byteColumn.editor = {
                    type: 'datebox',
                    options: {
                        required: false
                    }
                };
                byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
                byteColumn.editor = {};
                byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
                byteColumn.editor = {};
            }
            $dg.datagrid('insertRow', { index: 0, row: NewRow });
            editIndex = 0;
            //$dg.datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
        }
    }

    function removeit() {
        var Seltdata = $dg.datagrid('getSelections');
        if (!(typeof editIndex === 'undefined' || editIndex == null || isNaN(editIndex))) {
            $dg.datagrid('cancelEdit', editIndex);
            editIndex = undefined;
        }
        for (var i = Seltdata.length; i > 0; i--) {
            var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
            //console.log(rowindex);
            $dg.datagrid('deleteRow', rowindex);
        }
    }

    function accept() {
        if (endEditing()) {
            if ($dg.datagrid('getChanges').length) {
                var inserted = $dg.datagrid('getChanges', "inserted");
                var deleted = $dg.datagrid('getChanges', "deleted");
                var updated = $dg.datagrid('getChanges', "updated");
                var effectRow = new Object();
                if (inserted.length) {
                    effectRow.inserted = inserted;
                }
                if (deleted.length) {
                    effectRow.deleted = deleted;
                }
                if (updated.length) {
                    effectRow.updated = updated;
                }
                //console.log(JSON.stringify(effectRow));
                var url = '/OPS_H_Orders/SaveData';
                $.ajax({
                    type: 'POST',
                    url: url,//获取数据的函数
                    async: true,//true 异步，false 同步
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                    beforeSend: function (xhr) {//发送请求前运行的函数
                        $.messager.progress({
                            title: '数据处理中',
                            msg: '数据处理中，请等待...'
                        });
                        //验证重复提交时 请加上 这句
                        AddAjaxActionGuidName(this);
                    },
                    success: function (response) {//查询成功,data为返回的数据
                        if (response.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
                            $dg.datagrid('reload');
                        }
                        else {
                            var ErrMsgStr = '提交错误了！';
                            if (!(typeof (response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
                                ErrMsgStr = response.ErrMsg;
                            $.messager.alert("错误", ErrMsgStr, 'error');
                        }
                    },
                    error: function () {//查询失败
                        $.messager.alert("错误", "提交错误了！", 'error');
                    },
                    complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                        $.messager.progress('close');
                    }
                });
            }
            //$dg.datagrid('acceptChanges');
        }
    }

    function reject() {
        $dg.datagrid('rejectChanges');
        editIndex = undefined;
    }

    function getChanges() {
        var rows = $dg.datagrid('getChanges');
        alert(rows.length + ' rows are changed!');
    }

    //自动添加 textbox 或 text的值
    function AutoAddFilterRule($dg_) {
        var ColumnsFields = $dg_.datagrid('getColumnFields');
        $.each(ColumnsFields, function (i, ColumnName) {
            var input = $dg_.datagrid('getFilterComponent', ColumnName);
            if (!(input.data("datebox") || input.data("datetimebox") || input.data("combobox") || input.data("checkbox") || input.data("combotree") || input.data("combogrid") || input.data("numberbox"))) {
                var rule = $dg_.datagrid('getFilterRule', ColumnName);
                var value = input.val();
                if (!(typeof (value) === 'undefined' || value == null || value == '')) {
                    if ((rule && rule.value != value) || !rule) {
                        $dg_.datagrid('addFilterRule', {
                            field: ColumnName,
                            op: 'equal',
                            value: value
                        });
                    }
                } else {
                    if (rule) {
                        $dg_.datagrid('removeFilterRule', ColumnName);
                    }
                }
            }
        });
    }
    //数组化Id号
    function getSelectDatagrid(rows) {
        var ids = [];
        for (var i = 0; i < rows.length; i++) {
            ids.push(rows[i].Id);
        }
        return ids;
    }

    //批量修改保存
    $("#btn-save").click(function() {
        if(!$("#is_Flight_No").prop("checked") && !$("#is_Flight_Date_Want").prop("checked") && !$("#is_MBL").prop("checked") && !$("#is_HBL").prop("checked")
             && !$("#is_Depart_Port").prop("checked") && !$("#is_End_Port").prop("checked") && !$("#is_Book_Flat_Code").prop("checked") && !$("#is_Airways_Code").prop("checked")){
            $.messager.alert("提示", "没有做任何修改！");return;
        }
        
        var rows = $dg.datagrid('getSelections');
        if (rows.length == 0) {
            $.messager.alert("提示", "请选择需要批量修改的接单信息！");
            return false;
        }
        $.messager.confirm('确认对话框', '您确认批量修改！', function (r) {
            //var submitdata = $("#batch_update_from").serialize();
            if (r) {
                var ids = getSelectDatagrid(rows);//获取所有选中的接单信息的ID号
                //用于存储所有批量修改的信息
                var params = [];
                if($("#is_Flight_No").prop("checked")){
                    params.push({"field": "Flight_No", "value": $("#Flight_No").textbox("getValue") });
                }
                if($("#is_Flight_Date_Want").prop("checked")){
                    params.push({"field": "Flight_Date_Want", "value": $("#Flight_Date_Want").datebox("getValue")  });
                }
                if($("#is_MBL").prop("checked")){
                    params.push({"field": "MBL", "value": $("#MBL").textbox("getValue")  });
                }
                if($("#is_HBL").prop("checked")){
                    params.push({"field": "HBL", "value": $("#HBL").textbox("getValue")  });
                }
                if($("#is_Depart_Port").prop("checked")){
                    params.push({"field": "Depart_Port", "value": $("#Depart_Port").combogrid("getValue")  });
                }
                if($("#is_End_Port").prop("checked")){
                    params.push({"field": "End_Port", "value": $("#End_Port").combogrid("getValue")  });
                }
                if($("#is_Book_Flat_Code").prop("checked")){
                    params.push({"field": "Book_Flat_Code", "value": $("#Book_Flat_Code").combogrid("getValue")  });
                }
                if($("#is_Airways_Code").prop("checked")){
                    params.push({"field": "Airways_Code", "value": $("#Airways_Code").combogrid("getValue")  });
                }
                var filterRules = JSON.stringify(params);
                $.ajax({
                    url:'/OPS_M_Orders/SaveBatchUpdate?ids=' + ids + '&filterRules=' + filterRules,
                    type:"POST",
                    dataType:"json",
                    contentType:"application/json; charset=utf-8",
                    success: function (result){ 
                        console.log("result.success",result.success);
                        if(result.success){
                            searchf();
                            $.messager.alert("提示", "修改完成");
                        }else{
                            $.messager.alert("提示", result.err );
                        }
                    },
                    error: function (err) {
                        $.messager.alert("提示", "修改异常" );
                    }
                });
            }
        });
    });

    //-----------------------------------------------------
    //datagrid onSelect
    //-----------------------------------------------------
    function onSelect(index, row) {
        //console.log(index, row);
    }

    //自适应页面大小
    function MyNavResize() {
        var opts = $("#navbar-minimalize").NavResize('getOptions');
        opts.Auto = false;
        opts.OnNavResizefunc = function () {
            //$("#edit_div_one").css('width', "100%");
            //$("#edit_div_two").css('width', "100%");
            //$("#OrderInfo").datagrid("resize", { width: "100%" });
            //$("#OrderDetail").datagrid("resize", { width: "100%" });
            //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
            //$("#Order_Head_panel").panel("resize", { width: "100%" });
            //setTimeout(function () {
            //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
            //    $("#edit_div_one").css(paddigLeftRight);
            //    $("#edit_div_two").css(paddigLeftRight);
            //    $("#OrderInfo").css(paddigLeftRight);
            //    $("#OrderDetail").css(paddigLeftRight);
            //    $("#ProductNameMerge").css(paddigLeftRight);
            //    $("#Order_Head_panel").css(paddigLeftRight);
            //    SetbuttonssWidth();
            //}, 100);
        };
    }
    </script>
}

