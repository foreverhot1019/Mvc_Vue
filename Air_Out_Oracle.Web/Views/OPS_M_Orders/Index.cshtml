@model IEnumerable<AirOut.Web.Models.OPS_M_Order>
@{
    ViewBag.Title = "承揽接单";
	var Num = 1;
    var loginname = User.Identity.Name;
}
<!--真实 下载进度条 -->
<script src="~/Scripts/jsext.js?date=2019013002"></script>
@*<script src="@(Url.Content("~/Scripts/jsext.js")+(System.Configuration.ConfigurationManager.AppSettings["jsDate"]??""))"></script>*@
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">空运出口</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
	<div class="row">
	    <div class="col-lg-12">
	        <div class="ibox float-e-margins">
	            <div class="ibox-content">
                    <form id="searchform" method="post" style="padding-bottom:10px; width:auto">
                        <div id="toolsmenu">
                            <a href="javascript:void(0)" class="icon-plus" style="width:41px;margin-right:10px;" onclick="searchShow.call(this)">&nbsp;更多</a>
                        </div>
                        <div id="div_search" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title=" "
                             data-options="collapsible:true,tools:'#toolsmenu'">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        @*<span class="input-group-addon" style="width:100px;padding-top:5px;">业务编号</span>*@
                                        <label for="name" style="width:100px;">业务编号:</label>
                                        <input id="Operation_Id" name="Operation_Id" tabindex="@(Num++)" data-options="prompt1:'业务编号'" style="width:170px" class="easyui-textbox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">总单号:</label>
                                        <input id="MBL" name="MBL" tabindex="@(Num++)" data-options="prompt1:'总单号'" style="width:170px" class="easyui-textbox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">委托方:</label>
                                        <input id="Entrustment_Name" name="Entrustment_Name" tabindex="@(Num++)" data-options="prompt1:'委托方'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                            </div>
                            <div id="searchHide" class="col-lg-12 col-md-12 col-sm-12">
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">委托方编号:</label>
                                        <input id="Entrustment_Code" name="Entrustment_Code" tabindex="@(Num++)" data-options="prompt1:'委托方编号'" style="width:170px" class="easyui-textbox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">订舱方:</label>
                                        <input id="Book_Flat_Code" name="Book_Flat_Code" tabindex="@(Num++)" data-options="prompt1:'订舱方'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">批次号:</label>
                                        <input id="Batch_Num" name="Batch_Num" tabindex="@(Num++)" data-options="prompt1:'批次号'" style="width:170px" class="easyui-textbox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">起运港:</label>
                                        <input id="Depart_Port" name="Depart_Port" tabindex="@(Num++)" data-options="prompt1:'起运港'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">航班日期:</label>
                                        <input id="_Flight_Date_Want" name="_Flight_Date_Want" tabindex="@(Num++)" data-options="prompt1:'航班日期'" style="width:170px" class="easyui-datebox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">至:</label>
                                        <input id="Flight_Date_Want_" name="Flight_Date_Want_" tabindex="@(Num++)" data-options="prompt1:'至'" style="width:170px" class="easyui-datebox" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">目的港:</label>
                                        <input id="End_Port" name="End_Port" tabindex="@(Num++)" data-options="prompt1:'目的港'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">接单人:</label>
                                        <input id="ADDWHO" name="ADDWHO" tabindex="@(Num++)" data-options="prompt1:'操作人'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">航班号:</label>
                                        <input id="Flight_No" name="Flight_No" tabindex="@(Num++)" data-options="prompt1:'航班号'" style="width:170px" class="easyui-textbox" type="text" />
                                    </div>
                                </div>

                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">BSA:</label>
                                        <input id="Is_BAS" name="Is_BAS" tabindex="@(Num++)" data-options="prompt1:'Is_BAS'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">代操作:</label>
                                        <input id="Is_DCZ" name="Is_DCZ" tabindex="@(Num++)" data-options="prompt1:'代操作'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">重板:</label>
                                        <input id="Is_ZB" name="Is_ZB" tabindex="@(Num++)" data-options="prompt1:'重板'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">退关:</label>
                                        <input id="Is_TG" name="Is_TG" tabindex="@(Num++)" data-options="prompt1:'退关'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4">
                                    <div class="form-group">
                                        <label for="name" style="width:100px;">销售:</label>
                                        <input id="SallerId" name="SallerId" tabindex="@(Num++)" data-options="prompt1:'退关'" style="width:170px" class="easyui-combogrid" type="text" />
                                    </div>
                                </div>
                                <div class="form-group col-md-12">
                                    <input id="HWD" name="HWD" tabindex="@(Num++)" onclick="checkedClick('#HWD', '#HDQ')" class="easyui-checkbox" type="checkbox" />货未齐
                                    <input id="HDQ" name="HDQ" tabindex="@(Num++)" onclick="checkedClick('#HDQ', '#HWD')" class="easyui-checkbox" type="checkbox" />货到齐
                                    <input id="WBG" name="WBG" tabindex="@(Num++)" onclick="checkedClick('#WBG', '#YBG')" class="easyui-checkbox" type="checkbox" />未报关
                                    <input id="YBG" name="YBG" tabindex="@(Num++)" onclick="checkedClick('#YBG', '#WBG')" class="easyui-checkbox" type="checkbox" />已报关
                                    <input id="WDZD" name="WDZD" tabindex="@(Num++)" onclick="checkedClick('#WDZD', '#ZDWC')" class="easyui-checkbox" type="checkbox" />未打主单
                                    <input id="ZDWC" name="ZDWC" tabindex="@(Num++)" onclick="checkedClick('#ZDWC', '#WDZD')" class="easyui-checkbox" type="checkbox" />主单完成
                                    <input id="WSFD" name="WSFD" tabindex="@(Num++)" onclick="checkedClick('#WSFD', '#FDWC')" class="easyui-checkbox" type="checkbox" />未输分单
                                    <input id="FDWC" name="FDWC" tabindex="@(Num++)" onclick="checkedClick('#FDWC', '#WSFD')" class="easyui-checkbox" type="checkbox" />分单完成
                                    <input id="WZBQ" name="WZBQ" tabindex="@(Num++)" onclick="checkedClick('#WZBQ', '#YZBQ')" class="easyui-checkbox" type="checkbox" />未制标签
                                    <input id="YZBQ" name="YZBQ" tabindex="@(Num++)" onclick="checkedClick('#YZBQ', '#WZBQ')" class="easyui-checkbox" type="checkbox" />已制标签
                                    <input id="WCK" name="WCK" tabindex="@(Num++)" onclick="checkedClick('#WCK', '#YCK')" class="easyui-checkbox" type="checkbox" />未出库
                                    <input id="YCK" name="YCK" tabindex="@(Num++)" onclick="checkedClick('#YCK', '#WCK')" class="easyui-checkbox" type="checkbox" />已出库
                                </div>
                            </div>
                            <div class="form-group col-lg-12 col-md-12 col-sm-12" style="text-align:center;">
                                <input id="Only_Self" class="easyui-checkbox" type="checkbox" checked="checked"/>仅自己
                                <button id="btn-search" class="btn btn-primary">
                                    @*<i class="fa fa-search"></i>*@
                                    搜索
                                </button>
                                <button id="btn-reset" class="btn btn-default">
                                    <i class="fa fa-reset"></i>
                                    重置
                                </button>
                            </div>
                        </div>
                    </form>
                    <div class="table-responsive">
                        @Html.Partial("ListView")
                        <div style="text-align:center; padding-top:10px;">
                            <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                @*<input type="button" accesskey="n" onclick="append()" value="新增业务(N)">*@
                                <input type="button" accesskey="n" onclick="append()" value="新增业务(N)">
                                <input type="button" accesskey="c" onclick="copyappend()" value="复制业务(C)">
                                <input type="button" id="OutGoingButton" onclick="outgoing(this)" value="出库">
                                <input type="button" accesskey="v" onclick="warehouseSee()" value="仓库信息(V)">
                                @*<input type="button" value="进仓信息">*@
                                <input type="button" accesskey="f" onclick="ToCusIndex()" value=" 报关信息(f)">
                                <input type="button" accesskey="k" onclick="ToDocMent()" value="单证管理(K)">
                                @*<input type="button" accesskey="y" value="异常登记(Y)">*@
                                @*<input type="button" accesskey="p" id="btnPrint" value="打  印(P)">*@
                                <input type="button" accesskey="a" onclick="ToBmsBill()" value="结算信息(A)">
                                @*<input type="button" value="导出报关清单">
                                <input type="button" onclick="exportspellinglist()" value="导出拼货表">*@
                                <input type="button" onclick="javascript: window.open('/Warehouse_receipts/Index')" value="仓库接单">
                                <input type="button" onclick="openbatch_num()" value="生成批次号">
                            </div>
                            <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                <input type="button" accesskey="t" onclick="refund_Register()" value="退单登记(T)">
                                @*<input type="button" accesskey="h" onclick="printSignReceipt()" value="签收单打印(H)">
                                <input type="button" onclick="return_Customer()" value="退客户登记">*@
                                @*<input type="button" accesskey="g" value="退单情况(G)">*@
                                @*<input type="button" accesskey="b" onclick="Batch_Update()" value="批量修改(B)">*@
                                @*<input type="button" accesskey="l" value="综合查询(L)">*@
                                <input type="button" onclick="savetg(true)" value="退  关">
                                <input type="button" onclick="savetg(false)" value="取消退关">
                                <input type="button" onclick="EditMBL()" value="修改总单号">
                                <input type="button" accesskey="p"  id="btnExportPDFform" value="导出报表P">
                                <input type="button" accesskey="p"  id="btnExportExcelform" value="导出报表E">
                                @*<input type="button" accesskey="d" onclick="exportexcel()" value="导出业务接单(D)">
                                <input type="button" accesskey="d" onclick="exportreportform()" value="导出报表">
                                <input type="button" onclick="exportoperationlist()" value="导出操作清单">*@
                            </div>
                            @*<div class="form-group col-lg-12 col-md-12 col-sm-12">
                                <input type="button" value="导出分单PDF">
                                <input type="button" value="导出总单">
                                <input type="button" value="导出预报">
                                <input type="button" onclick="exportindexpdf()"value="导出封面">
                            </div>*@
                                @*<input type="button" onclick="createlot_no()" value="生成拼箱码">*@
                        </div>
                    </div>
                    <div class="form-group col-md-12" id="div_Batch_Num">
                        <div id="div_Batch_Num_panel" style="padding-top:20px; padding-bottom:10px;width:100%" class="easyui-panel" title="生成批次号"
                             data-options="collapsible:true">
                            <div class="form-group col-md-3"></div>
                            <div class="form-group col-md-6" id="Creat_Batch_Num">
                                <label style="width:20%">请输入批次号：</label>
                                <input type="text" class="easyui-textbox" id="addBatch_Num" style="width:60%" />
                                <button onclick="addbatch_num()">保存</button>
                            </div>
                            <div class="form-group col-md-3"></div>
                        </div>
                    </div>
				    <!-- end ibox-content -->
	            </div>
	        </div>
	    </div>
	</div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
    <p><input type="file" name="file_upload" id="file_upload" /></p>
</div>
<div id="printwindow" class="easyui-window" title="打印" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:200px;height:220px;padding:10px;">
</div>
<div id="exportreportformwindow" class="easyui-window" title="导出报表" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:200px;height:240px;padding:10px;">
</div>
@*<div id="mm_print" class="easyui-menu" data-option="hideOnUnhover:false;" style="width:120px; position:absolute;">
    <div>封面</div>
    <div>仓单</div>
    <div>分单</div>
    <div>托书</div>
    <div>普货地图</div>
</div>*@
<div id="mm_exportPDFform" class="easyui-menu" data-option="hideOnUnhover:false;" style="width:120px; position:absolute">
    <div>导出分单</div>
    <div>导出仓单</div>
    <div>托书</div>
    <div>普货地图</div>
</div>
<div id="mm_exportExcelform" class="easyui-menu" data-option="hideOnUnhover:false;" style="width:120px; position:absolute;">
    <div>封面</div>
    <div>业务接单信息表</div>
    <div>拼货表</div>
    <div>仓单</div>
    <div>分单</div>
    <div>托书</div>
    <div>操作清单</div>
    <div>普货地图</div>
    <div>订舱单</div>
    <div>ADHOC</div>
    @*<div>报关明细</div>*@
</div>

@*@section Scripts {*@
    <script type="text/javascript">
        $(function () {
            //生成批次号panel隐藏
            $("#div_Batch_Num").hide();
            //隐藏查询条件
            $("#searchHide").hide();
            //初始化，绑定查询条件下拉列表
            initPage();
            var opts = $dg.datagrid('options');
            opts.onClickCell = onClickCell;
            opts.onDblClickRow = onDblClickRow;
            opts.onSelect = onSelect;
            opts.onUnselect = onUnselect;
            //读取用户 设置的 列宽与顺序（formatter-func方法Json转换后 会丢失）
            var dg_id = $dg.attr('id');
            var ArrFieldNoWidth = getdg_FieldNoWidth(dg_id);//获取 上次设置的 列宽和顺序
            if (!ObjectIsEmpty(ArrFieldNoWidth)) {
                var ArrFormatterCell = opts.columns[0].filter(function (item) {
                    if (!ObjectIsEmpty(item.formatter))
                        return true;
                    else
                        return false;
                });
                $.each(ArrFieldNoWidth, function () {
                    for (var i in ArrFormatterCell) {
                        var item = ArrFormatterCell[i];
                        if (this.field == item.field)
                            this.formatter = item.formatter;
                    }
                });
                //设置 用户上次设置的 列宽和顺序
                opts.columns[0] = ArrFieldNoWidth;
                //初始化datagrid，以便列宽和顺序 生效
                $dg.datagrid();
            }
            opts.url = '/OPS_M_Orders/GetData';
            //设置列可移动
            $dg.datagrid("columnMoving");
            setfilteropts();

			$("#file_upload").uploadifive({
                'height': 30,
                'fileTypeDesc': 'Excel 2010 Files',
                'fileTypeExts': '*.xlsx',
                'uploadScript': '/FileUpload/Upload',
                'buttonText': '选择EXCEL',
                'multi': true,
                'displayData': 'speed',
                'formData': { 'modelType': 'OPS_M_Order' },
                'width': 120,
                'successTimeout': 100000,
                'onFallback': function () {
                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                    $('#file_upload').uploadifive('clearQueue')
                },
                'onSelect': function (queue) {
                    $.messager.progress({
                        title: '执行导入',
                        msg: '请等待...'
                    });
                },
                'onUploadComplete': function (file, data) {
                    $.messager.progress('close');
                    var data = $.parseJSON(data);
                    //console.log(data);
                    if (data.success == false) {
                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                        $("#file_upload").uploadifive('clearQueue')
                    } else {
                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                        reload();
                        $('#importwindow').window('close');
                    }
                    return true;
                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                }
			});
        });
        //
        function checkedClick(checkedId1, checkedId2) {
            if ($(checkedId1).prop('checked')) {
                $(checkedId2).prop('checked', false);
            }
        }
        var $dg = $('#ops_m_order_datagrid');
        var editIndex = undefined;
        //全部选中
        function selectAll() {
            //totaldata($dg.datagrid("getSelections"), "当前选中");
        }
        //选中合计
        function checktotal() {
            //totaldata($dg.datagrid("getSelections"), "当前选中");
        }
        //合计
        function totaldata(data, showstr) {
            var $rows = data;
            var showtotal = showstr + "共" + $rows.length + "票"
            var Pieces_Fact = 0;//件数
            var Weight_Fact = 0;//重量
            var Volume_Fact = 0;//体积
            $.each($rows, function (index, row) {
                Pieces_Fact = Pieces_Fact + row.Pieces_Fact;
                Weight_Fact = Weight_Fact + row.Weight_Fact;
                Volume_Fact = Volume_Fact + row.Volume_Fact;
            });
            Volume_Fact = Volume_Fact.toFixed(3);
            Pieces_Fact = "|件数:" + Pieces_Fact;
            Weight_Fact = "|重量:" + Weight_Fact;
            Volume_Fact = "|体积:" + Volume_Fact;
            showtotal = showtotal + Pieces_Fact + Weight_Fact + Volume_Fact;
            $("#lab_show_total_JMT").text(showtotal);
        }
        //总单号格式化
        function MBLFormatter(value, row, index) {
            try{
                if (value != null && value != '') {
                    if (value.length == 11) {
                        var first = value.substring(0, 3);
                        var second = value.substring(3, 7);
                        var third = value.substring(7, 11);
                        return first + "-" + second + " " + third;
                    } else
                        return value;
                } else
                    return value;
            } catch (e) {
                console.log('MBLFormatter-error', e);
                return value;
            }
        }
        //显示或隐藏查询条件
        function searchShow() {
            if ($(this).hasClass('icon-plus')) {
                $(this).removeClass('icon-plus');
                $(this).addClass('icon-minus');
                $(this).html('&nbsp;折叠');
            }
            else {
                $(this).removeClass('icon-minus');
                $(this).addClass('icon-plus');
                $(this).html('&nbsp;更多');
            }
            if ($("#searchHide").is(":hidden")) {
                $("#searchHide").slideDown();
            } else {
                $("#searchHide").slideUp();
            }
        }
        //初始化页面
        function initPage() {
            //设置Combogrid 分页控件 简单模式
            $("#Entrustment_Name").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/OPS_EntrustmentInfors/GetCusBusInf'
            }));
            //订舱方
            $("#Book_Flat_Code").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/OPS_EntrustmentInfors/GetCusBusInf'
            }));
            //启运港
            $("#Depart_Port").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts'
            }));
            //目的港
            $("#End_Port").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts'
            }));
            //接单人
            $("#ADDWHO").combogrid($.extend({}, combogrid_DefaultSettings, {
                multiple: true,
                checkOnSelect: true,
                url: '/AccountManage/Get_PageUserList_FromCache?IsJDServ=1'
            }));
            //Is_BAS
            $("#Is_BAS").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                panelWidth:170,
                pagination: false,
                columns: [[
                    //{ field: 'ID', title: '代码', width: 80 },
                    { field: 'TEXT', title: '名称',width:160 }
                ]],
                data: [
                    { ID: "false", TEXT: "否" },
                    { ID: "true", TEXT: "是" }
                ]
            }));
            //代操作
            $("#Is_DCZ").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                panelWidth:170,
                pagination: false,
                columns: [[
                    //{ field: 'ID', title: '代码', width: 80 },
                    { field: 'TEXT', title: '名称', width:160 }
                ]],
                data: [
                    { ID: "false", TEXT: "否" },
                    { ID: "true", TEXT: "是" }
                ]
            }));
            //重板
            $("#Is_ZB").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                panelWidth:170,
                pagination: false,
                columns: [[
                    //{ field: 'ID', title: '代码', width: 80 },
                    { field: 'TEXT', title: '名称',width:160 }
                ]],
                data: [
                    { ID: "false", TEXT: "否" },
                    { ID: "true", TEXT: "是" }
                ]
            }));
            //退关
            $("#Is_TG").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                panelWidth:170,
                pagination: false,
                value:false,
                columns: [[
                    //{ field: 'ID', title: '代码', width: 80 },
                    { field: 'TEXT', title: '名称',width:160 }
                ]],
                data: [
                    { ID: "false", TEXT: "否" },
                    { ID: "true", TEXT: "是" }
                ]
            }));
            //业务编号和批次号
            $("#CodeQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                pagination: false,
                value: "Operation_Id",
                data: [
                    { ID: 'Operation_Id', TEXT: '业务编号' },
		            { ID: 'CldOperation_Id', TEXT: '承揽点业务编号' },
		            { ID: 'Entrustment_Code', TEXT: '委托方编号' }
                ],
                columns: [[
                    { field: 'TEXT', title: '--请选择--' }
                ]]
            }));
            //销售
            $("#SallerId").combogrid($.extend({}, combogrid_DefaultSettings, {
                columns: [[
                    { field: 'ID', title: 'ID', width: 30 },
                    { field: 'Code', title: '代码', width: 60 },
                    { field: 'TEXT', title: '名称', width: 120 },
                ]],
                url: '/Sallers/GetPagerSallers_FromCache'
            }));
        }
        //查询条件重置按钮 点击事件
        $("#btn-reset").click(function (e) {
            e.preventDefault();
            clearfrom();
        });
        //点击重置按钮时，触发，清空查询条件
        function clearfrom() {
            $('#searchform').form('reset');
        }
        //搜索
        $("#btn-search").click(function (e) {
            e.preventDefault();
            searchf();
        });
        //点击查询按钮时，触发
        function searchf() {
            setfilteropts();//设置查询条件
            reload();
        }
        //设置查询条件
        function setfilteropts() {
            var Operation_Id = $("#Operation_Id").textbox("getValue");
            var MBL = $("#MBL").textbox("getValue");
            //var Lot_No = $("#Lot_No").textbox("getValue");
            var Entrustment_Code = $("#Entrustment_Code").textbox("getValue");
            var Entrustment_Name = $("#Entrustment_Name").combogrid("getValue");
            var Book_Flat_Code = $("#Book_Flat_Code").textbox("getValue");
            var Batch_Num = $("#Batch_Num").textbox("getValue");
            var Depart_Port = $("#Depart_Port").textbox("getValue");
            var _Flight_Date_Want = $("#_Flight_Date_Want").textbox("getValue");
            var Flight_Date_Want_ = $("#Flight_Date_Want_").textbox("getValue");
            var End_Port = $("#End_Port").textbox("getValue");
            var Flight_No = $("#Flight_No").textbox("getValue");
            var ADDID = $("#ADDWHO").combogrid("getValues");
            var Is_BAS = $("#Is_BAS").combogrid("getValue");
            var Is_DCZ = $("#Is_DCZ").combogrid("getValue");
            var Is_ZB = $("#Is_ZB").combogrid("getValue");
            var Is_TG = $("#Is_TG").combogrid("getValue");

            var HWD = $("#HWD").prop('checked');
            var HDQ = $("#HDQ").prop('checked');
            var WBG = $("#WBG").prop('checked');
            var YBG = $("#YBG").prop('checked');
            var WDZD = $("#WDZD").prop('checked');
            var ZDWC = $("#ZDWC").prop('checked');
            var WSFD = $("#WSFD").prop('checked');
            var FDWC = $("#FDWC").prop('checked');
            var WZBQ = $("#WZBQ").prop('checked');
            var YZBQ = $("#YZBQ").prop('checked');
            var WCK = $("#WCK").prop('checked');
            var YCK = $("#YCK").prop('checked');

            var params = [];
            var opts = $dg.datagrid('options');

            if ($("#Only_Self").prop("checked")) {
                params.push({ "field": "Only_Self", "op": "equal", "value": true });
            }
            //总单结算状态 （false 否）
            params.push({ "field": "OPS_BMS_Status", "op": "equal", "value": false });
            //或是否到齐
            if (!(typeof (HWD) === 'undefined' || HWD == null || HWD == "")) {
                params.push({ "field": "Is_HDQ", "op": "equal", "value": false });
            } else if (!(typeof (HDQ) === 'undefined' || HDQ == null || HDQ == "")) {
                params.push({ "field": "Is_HDQ", "op": "equal", "value": true });
            }
            //是否已经报关
            if (!(typeof (WBG) === 'undefined' || WBG == null || WBG == "")) {
                params.push({ "field": "Is_BG", "op": "equal", "value": false });
            } else if (!(typeof (YBG) === 'undefined' || YBG == null || YBG == "")) {
                params.push({ "field": "Is_BG", "op": "equal", "value": true });
            }
            //发送主单
            if (!(typeof (WDZD) === 'undefined' || WDZD == null || WDZD == "")) {
                params.push({ "field": "SendOut_ZD", "op": "equal", "value": false });
            } else if (!(typeof (ZDWC) === 'undefined' || ZDWC == null || ZDWC == "")) {
                params.push({ "field": "SendOut_ZD", "op": "equal", "value": true });
            }
            //发送分单
            if (!(typeof (WSFD) === 'undefined' || WSFD == null || WSFD == "")) {
                params.push({ "field": "SendOut_FD", "op": "equal", "value": false });
            } else if (!(typeof (FDWC) === 'undefined' || FDWC == null || FDWC == "")) {
                params.push({ "field": "SendOut_FD", "op": "equal", "value": true });
            }
            //打印标签
            if (!(typeof (WZBQ) === 'undefined' || WZBQ == null || WZBQ == "")) {
                params.push({ "field": "Is_BQ", "op": "equal", "value": false });
            } else if (!(typeof (YZBQ) === 'undefined' || YZBQ == null || YZBQ == "")) {
                params.push({ "field": "Is_BQ", "op": "equal", "value": true });
            }
            //是否出库
            if (!(typeof (WCK) === 'undefined' || WCK == null || WCK == "")) {
                params.push({ "field": "Is_OutGoing", "op": "equal", "value": false });
            } else if (!(typeof (YCK) === 'undefined' || YCK == null || YCK == "")) {
                params.push({ "field": "Is_OutGoing", "op": "equal", "value": true });
            }

            //业务编号
            if (!(typeof (Operation_Id) === 'undefined' || Operation_Id == null || Operation_Id == "")) {
                params.push({ "field": "Operation_Id", "op": "equal", "value": Operation_Id });
            }

            if (!(typeof (MBL) === 'undefined' || MBL == null || MBL == "")) {
                params.push({ "field": "MBL", "op": "equal", "value": MBL });
            }
            //if (!(typeof (Lot_No) === 'undefined' || Lot_No == null || Lot_No == "")) {
            //    params.push({ "field": "Lot_No", "op": "equal", "value": Lot_No });
            //}
            if (!(typeof (Entrustment_Code) === 'undefined' || Entrustment_Code == null || Entrustment_Code == "")) {
                params.push({ "field": "Entrustment_Code", "op": "equal", "value": Entrustment_Code });
            }
            if (!(typeof (Entrustment_Name) === 'undefined' || Entrustment_Name == null || Entrustment_Name == "")) {
                params.push({ "field": "Entrustment_Name", "op": "equal", "value": Entrustment_Name });
            }
            if (!(typeof (Book_Flat_Code) === 'undefined' || Book_Flat_Code == null || Book_Flat_Code == "")) {
                params.push({ "field": "Book_Flat_Code", "op": "equal", "value": Book_Flat_Code });
            }
            if (!(typeof (Batch_Num) === 'undefined' || Batch_Num == null || Batch_Num == "")) {
                params.push({ "field": "Batch_Num", "op": "equal", "value": Batch_Num });
            }
            if (!(typeof (Depart_Port) === 'undefined' || Depart_Port == null || Depart_Port == "")) {
                params.push({ "field": "Depart_Port", "op": "equal", "value": Depart_Port });
            }
            if (!(typeof (_Flight_Date_Want) === 'undefined' || _Flight_Date_Want == null || _Flight_Date_Want == "")) {
                params.push({ "field": "_Flight_Date_Want", "op": "equal", "value": _Flight_Date_Want });
            }
            if (!(typeof (Flight_Date_Want_) === 'undefined' || Flight_Date_Want_ == null || Flight_Date_Want_ == "")) {
                params.push({ "field": "Flight_Date_Want_", "op": "equal", "value": Flight_Date_Want_ });
            }
            if (!(typeof (End_Port) === 'undefined' || End_Port == null || End_Port == "")) {
                params.push({ "field": "End_Port", "op": "equal", "value": End_Port });
            }
            if (!(typeof (Flight_No) === 'undefined' || Flight_No == null || Flight_No == "")) {
                params.push({ "field": "Flight_No", "op": "equal", "value": Flight_No });
            }
            if (!(typeof (ADDID) === 'undefined' || ADDID == null || ADDID == "")) {
                var addid = "";
                $.each(ADDID, function (index, item) {
                    if (item != "") {
                        if (addid != "") {
                            addid = addid + ",";
                        }
                        addid = addid + item;
                    }
                });
                params.push({ "field": "ADDID", "op": "equal", "value": addid });
            }
            if (!(typeof (Is_BAS) === 'undefined' || Is_BAS == null || Is_BAS == "")) {
                params.push({ "field": "Is_BAS", "op": "equal", "value": Is_BAS });
            }
            if (!(typeof (Is_DCZ) === 'undefined' || Is_DCZ == null || Is_DCZ == "")) {
                params.push({ "field": "Is_DCZ", "op": "equal", "value": Is_DCZ });
            }
            if (!(typeof (Is_ZB) === 'undefined' || Is_ZB == null || Is_ZB == "")) {
                params.push({ "field": "Is_ZB", "op": "equal", "value": Is_ZB });
            }
            if (!(typeof (Is_TG) === 'undefined' || Is_TG == null || Is_TG == "")) {
                params.push({ "field": "Is_TG", "op": "equal", "value": Is_TG });
            }
            //销售
            var SallerId = $("#SallerId").combogrid('getValue');
            if (!(typeof (SallerId) === 'undefined' || SallerId == null || SallerId == "")) {
                params.push({ "field": "SallerId", "op": "equal", "value": SallerId });
            }
            opts.queryParams = {
                'filterRules': JSON.stringify(params)
            };
            opts.pageNumber = 1;
            var pager = $dg.datagrid('getPager');
            pager.pagination('refresh', {
                pageNumber: 1
            });
        }
        //是否自营
        function formatterIs_Self(value, row, index) {
            if (value) {
                return "是";
            } else {
                return "否";
            }
        }
        //货是否到齐
        function NewBoolFommater(value, row, index) {
            var returnstr = "否";
            var TF = false;
            try {
                if (typeof value === 'undefined')
                    TF = false;
                else if (typeof value === 'boolean') {
                    if (value == true)
                        TF = true;
                }
                else if (value == null)
                    TF = false;
                else {
                    if (isNaN(value)) {
                        if (value.toLowerCase() == 'true')
                            TF = true;
                    }
                    else {
                        var intval = parseInt(value);
                        if (intval > 0)
                            TF = true;
                        }
                    }
                }
                catch (e) {
                    TF = false;
                }
                if (TF)
                    returnstr = "是";
                var $this = this;
                if ($this) {
                    if ($this.title) {
                        returnstr = $this.title.replace(/[是否|标签]/g, "");
                        returnstr = (TF ? "已" : "未") + returnstr;
                }
            }

            return "<spn>" + returnstr + "</spn>";
        }
        //导出Excel
        function importexcel() {
			$('#importwindow').window('open');
        }
        //报关报检
        function ToCusIndex() {
            var row = $dg.datagrid("getSelections");
            if (row.length > 1) {
                $.messager.alert("提示", "报关报检功能，只能选中一行数据！"); return;
            }
            if (row.length == 0) {
                $.messager.alert("提示", "报关报检功能，必须选中一行数据！"); return;
            }
            var wtxxid = row[0].WTId;
            //$(location).attr('href', "/CustomsInspections/CusIndex?OPS_ENid=" + wtxxid);
            var url = "/CustomsInspections/CusIndex?OPS_ENid=" + wtxxid;
            window.open(url);
        }
        //单证管理
        function ToDocMent() {
            var row = $dg.datagrid("getSelections");
            if (row.length > 1) {
                $.messager.alert("提示", "单证管理功能，只能选中一行数据！"); return;
            }
            if (row.length == 0) {
                $.messager.alert("提示", "单证管理功能，必须选中一行数据！"); return;
            }
            var Operation_ID = row[0].Operation_Id;
            //$(location).attr('href', "/DocumentManagements/Index?id=0&Operation_ID=" + Operation_ID);
            var url = "/DocumentManagements/Index?id=0&Operation_ID=" + Operation_ID;
            window.open(url);
        }
        //打印
        $("#btnPrint").on('click', function (e) {
            $('#mm_print').menu('show', {
                hideOnUnhover: false,
                left: e.pageX,
                top: e.pageY - $('#mm_print').width()
            });
        });
        //导出报表 P
        $("#btnExportPDFform").on('click', function (e) {
            $('#mm_exportPDFform').menu('show', {
                hideOnUnhover: false,
                left: e.pageX,
                top: e.pageY - $('#mm_exportPDFform').width()
            });
        });
        //导出报表P快捷菜单，各个子菜单的 单击事件
        $('#mm_exportPDFform').menu({
            onClick: function (item) {
                switch (item.text) {
                    case "导出分单":
                        exportOP_HPDF();
                        break;
                    case "导出仓单":
                        exportwarehousereceiptpdf();
                        break;
                    case "托书":
                        exportTSPDF();
                        break;
                    case "普货地图":
                        exportenterwhinformPDF();
                }
            }
        });
        //导出报表E
        $("#btnExportExcelform").on('click', function (e) {
            $('#mm_exportExcelform').menu('show', {
                hideOnUnhover: false,
                left: e.pageX,
                top: e.pageY - $('#mm_exportExcelform').width()
            });
        });
        //导出报表E 快捷菜单，各个子菜单的 单击事件
        $('#mm_exportExcelform').menu({
            onClick: function (item) {
                switch (item.text) {
                    case "封面":
                        exportindexExl();
                        break;
                    case "业务接单信息表":
                        exportexcel();
                        break;
                    case "拼货表":
                        exportspellinglist();
                        break;
                    case "仓单":
                        exportwarehousereceiptexcel();
                        break;
                    case "分单":
                        exportOP_H();
                        break;
                    case "托书":
                        exportTS();
                        break;
                    case "操作清单":
                        exportoperationlist();
                        break;
                    case "普货地图":
                        exportenterwhinform();
                        break;
                    case "订舱单":
                        bookflatexcel();
                        break;
                    case "ADHOC":
                        exportadhoc();
                        break;
                }
            }
        });
        //导出报表
        function exportreportform() {
            $('#mm_exportreportform').menu('show', {
                left: 500,
                top: 400
            });
        }
        //导出仓单PDF
        function exportwarehousereceiptpdf() {
            var opts = $dg.datagrid('options');

            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            } else if (rows.length > 1) {
                $.messager.alert("提示", "只能选择一条总单数据！");
            }else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, typeName: "仓单" };
                var url = '/OPS_M_Orders/ExportWarehouseReceiptPdf';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function (data) {
                        if (typeof (data) == "string") {
                            data = JSON.parse(data);
                            if (!data.Success) {
                                $.messager.alert("提示", data.ErrMsg);
                            }
                            $.messager.progress('close');
                        } else {
                            $.messager.progress('close');
                            reload();
                        }
                    }
                });
            }
        }
        //导出仓单 Excel
        function exportwarehousereceiptexcel() {
            var opts = $dg.datagrid('options');

            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else if (rows.length > 1) {
                $.messager.alert("提示", "请选择一条接单数据！");
            } else
            {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "仓单" };
                var url = '/OPS_M_Orders/ExportWarehouseReceipt';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function (data) {
                        console.log("data:",data);
                        if (typeof (data) == "string") {
                            data = JSON.parse(data);
                            console.log("data:", data);
                            if (!data.Success) {
                                $.messager.alert("提示", data.ErrMsg);
                            }
                            $.messager.progress('close');
                        } else {
                            $.messager.progress('close');
                            reload();
                        }
                    }
                });
            }
        }
        //导出ADHOC
        function exportadhoc() {
            var opts = $dg.datagrid('options');

            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "ADHOC", UserCode: "@loginname" };
                var url = '/OPS_M_Orders/ExportADHOC';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function (data) {
                        console.log("data", data);
                        $.messager.progress('close');
                        reload();
                    }
                });
            }
        }
        //导出订舱单 Excel
        function bookflatexcel() {
            var opts = $dg.datagrid('options');

            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "订舱单" };
                var url = '/OPS_M_Orders/ExportBook_Flat';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function (data) {
                        console.log("data", data);
                        $.messager.progress('close');
                        reload();
                    }
                });
            }
        }
        //点击，进入主单结算
        function ToBmsBill() {
            var row = $dg.datagrid("getSelections");
            if (row.length > 1) {
                $.messager.alert("提示", "主单结算功能，只能选中一行数据！"); return;
            }
            if (row.length == 0) {
                $.messager.alert("提示", "主单结算功能，必须选中一行数据！"); return;
            }
            var rowdataID = row[0].Id;
            //$(location).attr("href", "/Bms_Bill_Aps/BmsBillApView?OPS_M_OrdId=" + rowdataID);
            var url = "/Bms_Bill_Aps/BmsBillApView?OPS_M_OrdId=" + rowdataID;
            window.open(url);
        }
        //导出拼货表
        function exportspellinglist() {
            var opts = $dg.datagrid('options');
            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            } else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "拼货表" };
                var url = '/OPS_M_Orders/ExportSpellingList';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function () {
                        $.messager.progress('close');
                        reload();
                    }
                });
            }
        }
        //导出进仓通知书（普货地图）
        function exportenterwhinform() {
            var opts = $dg.datagrid('options');
            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "进仓通知书" };
                var url = '/OPS_M_Orders/ExportEnterWHInform';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function (data) {
                        var data = JSON.parse(data)
                        if (data.Success == false) {
                            $.messager.alert("提示", data.ErrMsg)
                        }
                        else {
                            $.messager.progress('close');
                            reload();
                        }                      
                    }
                });
            }
        }
        //导出进仓通知书（普货地图）P
        function exportenterwhinformPDF() {
            var opts = $dg.datagrid('options');
            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "进仓通知书PDF" };
                var url = '/OPS_M_Orders/ExportEnterWHInform';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function () {
                        $.messager.progress('close');
                        reload();
                    }
                });
            }
        }
        //导出托书
        function exportTS() {
            var opts = $dg.datagrid('options');
            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "托书" };
                var url = '/OPS_M_Orders/ExportTS';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭              
                    callbackFuc: function (data) {
                        var data = JSON.parse(data)
                        if (data.Success == false) {
                            $.messager.alert("提示", data.ErrMsg)
                            $.messager.progress('close');
                            reload();
                        }
                        else {
                            $.messager.progress('close');
                            reload();
                        }
                    }
                });
            }
        }
        //导出托书P
        function exportTSPDF() {
            var opts = $dg.datagrid('options');
            var rows = $dg.datagrid("getSelections");
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择接单数据！");
            }
            else {
                var ids = [];
                for (var i = 0; i < rows.length; i++) {
                    ids.push(rows[i].Operation_Id);
                }

                var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "托书PDF" };
                var url = '/OPS_M_Orders/ExportTS';
                $.DownLoadProgress({
                    url: url,         //下载文件的url
                    method: 'Post',   //链接打开方式
                    data: formData,         //要发送的数据
                    downLoadInfo: '下载文件', //下载界面文字
                    closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                    callbackFuc: function () {
                        $.messager.progress('close');
                        reload();
                    }
                });
            }
        }
        //导出报表
		function exportexcel() {
			var opts = $dg.datagrid('options');
		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    } else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "业务接单信息" };
		        var url = '/OPS_M_Orders/ExportExcelOrder';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
        //导出封面PDF
		function exportindexpdf()
		{
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    } else
		    {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, typeName: "封面" };
		        var url = '/OPS_M_Orders/ExportWHReceiptPdf';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
		//导出Testzyj
		function exportTestzyj() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    } else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, typeName: "封面" };
		        var url = '/OPS_M_Orders/ExportTestzyj';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
        //导出封面DOC
		function exportindexdoc() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else
		    {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, typeName: "封面" };
		        var url = '/OPS_M_Orders/ExportWHReceiptDoc';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
		//导出分单excel
		function exportOP_H() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "分单" };
		        var url = '/OPS_M_Orders/ExportOP_H';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
		//导出封面excel
		function exportindexExl() {
		    var opts = $dg.datagrid('options');
		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "封面" };
		        var url = '/OPS_M_Orders/ExportWHReceiptExcel';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
		//导出分单PDF
		function exportOP_HPDF() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "分单" };
		        var url = '/OPS_M_Orders/ExportOP_HPDF';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
		//打印分单PDF
		function printOP_HPDF() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "打印分单" };
		        var url = '/OPS_M_Orders/ExportOP_HPDF';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function (data) {
		                var data = JSON.parse(data);
		                if (data.Success == false) {
		                    $.messager.alert("提示", data.ErrMsg);
		                }
		                else
		                {
		                    window.open('/FileDownLoad/ExlDD/' + data.replace(/"/g, ""));
		                    $.messager.progress('close');
		                    reload();
		                }

		            }
		        });
		    }
		}
		//导出报关明细
		function exportcustomdtl() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    } else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "报关明细" };
		        var url = '/OPS_M_Orders/ExportCustomDtl';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
        //导出操作清单
		function exportoperationlist() {
		    var opts = $dg.datagrid('options');

		    var rows = $dg.datagrid("getSelections");
		    if (rows.length == 0) {
		        $.messager.alert("提示", "请选择接单数据！");
		    }
		    else {
		        var ids = [];
		        for (var i = 0; i < rows.length; i++) {
		            ids.push(rows[i].Operation_Id);
		        }

		        var formData = { filterRules: ids, sort: opts.sortName, order: opts.sortOrder, typeName: "操作清单" };
		        var url = '/OPS_M_Orders/ExportOperationList';
		        $.DownLoadProgress({
		            url: url,         //下载文件的url
		            method: 'Post',   //链接打开方式
		            data: formData,         //要发送的数据
		            downLoadInfo: '下载文件', //下载界面文字
		            closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
		            callbackFuc: function () {
		                $.messager.progress('close');
		                reload();
		            }
		        });
		    }
		}
        //书信
		function reload() {
		    reject();//回滚所有变更
            $dg.datagrid('reload');
        }
		//combogrid 设置信息（onBeginEdit时,使用）
        var combogrid_Settings = {
			'COUNTRY': {
				required: true,
                url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY',
                method: 'get',
                delay: 500,
                multiple: false,
                panelHeight: 'auto',
                panelWidth: 205,
                idField: 'COUNTRY_CO',
                valueField: 'COUNTRY_CO',
                textField: 'COUNTRY_NA',
                pageSize: 10,//每页显示的记录条数，默认为10
                pageList: [5, 10, 20],//可以设置每页记录条数的列表
                pagination: true,//是否分页
                columns: [[
					{ field: 'COUNTRY_CO', title: '代码', width: 53 },
                    { field: 'COUNTRY_NA', title: '名称', width: 150 }
                ]],
                onLoadSuccess: function () {
					ondgLoadSuccess($dg, 'COUNTRY', rowIndex);
                },
                onChange: function (value) {
				    var targetEditor = $dg.datagrid('getEditor', {
				        field: 'COUNTRY',
				        index: editIndex
				    });
				    if (targetEditor != null) {
				        var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
				        if (Selted) {
				            var datarow = $dg.datagrid('getData').rows[editIndex];
				            if (!(typeof datarow === 'undefined' || datarow == null)) {
                                datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
				            }
				        }
				    }
				},
				keyHandler: {
			        up: function (e) {
			            combogrid_upKey(this, e);
			        },
			        down: function (e) {
			            combogrid_downKey(this, e);
			        },
			        enter: function (e) {
			            combogrid_enterKey(this, e, $dg, 'COUNTRY', rowIndex);
			        },
			        query: function (q) {
			            combogrid_query(this, q, rowIndex, {});
			        }
			    }
			}
		};
		//开始编辑行时，赋值 联动数据
        function onBeginEdit(rowIndex, rowData) {
			var num = 0;
			var regx = /^\/Date\([0-9]+(\)\/)$/g;
            for (var i in rowData) {
			    if (regx.test(rowData[i])) {
			        rowData[i] = datetimeformatter(rowData[i]);
			    }
                var targetEditor = $dg.datagrid('getEditor', {
                    field: i,
                    index: rowIndex
                });
                //console.log("targetEditor", i, targetEditor);
                if (targetEditor) {
                    num++;
                    if (num == 1 && $(targetEditor.target).val() == '') {
                        $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                    }

                    var OldVal = targetEditor.oldHtml;
                    switch (targetEditor.type.toLowerCase()) {
                        case "combogrid":
                            //console.log(targetEditor);
                            var combogrid_Setting = combogrid_Settings[targetEditor.field];
                            if (combogrid_Setting) {
                                $(targetEditor.target).combogrid(combogrid_Setting);
                            }
                            if (!(typeof (OldVal) === 'undefined' || OldVal == null || OldVal == '')) {
								if (rowData[targetEditor.field]) {
								    OldVal = rowData[targetEditor.field];
								}
								$(targetEditor.target).combogrid('setValue', OldVal);
								var opts = $(targetEditor.target).combogrid('options');
								var url = opts.url;
								//设置查询参数
								var queryParams = {
								    page: 1,
								    rows: opts.pageSize,
								    q: OldVal
								};
								$(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                            }
                            break;
                        case "combobox":
                            var opts = $(targetEditor.target).combobox({
                                inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        combobox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "textbox":
                            $(targetEditor.target).textbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "numberbox":
                            $(targetEditor.target).numberbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            break;
                        case "datebox":
                            $(targetEditor.target).datebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "datetimebox":
                            $(targetEditor.target).datetimebox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "checkbox":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "radio":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                    }
                }
            }
        }
        //结束编辑
        function endEditing() {
            if (editIndex == undefined)
				return true;
            if ($dg.datagrid('validateRow', editIndex)) {
				$dg.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }
        //双击当前行，打开编辑窗口
        function onDblClickRow(index, row) {
            //$(location).attr('href', "/OPS_M_Orders/Edit?id=" + row.Id);
            var url = "/OPS_M_Orders/Edit?id=" + row.Id;
            window.open(url);
        }
        //双击单元格
        function onClickCell(index, field) {
			var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
            if ($.inArray(field, _operates) >= 0) {
                return;
            }
            if (editIndex != index) {
                if (endEditing()) {
                    @if (!Html.IsAuthorize("OPS_M_Orders", "Index", "Edit"))
                    {
                        @Html.Raw("$.messager.alert('提示', '您没有编辑权限！');");
                        @Html.Raw("return;\r\n");
                    }
                    //动态设置 编辑样式
                    var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
                    if (!(typeof (byteColumn) === 'undefined' || byteColumn == null || byteColumn == '')) {
                        //byteColumn.editor = {};
                        //byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
                        //byteColumn.editor = {};
                        //var byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
                        //byteColumn.editor = {
                        //    type: 'textbox',
                        //    options: {
                        //        required: false,
                        //        validType: 'length[0,20]'
                        //    }
                        //};
                        //byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
                        //byteColumn.editor = {
                        //    type: 'datebox',
                        //    options: {
                        //        required: false
                        //    }
                        //};
                    }

                    //$dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            } else {
                $dg.datagrid("unselectRow", index)
                editIndex = undefined;
            }
        }
        //加载成功
        function onLoadSuccess(rowdata) {
            //行号自适应宽度
            $(this).datagrid("fixRownumber");

            var footer = $dg.datagrid("getFooterRows");

            //共59票|件数:7263|重量:10578|体积:785650.657
            if (footer != undefined) {
                var showtotal = "共" + footer[0].totalCount.toString() + "票"
                var Pieces_Fact = 0;//件数
                var Weight_Fact = 0;//重量
                var Volume_Fact = 0;//体积
                Pieces_Fact = "|件数:" + footer[0].totalPieces_Fact.toString();
                Weight_Fact = "|重量:" + footer[0].totalWeight_Fact.toString();
                Volume_Fact = "|体积:" + footer[0].totalVolume_Fact.toString();

                showtotal = showtotal + Pieces_Fact + Weight_Fact + Volume_Fact;
                $("#lab_show_total_JMT").text(showtotal);
            }
            //清除datagrid中选中的记录
            $dg.datagrid("clearChecked");
            $dg.datagrid("clearSelections");
            //只有一行数据时，自动选中
            var rows = $dg.datagrid("getRows");
            if (rows.length == 1) {
                $dg.datagrid("checkRow", 0);
            }
        }
        //承揽接单 新增
        function append() {
            //$(location).attr("href", "/OPS_M_Orders/Create");
            var url = "/OPS_M_Orders/Create";
            window.open(url);
        }
        //承揽接单 复制新增
        function copyappend() {
            var row = $dg.datagrid("getSelections");
            if (row.length > 1) {
                $.messager.alert("提示", "复制新增功能，只能选中一行数据！"); return;
            }
            if (row.length == 0) {
                $.messager.alert("提示", "复制新增功能，必须选中一行数据！"); return;
            }
            //$(location).attr('href', "/OPS_M_Orders/Create?Oid=" + row[0].Id);
            var url = "/OPS_M_Orders/Create?Oid=" + row[0].Id;
            window.open(url);
        }
        //仓库信息
        function warehouseSee() {
            var row = $dg.datagrid("getSelections");
            if (row.length > 1) {
                $.messager.alert("提示", "仓库接单功能，只能选中一行数据！"); return;
            }
            if (row.length == 0) {
                $.messager.alert("提示", "仓库接单功能，必须选中一行数据！"); return;
            }
            //$(location).attr('href', "/OPS_M_Orders/WarehouseSee?MBL=" + row[0].MBL + "&HBL=" + row[0].HBL + '&MBLId=' + row[0].Id);
            var url = "/OPS_M_Orders/WarehouseSee?MBL=" + row[0].MBL + "&HBL=" + row[0].HBL + '&MBLId=' + row[0].Id;
            window.open(url);
        }
        //删除
        function removeit() {
            var Seltdata = $dg.datagrid('getSelections');
            if (!(typeof editIndex === 'undefined' || editIndex == null || isNaN(editIndex))) {
                $dg.datagrid('cancelEdit', editIndex);
                editIndex = undefined;
            }
            for (var i = Seltdata.length; i > 0; i--) {
                var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
                //console.log(rowindex);
                $dg.datagrid('deleteRow', rowindex);
            }
        }
        //提交变更集
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    var url = '/OPS_M_Orders/SaveData';
                    $.ajax({
                        type: 'POST',
                        url: url,//获取数据的函数
                        async: true,//true 异步，false 同步
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                        beforeSend: function (xhr) {//发送请求前运行的函数
                            $.messager.progress({
                                title: '数据处理中',
                                msg: '数据处理中，请等待...'
                            });
                            //验证重复提交时 请加上 这句
                            AddAjaxActionGuidName(this);
                        },
                        success: function (response) {//查询成功,data为返回的数据
                            if (response.Success) {
                                $.messager.alert("提示", "提交成功！");
                                $dg.datagrid('acceptChanges');
                                reload();
                            }
                            else {
                                var ErrMsgStr = '提交错误了！';
                                if (!(typeof (response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
                                    ErrMsgStr = response.ErrMsg;
                                $.messager.alert("错误", ErrMsgStr, 'error');
                            }
                        },
                        error: function () {//查询失败
                            $.messager.alert("错误", "提交错误了！", 'error');
                        },
                        complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                            $.messager.progress('close');
                        }
                    });
                }
                //$dg.datagrid('acceptChanges');
            }
        }
        //撤销变更集
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        //获取变更集
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }
        //自动添加 textbox 或 text的值
        function AutoAddFilterRule($dg_) {
            var ColumnsFields = $dg_.datagrid('getColumnFields');
            $.each(ColumnsFields, function (i, ColumnName) {
                var input = $dg_.datagrid('getFilterComponent', ColumnName);
                if (!(input.data("datebox") || input.data("datetimebox") || input.data("combobox") || input.data("checkbox") || input.data("combotree") || input.data("combogrid") || input.data("numberbox"))) {
                    var rule = $dg_.datagrid('getFilterRule', ColumnName);
                    var value = input.val();
                    if (!(typeof (value) === 'undefined' || value == null || value == '')) {
                        if ((rule && rule.value != value) || !rule) {
                            $dg_.datagrid('addFilterRule', {
                                field: ColumnName,
                                op: 'equal',
                                value: value
                            });
                        }
                    } else {
                        if (rule) {
                            $dg_.datagrid('removeFilterRule', ColumnName);
                        }
                    }
                }
            });
        }
        //选中行
        function onSelect(index, row) {
            //console.log(index, row);
            //totaldata($dg.datagrid("getSelections"), "当前选中");
        }
        //取消 选中行
        function onUnselect(rowIndex, rowData) {
            //if (!IsCheckFlag) {
            //    IsCheckFlag = true;
            //    $("#dg").datagrid("selectRow", rowIndex);
            //}
        }
        //自适应页面大小
        function MyNavResize() {
            var opts = $("#navbar-minimalize").NavResize('getOptions');
            opts.Auto = false;
            opts.OnNavResizefunc = function () {
                //$("#edit_div_one").css('width', "100%");
                //$("#edit_div_two").css('width', "100%");
                //$("#OrderInfo").datagrid("resize", { width: "100%" });
                //$("#OrderDetail").datagrid("resize", { width: "100%" });
                //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
                //$("#Order_Head_panel").panel("resize", { width: "100%" });
                //setTimeout(function () {
                //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
                //    $("#edit_div_one").css(paddigLeftRight);
                //    $("#edit_div_two").css(paddigLeftRight);
                //    $("#OrderInfo").css(paddigLeftRight);
                //    $("#OrderDetail").css(paddigLeftRight);
                //    $("#ProductNameMerge").css(paddigLeftRight);
                //    $("#Order_Head_panel").css(paddigLeftRight);
                //    SetbuttonssWidth();
                //}, 100);
            };
        }
        //数组化Id号
        function getSelectDatagrid(rows) {
            var ids = [];
            for (var i = 0; i < rows.length; i++) {
                ids.push(rows[i].Id);
            }
            return ids;
        }
        //数组化Id号
        function getSelectDatagridWTID(rows) {
            var ids = [];
            for (var i = 0; i < rows.length; i++) {
                ids.push(rows[i].WTId);
            }
            return ids;
        }
        //显示生成批次号窗体
        function openbatch_num() {
            $("#div_Batch_Num").show();
        }
        //生成的批次号
        function addbatch_num() {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要生成批次号的接单信息！");
                return false;
            }
            //$.messager.confirm('确认对话框', '您确认生成批次号！', function (r) {
            //    if (r) {
            var ids = getSelectDatagridWTID(rows);
            if (ids.length > 0) {
                SaveBatch_Num(ids);
            } else {
                $.messager.alert("提示", "选中的接单信息不符合生成批次号所需的状态！", "error");
            }
            //    }
            //});
        }
        //保存批量生成拼箱码
        function SaveBatch_Num(ids) {
            var IDS = JSON.stringify(ids);
            var url = '/OPS_EntrustmentInfors/SaveBatch_Num?ids=' + ids + '&Batch_Num=' + $("#addBatch_Num").textbox("getValue");
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        //$.messager.alert("提示", "提交成功！", "info");
                        reload();
                        $("#addBatch_Num").textbox("setValue","");
                        $("#div_Batch_Num").hide();
                    }
                    else {
                        var ErrMsgStr = '提交错误了！';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //批量修改
        function Batch_Update() {
            $(location).attr("href", "/OPS_M_Orders/Edit_BatchUpdate");
        }
        //签收单打印
        function printSignReceipt() {
            $(location).attr("href", "/DocumentManagements/Edit_PrintSignReceipt");
        }
        //退单登记
        function refund_Register() {
            //$(location).attr("href", "/DocumentManagements/Edit_Refund_Register");
            var url = "/DocumentManagements/Edit_Refund_Register";
            window.open(url);

        }
        //退客户登记
        function return_Customer() {
            $(location).attr("href", "/DocumentManagements/Edit_Return_Customer");
        }
        //批量出库与未出库
        function outgoing() {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要出库或未出库的接单信息！");
                return false;
            }
            $.messager.confirm('确认对话框', '您确认出库或未出库！', function (r) {
                if (r) {
                    var ids = getSelectDatagridWTID(rows);
                    if (ids.length > 0) {
                        SaveBatch_OG(ids);
                    } else {
                        $.messager.alert("提示", "选中的接单信息不符合出库或未出库所需的状态！", "error");
                    }
                }
            });

        }
        //批量出库
        function SaveBatch_OG(ids) {
            var IDS = JSON.stringify(ids);
            var url = '/OPS_EntrustmentInfors/SaveBatch_OG?ids=' + ids;
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        $.messager.alert("提示", "提交成功！", "info");
                        reload();
                    }
                    else {
                        var ErrMsgStr = '提交错误了！';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //退关或取消退关
        function savetg(value) {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要退关的接单信息！");
                return false;
            }
            var message = "";
            if (value) {
                message = "您确认退关！";
            } else {
                message = "您确认取消退关！";
            }
            $.messager.confirm('确认对话框', message, function (r) {
                if (r) {
                    var ids = getSelectDatagridWTID(rows);
                    var m_Ids = rows.map(function (item) { return item.Id });
                    if (ids.length > 0) {
                        SaveBatch_TG(ids, value,m_Ids);
                    } else {
                        $.messager.alert("提示", "选中的接单信息不符合退关所需的状态！", "error");
                    }
                }
            });
        }
        //批量退关
        function SaveBatch_TG(ids, value, m_Ids) {
            //var IDS = JSON.stringify(ids);
            //var url = '/OPS_EntrustmentInfors/SaveBatch_TG?ids=' + ids + '&is_tg=' + value;
            var IDS = JSON.stringify(ids);
            var M_Ids = JSON.stringify(m_Ids);
            var url = '/OPS_EntrustmentInfors/SaveBatch_TG';//?ids=' + ids + "&is_tg=" + value + "&m_Ids=" + m_Ids;
            var postdata = { ids: ids, is_tg: value, m_Ids: m_Ids.join(",") }
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                //contentType: "application/json; charset=utf-8",//发送到服务端的数据格式
                dataType: "json",//接收服务端 返回的数据格式
                data:postdata,
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        if (data.ErrMsg != "") {
                            $.messager.alert("提示", data.ErrMsg, "info");
                        } else {
                            $.messager.alert("提示", "提交成功！", "info");
                        }
                        reload();
                        $("#div_Batch_Num").hide();
                    }
                    else {
                        var ErrMsgStr = data.ErrMsg;
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //修改总单号
        function EditMBL() {
            var ArrChecked = $dg.datagrid("getChecked");
            if (typeof (ArrChecked) === 'undefined' || ArrChecked == null || ArrChecked.length < 1) {
                $.messager.alert('提示', '请至少选择一条数据，才能操作！');
                return false;
            }
            $.messager.prompt('修改总单号', '请输入新的总单号：', function (r) {
                if (r) {
                    if (!ObjectIsEmpty(r)) {
                        var tf = validataMBL(r,true);//验证总单号
                        if (!tf) {
                            return false;
                        } else {
                            var ArrOps_M_Ids = ArrChecked.map(function (item) { return item.Id });//
                            var url = '/OPS_M_Orders/EditMBL';
                            $.messager.progress({
                                title: '数据处理中',
                                msg: '修改总单号进行中，请耐心等待...'
                            });
                            var postdata = { ArrOps_M_Ids: ArrOps_M_Ids, NewMBL: r };
                            $.ajax({
                                type: 'POST',
                                url: url,//获取数据的函数
                                async: true,//true 异步，false 同步
                                datatype: "json",//接收的数据类型
                                //contentType: "application/json; charset=utf-8;",//告诉服务端 发送的数据类型
                                data:postdata,
                                success: function (data) {//查询成功,data为返回的数据
                                    if (data.Success) {
                                        if (data.ErrMsg != "") {
                                            $.messager.alert("提示", data.ErrMsg, "info");
                                        } else {
                                            $.messager.alert("提示", "提交成功！", "info");
                                        }
                                        reload();
                                    }
                                    else {
                                        var ErrMsgStr = data.ErrMsg;
                                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                                            ErrMsgStr = data.ErrMsg;
                                        $.messager.alert("错误", ErrMsgStr, 'error');
                                    }
                                },
                                error: function () {//查询失败
                                    $.messager.alert("错误", "提交错误了！", 'error');
                                },
                                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                                    $.messager.progress('close');
                                }
                            });
                        }
                    }
                }
            });
            //弹出输入框 设置 面罩格式
            var $MsgInput = $("div.panel.window.messager-window").find("input.messager-input:first");
            if ($MsgInput.length > 0){
                $MsgInput.addClass("MaskMBL");
                MBL_Formatter();
            }
        }
        //给总单号加面罩
        function MBL_Formatter() {
            var $mbl = $("input.MaskMBL");
            $mbl.mask('AAA-AAAA AAAA', {
                'translation': {
                    A: { pattern: /[0-9]/ },
                    optional: true
                }
            });
        }
        //总单号 光标 移走 验证和互填
        function MBL_blur(event) {
            let $txt = $(this);
            var id = event.data.id;
            var val = $txt.val();
            if (!validataMBL(val,true)) {
                return false;
            }
            $("input." + id).each(function () {
                $(this).val(val);
            });
        }
	 </script>
@*}*@