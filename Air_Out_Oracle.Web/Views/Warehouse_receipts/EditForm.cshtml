﻿@model AirOut.Web.Models.Warehouse_receipt
@{
	//控件排序
	var Num = 1;
}
@Html.HiddenFor(model => model.Id)
    @*<div class="row">*@

    <div id="div_Warehouse_receipts" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title="仓库接单"
         data-options="collapsible:true">
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Warehouse_Id, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Warehouse_Id, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:true,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Warehouse_Id,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Entry_Id, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.Entry_Id, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:true,validType:'length[0,20]'", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.Entry_Id,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Warehouse_Code, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Warehouse_Code, new { htmlAttributes = new { @class = "easyui-combogrid", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Warehouse_Code,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Pieces_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Pieces_CK, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Pieces_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Weight_CK, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.Weight_CK, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.Weight_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Volume_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Volume_CK, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false,precision:3", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Volume_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Packing, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Packing, new { htmlAttributes = new { @class = "easyui-combogrid", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Packing,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.CHARGE_WEIGHT_CK, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.CHARGE_WEIGHT_CK, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:74%" } })
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Bulk_Weight_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Bulk_Weight_CK, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Bulk_Weight_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.CheckBoxFor(model => model.Damaged_CK, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:4%" })
            @Html.LabelFor(model => model.Damaged_CK, htmlAttributes: new { @class = "control-label ", style = "width:15%" })
            @Html.EditorFor(model => model.Damaged_Num, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:79%" } })
            @*<input id="Damaged" name="Damaged" class="easyui-numberbox" style="width:79%" />*@
            @*@Html.ValidationMessageFor(model => model.Damaged_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.CheckBoxFor(model => model.Dampness_CK, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:4%" })
            @Html.LabelFor(model => model.Dampness_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Dampness_Num, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:74%" } })
            @*<input id="Dampness" name="Dampness" class="easyui-numberbox" style="width:74%" />*@
            @*@Html.ValidationMessageFor(model => model.Dampness_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.CheckBoxFor(model => model.Deformation, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:4%" })
            @Html.LabelFor(model => model.Deformation, htmlAttributes: new { @class = "control-label ", style = "width:15%" })
            @Html.EditorFor(model => model.Deformation_Num, new { htmlAttributes = new { @class = "easyui-numberbox", data_options = "required:false", tabindex = Num++, style = "width:79%" } })
            @*<input id="Deformation2" name="Deformation2" class="easyui-numberbox" style="width:79%" />*@
            @*@Html.ValidationMessageFor(model => model.Deformation,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.CheckBoxFor(model => model.Is_GF, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:4%" })
            @Html.LabelFor(model => model.Is_GF, htmlAttributes: new { @class = "control-label " })<lable>/</lable>
            @Html.LabelFor(model => model.Closure_Remark, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Closure_Remark, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,500]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Is_GF,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.CheckBoxFor(model => model.Is_QG, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:4%" })
            @Html.LabelFor(model => model.Is_QG, htmlAttributes: new { @class = "control-label ", style = "width:8%" })<lable>/</lable>
            @Html.LabelFor(model => model.Warehouse_Remark, htmlAttributes: new { @class = "control-label ", style = "width:11%" })
            @Html.EditorFor(model => model.Warehouse_Remark, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,500]'", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.Is_QG,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Consign_Code_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Consign_Code_CK, new { htmlAttributes = new { @class = "easyui-combogrid", data_options = "required:false,validType:'length[0,50]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Consign_Code_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.MBL, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.MBL, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.MBL,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.HBL, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.HBL, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.HBL,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Flight_Date_Want, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Flight_Date_Want, new { htmlAttributes = new { @class = "easyui-datebox", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Flight_Date_Want,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.FLIGHT_No, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.FLIGHT_No, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.FLIGHT_No,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.End_Port, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.End_Port, new { htmlAttributes = new { @class = "easyui-combogrid", data_options = "required:false,validType:'length[0,50]'", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.End_Port,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,500]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Remark,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.In_Date, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.In_Date, new { htmlAttributes = new { @class = "easyui-datebox", tabindex = Num++, style = "width:39%" } })
            @Html.EditorFor(model => model.In_Time, new { htmlAttributes = new { @class = "easyui-timespinner", tabindex = Num++, style = "width:39%" } })
            @*@Html.ValidationMessageFor(model => model.In_Date,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Out_Date, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.Out_Date, new { htmlAttributes = new { @class = "easyui-datebox", tabindex = Num++, style = "width:37%" } })
            @Html.EditorFor(model => model.Out_Time, new { htmlAttributes = new { @class = "easyui-timespinner", tabindex = Num++, style = "width:36%" } })
            @*@Html.ValidationMessageFor(model => model.Out_Date,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.CH_Name_CK, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.CH_Name_CK, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,500]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.CH_Name_CK,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-1 col-md-1 col-sm-1">

        </div>
        <div class="form-group col-lg-3 col-md-3 col-sm-3">
            @Html.LabelFor(model => model.Is_CustomerReturn, htmlAttributes: new { @class = "control-label " })
            @Html.CheckBoxFor(model => model.Is_CustomerReturn, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:20%" })
            @Html.LabelFor(model => model.Is_MyReturn, htmlAttributes: new { @class = "control-label " })
            @Html.CheckBoxFor(model => model.Is_MyReturn, new { @class = "easyui-checkbox", tabindex = Num++, style = "width:20%" })
            @*@Html.ValidationMessageFor(model => model.Is_CustomerReturn,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Truck_Id, htmlAttributes: new { @class = "control-label ", style = "width:25%" })
            @Html.EditorFor(model => model.Truck_Id, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:74%" } })
            @*@Html.ValidationMessageFor(model => model.Truck_Id,"" , new { @class = "text-danger" })*@
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Driver, htmlAttributes: new { @class = "control-label ", style = "width:20%" })
            @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "easyui-textbox", data_options = "required:false,validType:'length[0,20]'", tabindex = Num++, style = "width:79%" } })
            @*@Html.ValidationMessageFor(model => model.Driver,"" , new { @class = "text-danger" })*@
        </div>
    </div>

    <div id="div_WarehouseSize" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title="仓库接单明细"
     data-options="collapsible:true">
    @Html.Partial("WarehouseSize")
</div>
    @*<div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Is_DamageUpload, htmlAttributes: new { @class = "control-label " })
            @Html.CheckBoxFor(model => model.Is_DamageUpload, new { @class = "easyui-checkbox",tabindex = Num++, style = "width:100%" })
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Is_DeliveryUpload, htmlAttributes: new { @class = "control-label " })
            @Html.CheckBoxFor(model => model.Is_DeliveryUpload, new { @class = "easyui-checkbox",tabindex = Num++, style = "width:100%" })
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Is_EntryUpload, htmlAttributes: new { @class = "control-label " })
            @Html.CheckBoxFor(model => model.Is_EntryUpload, new { @class = "easyui-checkbox",tabindex = Num++, style = "width:100%" })
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "easyui-textbox",data_options="required:false",tabindex = Num++, style = "width:100%" } })
        </div>
        <div class="form-group col-lg-4 col-md-4 col-sm-4">
            @Html.LabelFor(model => model.OperatingPoint, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.OperatingPoint, new { htmlAttributes = new { @class = "easyui-numberbox",data_options="required:true,precision:0",tabindex = Num++, style = "width:100%" } })
        </div>*@
    @*</div>*@
    <!-- output all Scaffold = false Hiden field -->
    @Html.HiddenFor(model => model.ADDID)
    @Html.HiddenFor(model => model.ADDWHO)
    @Html.HiddenFor(model => model.ADDTS)
    @Html.HiddenFor(model => model.EDITWHO)
    @Html.HiddenFor(model => model.EDITTS)
    @Html.HiddenFor(model => model.EDITID)
    <!--end output all Scaffold = false Hiden field -->


<script type="text/javascript">
    $(function () {
        initbindcombogriddata_H();
    });

    function initbindcombogriddata_H() {

        $("#Damaged").textbox("disable");
        $("#Dampness").textbox("disable");
        $("#Deformation2").textbox("disable");
        $("#Closure_Remark").textbox("disable");
        $("#Warehouse_Remark").textbox("disable");
        //包装
        $("#Packing").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/Warehouse_receipts/GetPARA_Package',
            columns: [[
                { field: 'ID', title: '代码', width: 100 },
                { field: 'TEXT', title: '名称', width: 130 }
            ]]
        });
        //委托方
        $("#Consign_Code_CK").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'TEXT',
            valueField: 'TEXT',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetCusBusInf',
            columns: [[
                { field: 'ID', title: '代码', width: 80 },
                { field: 'TEXT', title: '名称', width: 80 }
            ]]
        });
        //启运港
        $("#End_Port").combogrid({
            panelHeight: 'auto',
            mode: 'remote',
            idField: 'ID',
            valueField: 'ID',
            textField: 'IDTEXT',
            pageSize: 10,
            pageList: [5, 10, 20],
            pagination: true,
            url: '/OPS_EntrustmentInfors/GetPARA_AIRPorts',
            columns: [[
                { field: 'ID', title: '代码', width: 100 },
                { field: 'TEXT', title: '名称', width: 130 }
            ]]
        });


        is_Damaged_CK();
        $("#Damaged_CK").on('click', function () {
            is_Damaged_CK();
        });

        is_Dampness_CK();
        $("#Dampness_CK").on('click', function () {
            is_Dampness_CK();
        });
        is_Deformation();
        $("#Deformation").on('click', function () {
            is_Deformation();
        });
        is_GF();
        $("#Is_GF").on('click', function () {
            is_GF();
        });
        is_QG();
        $("#Is_QG").on('click', function () {
            is_QG();
        });
        //绑定onChange方法
        var domjsons=[
             {//破损
                 domid: '#Damaged_Num',
                 type:'textbox',
                 num:1
             },
             {//受潮
                 domid: '#Dampness_Num',
                 type: 'textbox',
                 num: 1
             },
             {//变形
                 domid: '#Deformation_Num',
                 type: 'textbox',
                 num: 1
             },
             {//随货文件
                 domid: '#Closure_Remark',
                 type: 'textbox',
                 num: 1
             },
             {//一体化
                 domid: '#Warehouse_Remark',
                 type: 'textbox',
                 num: 1
             },
             {//毛重
                 domid: '#Weight_CK',
                 type: 'numberbox',
                 num: 3
             },
             {//计费重量
                 domid: '#CHARGE_WEIGHT_CK',
                 type: 'numberbox',
                 num: 2
             },
             {//体积
                 domid: '#Volume_CK',
                 type: 'numberbox',
                 num: 3
             },
        ]
        binddome(domjsons);
    }

    //判断，是否有 破损
    function is_Damaged_CK() {
        if ($("#Damaged_CK").get(0).checked) {
            $("#Damaged").textbox("enable");
        } else {
            $("#Damaged").textbox("disable");
        }
    }
    //判断，是否有 受潮
    function is_Dampness_CK() {
        if ($("#Dampness_CK").get(0).checked) {
            $("#Dampness").textbox("enable");
        } else {
            $("#Dampness").textbox("disable");
        }
    }
    //判断，是否有 变形
    function is_Deformation() {
        if ($("#Deformation").get(0).checked) {
            $("#Deformation2").textbox("enable");
        } else {
            $("#Deformation2").textbox("disable");
        }
    }
    //判断，是否有 随货文件
    function is_GF() {
        if ($("#Is_GF").get(0).checked) {
            $("#Closure_Remark").textbox("enable");
        } else {
            $("#Closure_Remark").textbox("disable");
        }
    }
    //判断，是否有 一体化
    function is_QG() {
        if ($("#Is_QG").get(0).checked) {
            $("#Warehouse_Remark").textbox("enable");
        } else {
            $("#Warehouse_Remark").textbox("disable");
        }
    }
    //破损、受潮、变形、随货文件、一体化等备注文本框, 毛重、计费重量、体积等numberbox，绑定onchange方法
    function binddome(domjsons) {
        $.each(domjsons, function (index, item) {
            switch (item.num) {
                case 1:
                    $(item.domid)[item.type]({
                        onChange: function (newValue, oldValue) {
                            writeRemark();
                        }
                    });
                    break;
                case 2:
                    $(item.domid)[item.type]({
                        onChange: function (newValue, oldValue) {
                            calculateWeight();
                        }
                    });
                    break;
                case 3:
                    $(item.domid)[item.type]({
                        onChange: function (newValue, oldValue) {
                            volumecalculateWeight();
                        }
                    });
                    break;
            }
        });
    }
    //填写备注文本框
    function writeRemark() {
        var remark = "";
        if ($("#Damaged_Num").numberbox("getValue") != null && $("#Damaged_Num").numberbox("getValue") != "") {
            remark += "破损:" + $("#Damaged_Num").numberbox("getValue") + "件;";
        }
        if ($("#Dampness_Num").numberbox("getValue") != null && $("#Dampness_Num").numberbox("getValue") != "") {
            remark += "受潮:" + $("#Dampness_Num").numberbox("getValue") + "件;";
        }
        if ($("#Deformation_Num").numberbox("getValue") != null && $("#Deformation_Num").numberbox("getValue") != "") {
            remark += "变形:" + $("#Deformation_Num").numberbox("getValue") + "件;";
        }
        if ($("#Closure_Remark").numberbox("getValue") != null && $("#Closure_Remark").numberbox("getValue") != "") {
            remark += "随货文件:" + $("#Closure_Remark").textbox("getValue") + ";";
        }
        if ($("#Warehouse_Remark").numberbox("getValue") != null && $("#Warehouse_Remark").numberbox("getValue") != "") {
            remark += "一体化:" + $("#Warehouse_Remark").textbox("getValue") + ";";
        }

        $("#Remark").textbox("setValue", remark);
    }

    //计算泡重、计费重量、毛重
    function calculateWeight() {
        $("#Bulk_Weight_CK").numberbox("setValue", $("#CHARGE_WEIGHT_CK").numberbox("getValue") - $("#Weight_CK").numberbox("getValue"));
        if ($("#Bulk_Weight_CK").numberbox("getValue") < 0) {
            $("#Bulk_Weight_CK").numberbox("setValue", 0);
            $("#CHARGE_WEIGHT_CK").numberbox("setValue", $("#Weight_CK").numberbox("getValue"));
        }
    }
    //体积计算泡重
    function volumecalculateWeight() {
        var weight = $("#Volume_CK").numberbox("getValue") / 0.006
        if (weight > $("#Weight_CK").numberbox("getValue")) {//计算值大于实际毛重，计费重量等于计算值
            $("#CHARGE_WEIGHT_CK").numberbox("setValue", weight);
        } else {//计算值大于实际毛重，计费重量等于实际毛重
            $("#CHARGE_WEIGHT_CK").numberbox("setValue", $("#Weight_CK").numberbox("getValue"));
        }
        calculateWeight();
    }

    //获取编辑的仓库接单主信息
    function getwarehousereceipt() {
        return recipt = {
            Id: $("#Id").val(),
            Warehouse_Id: $("#Warehouse_Id").textbox("getValue"),
            Entry_Id: $("#Entry_Id").textbox("getValue"),
            Warehouse_Code: $("#Warehouse_Code").textbox("getValue"),
            Pieces_CK: $("#Pieces_CK").numberbox("getValue"),
            Weight_CK: $("#Weight_CK").numberbox("getValue"),
            Volume_CK: $("#Volume_CK").numberbox("getValue"),
            Bulk_Weight_CK: $("#Bulk_Weight_CK").numberbox("getValue"),
            Packing: $("#Packing").combogrid("getValue"),
            CHARGE_WEIGHT_CK:$("#CHARGE_WEIGHT_CK").numberbox("getValue"),//计费重量
            Damaged_CK: $("#Damaged_CK").get(0).checked,
            Damaged_Num: $("#Damaged_Num").numberbox("getValue"),
            Dampness_CK: $("#Dampness_CK").get(0).checked,
            Dampness_Num: $("#Dampness_Num").numberbox("getValue"),
            Deformation: $("#Deformation").get(0).checked,
            Deformation_Num: $("#Deformation_Num").numberbox("getValue"),
            Is_GF: $("#Is_GF").get(0).checked,
            Closure_Remark: $("#Closure_Remark").textbox("getValue"),
            Is_QG: $("#Is_QG").get(0).checked,
            Warehouse_Remark: $("#Warehouse_Remark").textbox("getValue"),
            Consign_Code_CK: $("#Consign_Code_CK").combogrid("getValue"),
            MBL: $("#MBL").textbox("getValue"),
            HBL: $("#HBL").textbox("getValue"),
            Flight_Date_Want: $("#Flight_Date_Want").datebox("getValue"),
            FLIGHT_No: $("#FLIGHT_No").textbox("getValue"),
            End_Port: $("#End_Port").combogrid("getValue"),
            In_Date: $("#In_Date").datebox("getValue"),
            In_Time:$("#In_Time").textbox("getValue"),//入库时间
            Out_Date: $("#Out_Date").datebox("getValue"),
            Out_Time: $("#Out_Time").textbox("getValue"),//出口时间
            CH_Name_CK: $("#CH_Name_CK").textbox("getValue"),
            Is_CustomerReturn: $("#Is_CustomerReturn").get(0).checked,
            Is_MyReturn: $("#Is_MyReturn").get(0).checked,
            Truck_Id: $("#Truck_Id").textbox("getValue"),
            Driver: $("#Driver").textbox("getValue"),
            Remark: $("#Remark").textbox("getValue"),


        };
    }
</script>

