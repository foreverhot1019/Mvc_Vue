@model IEnumerable<AirOut.Web.Models.Bms_Bill_Ap>
@{
    ViewBag.Title = "应付账单";
    var Num = 1;
    var ArrStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value, TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrAuditStatus = AirOut.Web.Extensions.Common.GetEnumToDic("AuditStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value, TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrUseStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusIsOrNoEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value, TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrBms_BillCreate_Status = AirOut.Web.Extensions.Common.GetEnumToDic("Bms_BillCreate_Status", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
}
<!--DataGrid 回车Editor下一个 和 为控件添加 Key事件 -->
<script src="~/Scripts/jsext.js?date=2019013001"></script>
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';

    //异步获取 选择框
    var ArrIsLoadWin ={
        IsLoadSeltOPSMOrdWin : false
    };
    //AsyncGetMyWin(url,IsLoadMyWin,InitMyWinFucName,Async_Load) 整合在jsext
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">@ViewBag.Title</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title 列表</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <form id="searchform" method="post" style="padding-bottom:10px; width:auto">
                        <div id="div_search" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title="查询条件"
                             data-options="collapsible:true">
                            <div class="form-group col-md-3">
                                <label for="name">业务编号:</label>
                                <input id="Operation_Id_Q" name="Operation_Id_Q" tabindex="@(Num++)" data-options="prompt1:'业务编号'" style="width:100%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name">总运单号:</label>
                                <input id="MBL" name="MBL" tabindex="@(Num++)" data-options="prompt1:'总运单号'" style="width:100%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name">航班日期起:</label>
                                <input id="_Flight_Date_Want_Q" name="_Flight_Date_Want_Q" tabindex="@(Num++)" data-options="prompt1:'接单日期起'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name">航班日期讫:</label>
                                <input id="Flight_Date_Want_" name="Flight_Date_Want__Q" tabindex="@(Num++)" data-options="prompt1:'接单日期讫'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px;">结算方:</label>
                                <input id="Carriage_Account_Code_Q" name="Carriage_Account_Code_Q" tabindex="@(Num++)" data-options="prompt1:'结算方'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px;">接单人:</label>
                                <input id="ADDWHO_Q" name="ADDWHO_Q" tabindex="@(Num++)" data-options="prompt1:'接单人'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px;">目的港:</label>
                                <input id="End_Port_Q" name="End_Port_Q" tabindex="@(Num++)" data-options="prompt1:'目的港'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px;">委托方:</label>
                                <input id="Entrustment_Name_Q" name="Entrustment_Name_Q" tabindex="@(Num++)" data-options="prompt1:'委托方'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px;">订舱方:</label>
                                <input id="Book_Flat_Code_Q" name="Book_Flat_Code_Q" tabindex="@(Num++)" data-options="prompt1:'订舱方'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-lg-12 col-md-12 col-sm-12" style="text-align:center;">
                                <button id="btn-search" class="btn btn-primary">
                                    <i class="fa fa-search"></i>
                                    搜索
                                </button>
                                <button id="btn-reset" class="btn btn-default">
                                    <i class="fa fa-reset"></i>
                                    重置
                                </button>
                                <button id="btn-TG" class="btn btn-default">
                                    <i class="fa fa-remove"></i>
                                    退关
                                </button>
                            </div>
                        </div>
                    </form>
                    <div class="table-responsive">
                        @Html.Partial("Ops_ListView", Model)
                    </div>
                    <!-- end ibox-content -->
                </div>
            </div>
        </div>
    </div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
    <p><input type="file" name="file_upload" id="file_upload" /></p>
</div>
<!--用于后端 加载dom并且渲染成EasyUI样式-->
<div id="EasyUIDom" style="height:35px; clear:both; border:0 solid;"></div>

@section Scripts {
    <script type="text/javascript">
        const ArrStatus = @Html.Raw(ArrStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrStatus));//数据状态
        const ArrAuditStatus = @Html.Raw(ArrAuditStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrAuditStatus));//数据审核状态
        const ArrUseStatus = @Html.Raw(ArrUseStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrUseStatus));//数据bool状态
        const ArrBms_BillCreate_Status = @Html.Raw(ArrBms_BillCreate_Status == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrBms_BillCreate_Status));//账单产生标志

        const Editable = '@Html.IsAuthorize("Bms_Bill_Aps"), "Index", "Edit")';//编辑权限
        const Curr$dgCtrl = 'bms_bill_ap'; //当前dg是应收/应付账单 id前缀

        var $dg = $('table.easyui-datagrid:eq(0)');
        var editIndex = undefined;

        $(function () {
            $("#file_upload").uploadifive({
                'height': 30,
                'fileTypeDesc': 'Excel 2010 Files',
                'fileTypeExts': '*.xlsx',
                'uploadScript': '/FileUpload/Upload',
                'buttonText': '选择EXCEL',
                'multi': true,
                'displayData': 'speed',
                'formData': { 'modelType': 'Bms_Bill_Ap' },
                'width': 120,
                'successTimeout': 100000,
                'onFallback': function () {
                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                    $('#file_upload').uploadifive('clearQueue')
                },
                'onSelect': function (queue) {
                    $.messager.progress({
                        title: '执行导入',
                        msg: '请等待...'
                    });
                },
                'onUploadComplete': function (file, data) {
                    $.messager.progress('close');
                    var data = $.parseJSON(data);
                    //console.log(data);
                    if (data.success == false) {
                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                        $("#file_upload").uploadifive('clearQueue')
                    } else {
                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                        $dg.datagrid('reload');
                        $('#importwindow').window('close');
                    }
                    return true;
                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                }
            });
            initPageCombogrid('_FromCache');
        });
        //Combogrid 初始化
        function initPageCombogrid(_FromCache){
            var FromCache=""
            if(!(typeof(_FromCache) ==='undefined'||_FromCache ==null||_FromCache==''))
                FromCache = "_FromCache";
            //结算方
            $("#Carriage_Account_Code_Q").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url:  '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            }));
            //委托方
            $("#Entrustment_Name_Q").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url:  '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            })); 
            //目的港
            $("#End_Port_Q").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/PARA_AirPorts/GetPARA_AirPorts'+FromCache
            }));
            //订舱方
            $("#Book_Flat_Code_Q").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url: '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            }));
            //接单人
            $("#ADDWHO_Q").combogrid($.extend({}, combogrid_DefaultSettings, {
                idField:"UserName",
                valueField:"UserName",
                textField:'UserNameDesc', 
                columns: [[
                    { field: 'UserName', title: '帐户', width: 70 },
                    { field: 'UserNameDesc', title: '名称', width: 150 }
                ]],
                url: '/AccountManage/Get_PageUserList'+FromCache+'?IsJDServ=1'
            }));
        }
        //导入
        function importexcel() {
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            //$('#file_upload_mx').data('uploadifive').settings.formData = { 'dataLength': GetDataGrid_data($('#OrderDetail')).length };
            $('#importwindow').window('open');
        }
        //导出
        function exportexcel() {
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            var opts = $dg.datagrid('options');
            //var filterRules = JSON.stringify(opts.filterRules);
            //$.messager.progress({ title: '正在执行导出！' });
            //var formData = new FormData();
            //formData.append('filterRules', filterRules);
            //formData.append('sort', 'Id');
            //formData.append('order', 'asc');
            //$.postDownload('/Bms_Bill_Aps/ExportExcel', formData, function (fileName) {
            //	$.messager.progress('close');
            //});

            var formData = { filterRules: opts.filterRules, sort: opts.sortName, order: opts.sortOrder };
            //var url = '/Bms_Bill_Aps/ExportExcel';
            var url = opts.url.replace('GetData', 'ExportExcel');
            $.DownLoadProgress({
                url: url,         //下载文件的url
                method: 'Post',   //链接打开方式
                data: formData,         //要发送的数据
                downLoadInfo: '下载文件', //下载界面文字
                closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                callbackFuc: function () {
                    $.messager.progress('close');
                }
            });
        }
        //退关
        $("#btn-TG").click(function (e) {
            e.preventDefault();
            var ArrSelted = $dg.datagrid("getChecked");
            if (typeof (ArrSelted) === 'undefined' || ArrSelted == null || ArrSelted.length < 1) {
                $.messager.alert('提示', '请至少选择一条数据，才能操作！');
                return false;
            } else {
                var ArrId = $.map(ArrSelted,function(item){return item.Ops_M_OrdId});
                SaveBatch_TG(ArrId);
            }
        });
        //查询条件重置按钮 点击事件
        $("#btn-reset").click(function (e) {
            e.preventDefault();
            clearfrom();
        });
        //点击重置按钮时，触发，清空查询条件
        function clearfrom() {
            $('#searchform').form('clear');
        }
        $("#btn-search").click(function (e) {
            e.preventDefault();
            searchf();
            $dg.datagrid("clearChecked");
            $dg.datagrid("clearSelections");
        });
        //点击查询按钮时，触发
        function searchf() {
            setfilteropts();//设置查询条件
            $dg.datagrid('reload');
        }
        //退关 红色
        function IsTGColor(value){
            var retColorCss = 'background-color1:#FF0066;color:#FF0066;';
            var IsTrue = ObjectIsTrue(value);
            if(IsTrue!=null){
                if(IsTrue)
                    return retColorCss;
                else
                    return '';
            }
            else
                return '';
        }
        //分摊数据 蓝色
        function OPS_BMS_StatusColor(value){
            var retColorCss = 'background-color1:#6699FF;color:#6699FF;';
            var IsTrue = ObjectIsTrue(value);
            if(IsTrue!=null){
                if(IsTrue)
                    return retColorCss;
                else
                    return '';
            }
            else
                return '';
        }
        //双击后 结算金色
        function IsJSColor(value){
            var retColorCss = 'background-color1:#B8860B;color:#B8860B;';
            var IsTrue = ObjectIsTrue(value);
            if(IsTrue!=null){
                if(IsTrue)
                    return retColorCss;
                else
                    return '';
            }
            else
                return '';
        }
        //样式
        function rowStyler(index,row){
            var value = row.Is_TG;//退关
            var ret = IsTGColor(value);
            if(ret !='')
                return ret
            else{
                value = row.OPS_BMS_Status;//分摊数据
                ret = OPS_BMS_StatusColor(value);
                if(ret !='')
                    return ret
                else{
                    value = row.IsJS;//是否结算
                    ret = IsJSColor(value);
                    if(ret !='')
                        return ret
                }
            }
        }
        //设置查询条件
        function setfilteropts() {
            var params = [];
            var opts = $dg.datagrid('options');
            var searchData = getFormSerializeJson("#searchform");
            for(var i in searchData){
                var data = searchData[i];
                if (!(typeof (data) === 'undefined' || data == null || data == "")) {
                    params.push({ "field": i.replace('_Q',''), "op": "equal", "value": data });
                }
            }
            opts.queryParams = {
                'filterRules': JSON.stringify(params)
            };
        }

        //datagrid  键盘事件(写在 jsext/EasyUIDataGrid_ControlNext 文件中)
        //var dg_keyHandler = dg_keyHandler;
        //datagrid 编辑时的 combogrid通用参数设置
        var dg_combo_coSettings = combogrid_DefaultSettings;
        //datagrid 编辑时的 combogrid参数设置
        var Arrcombogrid_Settings = {};
        Arrcombogrid_Settings = function setInitCombogridSettings(){
            var _Arrcombogrid_Settings ={};
            _Arrcombogrid_Settings[Curr$dgCtrl + '_datagrid'] = {
                'COUNTRY': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY',
                    idField: 'COUNTRY_CO',
                    valueField: 'COUNTRY_CO',
                    textField: 'COUNTRY_NA',
                    columns: [[
                        { field: 'COUNTRY_CO', title: '代码', width: 53 },
                        { field: 'COUNTRY_NA', title: '名称', width: 150 }
                    ]],
                    onChange: function (value) {
                        var targetEditor = $dg.datagrid('getEditor', {
                            field: 'COUNTRY',
                            index: editIndex
                        });
                        if (targetEditor != null) {
                            var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
                            if (Selted) {
                                var datarow = $dg.datagrid('getData').rows[editIndex];
                                if (!(typeof datarow === 'undefined' || datarow == null)) {
                                    datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
                                }
                            }
                        }
                    }
                }),
                'Money_Code': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/PARA_Currs/GetPARA_CURR_FromCache',
                }),
                'Org_Money_Code': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/PARA_Currs/GetPARA_CURR_FromCache',
                }),
                'Bill_Object_Id': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/CusBusInfos/GetCusBusInfos_FromCache',
                    onChange: function () {
                        //console.log(arguments);
                        var Selted = $(this).combogrid('grid').datagrid('getSelected');
                        if (Selted) {
                            var datarow = $dg.datagrid('getData').rows[editIndex];
                            if (!(typeof datarow === 'undefined' || datarow == null)) {
                                datarow["Bill_Object_Name"] = Selted[$(this).combogrid('options').textField];
                            }
                        }
                    }
                }),
                'Status':$.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrStatus
                }),
                'AuditStatus':$.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrAuditStatus
                }),
            };
            //明细
            _Arrcombogrid_Settings[Curr$dgCtrl + '_dtl_datagrid'] = {
                'Status':$.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrStatus
                }),
            };
            //bool状态
            var ArrboolCol = [
                /*应收/应付*/
                "Create_Status",//产生标志
                "Jk_Status",//集卡产生标志
                "Ishk_Status", //记录是否传入香港
                "Sbsx_Status",//实报实销状态
                "Dsdf_Status",//代收代付状态
                /*应收/应付-明细*/
                //"Create_Status",//产生标志
                "Invoice_Status",//开票标志
                "Chalk_Status",//签收标志
                "Collate_Status",//对帐标志
                "Refer_Status",//提交标志
                "Blank_Status",//销帐标志
                "Special_Status",//专项标志
                "Invos_Status",//开票后修改标志
            ];
            //设置combogrid-bool状态
            for(var i in _Arrcombogrid_Settings){
                for(var ii in ArrboolCol){
                    _Arrcombogrid_Settings[i][ArrboolCol[ii]] = $.extend({}, dg_combo_coSettings, {
                        required: true,
                        mode:'local',
                        pagination: false,
                        data:ArrUseStatus
                    });
                }
            }
            return _Arrcombogrid_Settings;
        }();

        //获取当前操作dg
        function getCurrent$dg(obj) {
            let type = typeof (obj);
            if (!(type === 'undefined' || obj === window || obj == null)) {
                let _$dg = $(obj).parent().siblings(".datagrid-view").children("table.easyui-datagrid");
                if (typeof (_$dg) === 'undefined' || _$dg == null || _$dg.length <= 0) {
                    if (typeof (editIndex) === 'undefined' || editIndex == null || editIndex < 0) {
                        $.messager.alert('提示', '无法找到datagrid或没有正在编辑的(' + editIndex + ')行！');
                        return false;
                    }
                } else
                    $dg = _$dg;
                return true;
            } else {
                $.messager.alert('提示', '无法找到datagrid！');
                return false;
            }
        }
        //开始编辑行时，赋值 联动数据
        function onBeginEdit(rowIndex, rowData) {
            $dg = $(this);
            var num = 0;
            var regx = /^\/Date\([0-9]+(\)\/)$/g;
            for (var i in rowData) {
                if (regx.test(rowData[i])) {
                    rowData[i] = datetimeformatter(rowData[i]);
                }
                var targetEditor = $dg.datagrid('getEditor', {
                    field: i,
                    index: rowIndex
                });
                //console.log("targetEditor", i, targetEditor);
                if (targetEditor) {
                    num++;
                    if (num == 1 && $(targetEditor.target).val() == '') {
                        $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                    }

                    var OldVal = targetEditor.oldHtml;
                    switch (targetEditor.type.toLowerCase()) {
                        case "combogrid":
                            //console.log(targetEditor);
                            let combogrid_Setting = Arrcombogrid_Settings[$(this).attr('id')][targetEditor.field];
                            if (combogrid_Setting) {
                                //设置 combogrid 参数（回车下一个等）利用JS闭包原理，让js不回收变量
                                var fnGetcmgrid_Setting = function (_combogrid_Setting,field, _rowIndex) {
                                    return $.extend(combogrid_Setting, {
                                        onLoadSuccess: function (data) {
                                            ondgLoadSuccess($dg, field, _rowIndex);
                                        }
                                    }, dg_keyHandler);
                                };
                                $(targetEditor.target).combogrid(fnGetcmgrid_Setting(combogrid_Setting, targetEditor.field, rowIndex));
                                //设置Combogrid 分页控件 简单模式
                                SetCombogridPager(targetEditor.target);
                            }
                            if (!(typeof (OldVal) === 'undefined' || OldVal == null || OldVal == '')) {
                                if (rowData[targetEditor.field]) {
                                    OldVal = rowData[targetEditor.field];
                                }
                                $(targetEditor.target).combogrid('setValue', OldVal);
                                var opts = $(targetEditor.target).combogrid('options');
                                var url = opts.url;
                                //设置查询参数
                                var queryParams = {
                                    page: 1,
                                    rows: opts.pageSize,
                                    q: OldVal
                                };
                                $(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                            }
                            break;
                        case "combobox":
                            var opts = $(targetEditor.target).combobox({
                                inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        combobox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "textbox":
                        case "numberbox":
                        case "datebox":
                        case "datetimebox":
                            var data = $(targetEditor.target).data();
                            var $txtbox = $(data.textbox).find("input.textbox-text");
                            var $target = $(targetEditor.target);
                            $target.textbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        dg_Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "checkbox":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "radio":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                    }
                }
            }
        }
        //结算编辑
        function endEditing() {
            if (editIndex == undefined)
                return true;
            if ($dg.datagrid('validateRow', editIndex)) {
                $dg.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }
        //选择行
        function onSelect(index, row) {
            $dg = $(this);
            //console.log(index, row);
        }
        //设置 不需要编辑的字段
        var Arr$dgNoEditorSet={};
        //设置 不需要编辑的字段
        var ColEditorNull = function(){
            return [
                "ADDWHO",
                "ADDTS",
                "Bill_Object_Name",//客户名称
                "AuditId",//审核人Id
                "Cancel_Id",//作废人Id
                "Chalk_Id",//签收人Id
                "Collate_Id",//对帐人Id
                "Invoice_Id",//发票人Id
                "Blank_Id",//销帐人Id
                "User_Id",//操作人员
            ];
        }();
        function Set$dgNoEditor(_$dg){
            var IsSet = false;//是否设置过
            var funcSet = function(_ColEditorNull){
                if(!IsSet){
                    for(var i in ColEditorNull){
                        var Column = _$dg.datagrid('getColumnOption', ColEditorNull[i]);
                        if (!(typeof (Column) === 'undefined' || Column == null || Column == '')) {
                            Column.editor = {};
                        }
                    }
                }
            };
            return {
                IsSet:IsSet,
                ColEditorNullColumn:ColEditorNull,
                Set:funcSet
            }
        }
        //双击行
        function onDblClickRow(index, row) {
            var $dg = $(this);
            var Ops_M_OrdId = row.Ops_M_OrdId;
            var Ops_H_OrdId = row.Ops_H_OrdId;
            if(!(typeof(Ops_M_OrdId)==='undefined'||Ops_M_OrdId==null||Ops_M_OrdId<=0)){
                var url = '/Bms_Bill_Aps/BmsBillApView?OPS_M_OrdId='+Ops_M_OrdId;
                window.open(url);
                row.IsJS =true;
                //window.location.href =url;
                $dg.datagrid('refreshRow',index);
            }
            else if(!(typeof(Ops_H_OrdId)==='undefined'||Ops_H_OrdId==null||Ops_H_OrdId<=0)){
                var url = '/Bms_Bill_Aps/BmsBillApView?OPS_H_OrdId='+Ops_H_OrdId;
                window.open(url);
                row.IsJS =true;
                //window.location.href =url;
                $dg.datagrid('refreshRow',index);
            }
            else
            {
                $.messager.alert('Warning', '数据格式错误，无法查看详细信息！');
                return false;
            }
        }
        //单机单元格
        function onClickCell(index, field) {
            var $dg = $(this);
            var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
            if ($.inArray(field, _operates) >= 0) {
                return;
            }
            if (editIndex != index) {
                if (endEditing()) {
                    if (!Editable)
                    {
                        $.messager.alert('提示', '您没有编辑权限！');
                        return false;
                    }
                    //动态设置 编辑样式
                    var O$dgNoEditorSet =Arr$dgNoEditorSet[$dg.attr('id')];
                    if(typeof(O$dgNoEditorSet)==='undefined'||O$dgNoEditorSet==null||O$dgNoEditorSet==''){
                        for(var i in ColEditorNull){
                            var Column = $dg.datagrid('getColumnOption', ColEditorNull[i]);
                            if (!(typeof (Column) === 'undefined' || Column == null || Column == '')) {
                                Column.editor = {};
                            }
                        }
                        Arr$dgNoEditorSet[$dg.attr('id')] = 1;
                    }

                    $dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        //加载成功
        function onLoadSuccess(rowdata) {
            //行号自适应宽度
            $(this).datagrid("fixRownumber");
        }
        //刷新
        function reload() {
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            reject();//回滚所有变更
            $dg.datagrid('reload');
        }
        //新增
        function append() {
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            AsyncGetMyWin('/OPS_M_Orders/GetSeltOPS_M_Ord?IsBmsBillAr=false','IsLoadSeltOPSMOrdWin','InitOPSMOrdWinFuc()',true);
            $("#win").window("open");
            return false;

            if (endEditing()) {
                var NewRow = {};
                var Columns = $dg.datagrid('getColumnFields');
                for (var column in Columns) {
                    NewRow[Columns[column]] = null;
                }
                NewRow['Status'] = 1;
                NewRow['AuditStatus'] = 1;
                //动态设置 编辑样式
                var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
                if (!(typeof (byteColumn) === 'undefined' || byteColumn == null || byteColumn == '')) {
                    byteColumn.editor = {
                        type: 'textbox',
                        options: {
                            required: false,
                            validType: 'length[0,20]'
                        }
                    };
                    byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
                    byteColumn.editor = {
                        type: 'datebox',
                        options: {
                            required: false
                        }
                    };
                    byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
                    byteColumn.editor = {};
                    byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
                    byteColumn.editor = {};
                }
                $dg.datagrid('insertRow', { index: 0, row: NewRow });
                editIndex = 0;
                $dg.datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
            }
        }
        //删除
        function removeit() {
            //获取datagrid
            if (!getCurrent$dg(this))
                return false;
            var Seltdata = $dg.datagrid('getSelections');
            if (!(typeof editIndex === 'undefined' || editIndex == null || isNaN(editIndex))) {
                $dg.datagrid('cancelEdit', editIndex);
                editIndex = undefined;
            }
            for (var i = Seltdata.length; i > 0; i--) {
                var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
                //console.log(rowindex);
                $dg.datagrid('deleteRow', rowindex);
            }
        }
        //保存
        function accept() {
            if(!(this ===window || typeof ($dg) === 'undefined' || $dg == null || $dg.length <= 0)){
                if(this !==window){
                    //获取datagrid
                    if(!getCurrent$dg(this))
                        return false;
                }
            }
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    //var url = '/Bms_Bill_Aps/SaveData';
                    var opts = $dg.datagrid('options');
                    var url = opts.url.replace('GetData', 'SaveData');
                    $.ajax({
                        type: 'POST',
                        url: url,//获取数据的函数
                        async: true,//true 异步，false 同步
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                        beforeSend: function (xhr) {//发送请求前运行的函数
                            $.messager.progress({
                                title: '数据处理中',
                                msg: '数据处理中，请等待...'
                            });
                            //验证重复提交时 请加上 这句
                            AddAjaxActionGuidName(this);
                        },
                        success: function (response) {//查询成功,data为返回的数据
                            if (response.Success) {
                                $.messager.alert("提示", "提交成功！");
                                $dg.datagrid('acceptChanges');
                                $dg.datagrid('reload');
                            }
                            else {
                                var ErrMsgStr = '提交错误了！';
                                if (!(typeof (response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
                                    ErrMsgStr = response.ErrMsg;
                                $.messager.alert("错误", ErrMsgStr, 'error');
                            }
                        },
                        error: function () {//查询失败
                            $.messager.alert("错误", "提交错误了！", 'error');
                        },
                        complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                            $.messager.progress('close');
                        }
                    });
                }
                //$dg.datagrid('acceptChanges');
            }
        }
        //取消（回滚所有数据变更）
        function reject() {
            if(!(this ===window || typeof ($dg) === 'undefined' || $dg == null || $dg.length <= 0)){
                if(this !==window){
                    //获取datagrid(this指向window时,不执行后面语句)
                    if(!getCurrent$dg(this))
                        return false;
                }
                $dg.datagrid('rejectChanges');
            }
            editIndex = undefined;
        }
        //获取 变更
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }
        //批量退关
        function SaveBatch_TG(ids,isQZdel) {
            //var IDS = JSON.stringify(ids);
            var IsQZDel = false;
            if (!(typeof (isQZdel) === 'undefined' || isQZdel == null || isQZdel == ''))
                IsQZDel = true;
            var url = '/OPS_EntrustmentInfors/SaveBatch_TG';//?m_Ids=' + ids + '&NeedConfirm=' + IsQZDel;
            var postdata = {ids: '', is_tg: true, NeedConfirm:IsQZDel,m_Ids: ids.join(',') }
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                //contentType: "application/json; charset=utf-8",//发送到服务端的数据格式
                dataType: "json",//接收服务端 返回的数据格式
                data:postdata,
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        if (data.ErrMsg != "") {
                            $.messager.alert("提示", data.ErrMsg, "info");
                        } else {
                            $.messager.alert("提示", "退关成功！", "info");
                            $("#btn-search").trigger('click');
                        }
                    }
                    else {
                        var NeedConfirm = false;
                        if (!(typeof (data.NeedConfirm) === 'undefined' || data.NeedConfirm == null || data.NeedConfirm == ''))
                            NeedConfirm = true;
                        var ErrMsgStr = '错误';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        if (NeedConfirm) {
                            $.messager.confirm('确认', ErrMsgStr, function (r) {
                                if (r) {
                                    SaveBatch_TG(ids, NeedConfirm);
                                }
                            });
                        }
                        else {
                            $.messager.alert("错误", ErrMsgStr, 'error');
                        }
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //页面加载结束时
        $(function () {
            var opts = $dg.datagrid('options');
            //读取用户 设置的 列宽与顺序（formatter-func方法Json转换后 会丢失）
            var dg_id = $dg.attr('id');
            var ArrFieldNoWidth = getdg_FieldNoWidth(dg_id);//获取 上次设置的 列宽和顺序
            if (!ObjectIsEmpty(ArrFieldNoWidth)) {
                var ArrFormatterCell = opts.columns[0].filter(function (item) {
                    if (!ObjectIsEmpty(item.formatter))
                        return true;
                    else
                        return false;
                });
                $.each(ArrFieldNoWidth, function () {
                    for (var i in ArrFormatterCell) {
                        var item = ArrFormatterCell[i];
                        if (this.field == item.field)
                            this.formatter = item.formatter;
                    }
                });
                //设置 用户上次设置的 列宽和顺序
                opts.columns[0] = ArrFieldNoWidth;
                //初始化datagrid，以便列宽和顺序 生效
                $dg.datagrid();
            }
            //设置列可移动
            $dg.datagrid("columnMoving");
            opts.url = '/OPS_M_Orders/GetBmsData';
            //opts.onClickCell = onClickCell;
            //opts.onBeginEdit = onBeginEdit;
            opts.onSelect = onSelect;
            opts.onDblClickRow = onDblClickRow;
            opts.rowStyler = rowStyler;
           
            //$dg.datagrid('enableFilter', [
            //     {
            //         field: 'Bill_Date',
            //         type: 'datebox',
            //         options: {
            //             onChange: function (value) {
            //                 if (value == '') {
            //                     $dg.datagrid('removeFilterRule', 'Bill_Date');
            //                 } else {
            //                     $dg.datagrid('addFilterRule', {
            //                         field: 'Bill_Date',
            //                         op: 'equal',
            //                         value: value
            //                     });
            //                 }
            //                 //自动添加 textbox 或 text的值
            //                 //AutoAddFilterRule($dg);
            //                 $dg.datagrid('doFilter');
            //             }
            //         }
            //     },
            //     {
            //         field: 'AuditDate',
            //         type: 'datebox',
            //         options: {
            //             onChange: function (value) {
            //                 if (value == '') {
            //                     $dg.datagrid('removeFilterRule', 'AuditDate');
            //                 } else {
            //                     $dg.datagrid('addFilterRule', {
            //                         field: 'AuditDate',
            //                         op: 'equal',
            //                         value: value
            //                     });
            //                 }
            //                 //自动添加 textbox 或 text的值
            //                 //AutoAddFilterRule($dg);
            //                 $dg.datagrid('doFilter');
            //             }
            //         }
            //     },
            //     {
            //         field: 'Cancel_Date',
            //         type: 'datebox',
            //         options: {
            //             onChange: function (value) {
            //                 if (value == '') {
            //                     $dg.datagrid('removeFilterRule', 'Cancel_Date');
            //                 } else {
            //                     $dg.datagrid('addFilterRule', {
            //                         field: 'Cancel_Date',
            //                         op: 'equal',
            //                         value: value
            //                     });
            //                 }
            //                 //自动添加 textbox 或 text的值
            //                 //AutoAddFilterRule($dg);
            //                 $dg.datagrid('doFilter');
            //             }
            //         }
            //     },
            //     {
            //         field: 'Status',
            //         type: 'combobox',
            //         options: {
            //             panelHeight: 'auto',
            //             data: [
            //                 { value: '', text: 'All' },
            //                 { value: 'true', text: '启用' },
            //                 { value: 'false', text: '停用' }
            //             ],
            //             onChange: function (value) {
            //                 if (value == '') {
            //                     $dg.datagrid('removeFilterRule', 'Status');
            //                 } else {
            //                     $dg.datagrid('addFilterRule', {
            //                         field: 'Status',
            //                         op: 'equal',
            //                         value: value
            //                     });
            //                 }
            //                 //自动添加 textbox 或 text的值
            //                 //AutoAddFilterRule($dg);
            //                 $dg.datagrid('doFilter');
            //             }
            //         }
            //     },
            //     //{
            //     //    field: 'UNIT',
            //     //    type: 'combogrid',
            //     //    options: {
            //     //        url: '/PARA_UNITS/GetPagerPARA_UNIT',
            //     //        method: 'get',
            //     //        multiple: false,
            //     //        panelHeight: 'auto',
            //     //        panelWidth: 205,
            //     //        idField: 'UNIT_CODE',
            //     //        valueField: 'UNIT_CODE',
            //     //        textField: 'UNIT_NAME',
            //     //        pageSize: 10,//每页显示的记录条数，默认为10
            //     //        pageList: [5, 10, 20],//可以设置每页记录条数的列表
            //     //        pagination: true,//是否分页
            //     //        columns: [[
            //     //            { field: 'UNIT_CODE', title: '代码', width: 53 },
            //     //            { field: 'UNIT_NAME', title: '名称', width: 150 }
            //     //        ]],
            //     //        keyHandler: {
            //     //            up: function (e) {
            //     //                combogrid_upKey(this, e);
            //     //            },
            //     //            down: function (e) {
            //     //                combogrid_downKey(this, e);
            //     //            },
            //     //            enter: function (e) {
            //     //                combogrid_enterKey(this, e, $dg, '', editIndex);
            //     //            },
            //     //            query: function (q) {
            //     //                combogrid_query(this, q, editIndex, {});
            //     //            }
            //     //        },
            //     //        onChange: function (value) {
            //     //            if (value == '') {
            //     //                $dg.datagrid('removeFilterRule', 'UNIT');
            //     //            } else {
            //     //                $dg.datagrid('addFilterRule', {
            //     //                    field: 'UNIT',
            //     //                    op: 'equal',
            //     //                    value: value
            //     //                });
            //     //            }
            //     //            //自动添加 textbox 或 text的值
            //     //            AutoAddFilterRule($dg);
            //     //            $dg.datagrid('doFilter');
            //     //        }
            //     //    }
            //     //},
            //]);
            //$dg.datagrid('reload');
        });
        //自动添加 textbox 或 text的值
        function AutoAddFilterRule($dg_) {
            var ColumnsFields = $dg_.datagrid('getColumnFields');
            $.each(ColumnsFields, function (i, ColumnName) {
                var input = $dg_.datagrid('getFilterComponent', ColumnName);
                if (!(input.data("datebox") || input.data("datetimebox") || input.data("combobox") || input.data("checkbox") || input.data("combotree") || input.data("combogrid") || input.data("numberbox"))) {
                    var rule = $dg_.datagrid('getFilterRule', ColumnName);
                    var value = input.val();
                    if (!(typeof (value) === 'undefined' || value == null || value == '')) {
                        if ((rule && rule.value != value) || !rule) {
                            $dg_.datagrid('addFilterRule', {
                                field: ColumnName,
                                op: 'equal',
                                value: value
                            });
                        }
                    } else {
                        if (rule) {
                            $dg_.datagrid('removeFilterRule', ColumnName);
                        }
                    }
                }
            });
        }
        //自适应页面大小
        function MyNavResize() {
            var opts = $("#navbar-minimalize").NavResize('getOptions');
            opts.Auto = false;
            opts.OnNavResizefunc = function () {
                //$("#edit_div_one").css('width', "100%");
                //$("#edit_div_two").css('width', "100%");
                //$("#OrderInfo").datagrid("resize", { width: "100%" });
                //$("#OrderDetail").datagrid("resize", { width: "100%" });
                //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
                //$("#Order_Head_panel").panel("resize", { width: "100%" });
                //setTimeout(function () {
                //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
                //    $("#edit_div_one").css(paddigLeftRight);
                //    $("#edit_div_two").css(paddigLeftRight);
                //    $("#OrderInfo").css(paddigLeftRight);
                //    $("#OrderDetail").css(paddigLeftRight);
                //    $("#ProductNameMerge").css(paddigLeftRight);
                //    $("#Order_Head_panel").css(paddigLeftRight);
                //    SetbuttonssWidth();
                //}, 100);
            };
        }
    </script>
}