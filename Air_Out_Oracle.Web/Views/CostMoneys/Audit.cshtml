@model IEnumerable<AirOut.Web.Models.CostMoney>
@{
    ViewBag.Title = "成本审核";
    var Num = 1;
    var ArrStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrAuditStatus = AirOut.Web.Extensions.Common.GetEnumToDic("AuditStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrUseStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusIsOrNoEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrBms_BillCreate_Status = AirOut.Web.Extensions.Common.GetEnumToDic("Bms_BillCreate_Status", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
}
<!--DataGrid 回车Editor下一个 和 为控件添加 Key事件 -->
<script src="~/Scripts/jsext.js?date=2019013001"></script>
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">成本审核</a>
            </li>
            @*<li class="active">
                <strong>@ViewBag.Title</strong>
            </li>*@
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>成本审核</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <!--
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="table_data_tables.html#">Config option 1</a>
                            </li>
                            <li>
                                <a href="table_data_tables.html#">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                        -->
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive"> 
                        @Html.Partial("ListView")
                        <div id="costmoney_toolbar" style="height:auto">
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="BatchAuditSuccess()">批量通过</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="BatchAuditFail()">审核拒绝</a>
                        </div>
                    </div>
                    <!-- end ibox-content -->
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        const ArrStatus = @Html.Raw(ArrStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrStatus));//数据状态
        const ArrAuditStatus = @Html.Raw(ArrAuditStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrAuditStatus));//数据审核状态
        const ArrUseStatus = @Html.Raw(ArrUseStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrUseStatus));//数据bool状态
        const ArrBms_BillCreate_Status = @Html.Raw(ArrBms_BillCreate_Status == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrBms_BillCreate_Status));//账单产生标志
        const Editable = '@Html.IsAuthorize("CostMoneys", "Index", "Edit")';

        $(function () {
            initPage();//初始化页面
        });
        //初始化页面
        function initPage() {
        }
        //获取选中行Id
        function getSelectDatagrid() {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要送审的成本信息！");
            }
            var ids = [];
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].AuditStatus == "1") {
                    ids.push(rows[i].Id);
                }
            }
            return ids;
        }
        //批量送审保存
        function SaveBatchAuditStatus(ids, auditstatus) {
            var IDS = JSON.stringify(ids);
            var url = '/CostMoneys/SaveBatchAuditStatus?ids=' + ids + '&auditstatus=' + auditstatus;
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        $.messager.alert("提示", "提交成功！", "info");
                        //$dg.datagrid('acceptChanges');
                        $dg.datagrid('reload');
                    }
                    else {
                        var ErrMsgStr = '提交错误了！';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //批量通过
        function BatchAuditSuccess() {
            $.messager.confirm('确认对话框', '您确认批量通过所有选中信息！', function (r) {
                if (r) {
                    var ids = getSelectDatagrid();
                    if (ids.length > 0) {
                        SaveBatchAuditStatus(ids, "AuditSuccess");
                    } else {
                        $.messager.alert("提示", "选中的成本信息不符合批量通过所需的状态！", "error");
                    }
                }
            });
        }
        //审核拒绝
        function BatchAuditFail() {
            $.messager.confirm('确认对话框', '您确认审核拒绝所有选中信息！', function (r) {
                if (r) {
                    var ids = getSelectDatagrid();
                    if (ids.length > 0) {
                        SaveBatchAuditStatus(ids, "AuditFail");
                    } else {
                        $.messager.alert("提示", "选中的成本信息不符合审核拒绝所需的状态！", "error");
                    }
                }
            });
        }
        var $dg = $('#costmoney_datagrid');
        var editIndex = undefined;
        //刷新
        function reload() {
            reject();//回滚所有变更
            $dg.datagrid('reload');
        }
        //开始加载数据前
        function onBeforeLoad(param) {
            $(this).data("LoadSuccess", false);
        }
        //双击当前行，打开编辑窗口
        function onDblClickRow(index, row) {
            $(location).attr('href', "/CostMoneys/EditAudit?id=" + row.Id);
        }
        //加载成功
        function onLoadSuccess(rowdata) {
            //行号自适应宽度
            $(this).datagrid("fixRownumber");
        }
        //自适应页面大小
        function MyNavResize() {
            var opts = $("#navbar-minimalize").NavResize('getOptions');
            opts.Auto = false;
            opts.OnNavResizefunc = function () {
                //$("#edit_div_one").css('width', "100%");
                //$("#edit_div_two").css('width', "100%");
                //$("#OrderInfo").datagrid("resize", { width: "100%" });
                //$("#OrderDetail").datagrid("resize", { width: "100%" });
                //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
                //$("#Order_Head_panel").panel("resize", { width: "100%" });
                //setTimeout(function () {
                //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
                //    $("#edit_div_one").css(paddigLeftRight);
                //    $("#edit_div_two").css(paddigLeftRight);
                //    $("#OrderInfo").css(paddigLeftRight);
                //    $("#OrderDetail").css(paddigLeftRight);
                //    $("#ProductNameMerge").css(paddigLeftRight);
                //    $("#Order_Head_panel").css(paddigLeftRight);
                //    SetbuttonssWidth();
                //}, 100);
            };
        }
        //页面加载结束
        $(function () {
            var opts = $dg.datagrid('options');
            opts.url = '/CostMoneys/GetData';
            opts.onDblClickRow = onDblClickRow;
            opts.onBeforeLoad = onBeforeLoad;
            opts.onLoadSuccess = onLoadSuccess;
            //设置默认搜索条件
            opts.queryParams = {
                'filterRules': JSON.stringify([{ "field":"AuditStatus", "op": "equal", "value": 1 },{ "field":"Status", "op": "equal", "value": 1 }])
            };
            opts.pageNumber = 1;
            var pager = $dg.datagrid('getPager');
            pager.pagination('refresh', {
                pageNumber: 1
            });
            $dg.datagrid('reload');
        });
    </script>
}