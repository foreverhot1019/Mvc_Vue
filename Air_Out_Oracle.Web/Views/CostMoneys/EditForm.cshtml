﻿@model AirOut.Web.Models.CostMoney
@{
    //控件排序
    var Num = 1;
    //if (Model != null && Model.Is_Book_Flat == null)
    //{
    //    Model.Is_Book_Flat = false;
    //}
}
<script async defer src="~/Scripts/jquery.validate.min.js"></script>
<script async defer src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<style>
    input[type="text"]:read-only,
    input[type="datetime"]:read-only {
        background-color: #ccc;
        opacity: 0.6;
    }
</style>
@*<div class="row">*@
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.SerialNo, "记录号", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.SerialNo, new { htmlAttributes = new { @class = "easyui-textbox", tabindex = Num++, style = "width:100%", data_options = "required:false,readonly:true,validType:'length[0,20]'" } })
    @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.HiddenFor(x => x.Is_Book_Flat)
    @Html.LabelFor(model => model.Is_Book_Flat, htmlAttributes: new { @class = "control-label " })
    @Html.Editor("Is_KSF", new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", @Value = ((Model == null || Model.Is_Book_Flat == null) ? "" : (Model.Is_Book_Flat.Value ? "1" : "0")), data_options = "required:false ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.Is_Book_Flat, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.FeeCode, "费用代码", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeCode, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.FeeCode, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.FeeName, "费用名称", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeName, new { htmlAttributes = new { @class = "easyui-textbox", tabindex = Num++, style = "width:100%", data_options = "required:true,readonly:true,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.FeeName, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.SettleAccount, "结算方", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.SettleAccount, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.SettleAccount, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.StartPlace, "起始地", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.StartPlace, new { htmlAttributes = new { @class = "easyui-combogrid", @Value = ((Model == null || Model.StartPlace == null) ? "PVG" : Model.StartPlace), tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.StartPlace, "", new { @class = "text-danger" })
</div>
@*<div class="form-group col-lg-4 col-md-4 col-sm-4">
        @Html.LabelFor(model => model.TransitPlace,"中转地", htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.TransitPlace, new { htmlAttributes = new { @class = "easyui-textbox",tabindex = Num++, style = "width:100%" } })
        @Html.ValidationMessageFor(model => model.TransitPlace,"" , new { @class = "text-danger" })
    </div>*@
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.EndPlace, "目的地", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.EndPlace, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:false ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.EndPlace, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.MoorLevel, htmlAttributes: new { @class = "control-label " })
    <div class="row">
        <div class="col-md-2">
            <input type="checkbox" id="Is_MoorLevel" class="form-control" style="height:21px;" @Html.Raw((Model == null || Model.MoorLevel == null) ? "" : (string.IsNullOrWhiteSpace(Model.MoorLevel) ? "" : "checked")) />
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MoorLevel, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
        </div>
        @Html.ValidationMessageFor(model => model.MoorLevel, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.AirLineCo, "航空公司", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.AirLineCo, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.AirLineCo, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4" style="display:none;">
    @Html.LabelFor(model => model.AirLineNo, "航班号", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.AirLineNo, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.AirLineNo, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4" style="display:none;">
    @Html.LabelFor(model => model.ProxyOperator, "代操作", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.ProxyOperator, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.ProxyOperator, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.WHBuyer, "订舱方", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.WHBuyer, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:false ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.WHBuyer, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4" style="display:none;">
    @Html.LabelFor(model => model.DealWithArticle, "成交条款", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.DealWithArticle, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.DealWithArticle, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.BSA, "BSA", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.BSA, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.BSA, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.StartDate, "开始日期", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "easyui-datebox", tabindex = Num++, style = "width:100%", @Value = ((Model == null || Model.StartDate == null) ? "" : (Model.StartDate.Value.ToString("yyyy-MM-dd"))), data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.CustomsType, "报关方式", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.CustomsType, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.CustomsType, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.AuditStatus, "审批状态", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.AuditStatus, new { htmlAttributes = new { @Value = ((int)Model.AuditStatus), @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,20]'" } })
    @Html.ValidationMessageFor(model => model.AuditStatus, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.EndDate, "结束日期", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "easyui-datebox", tabindex = Num++, style = "width:100%", @Value = ((Model == null || Model.EndDate == null) ? "" : (Model.EndDate.Value.ToString("yyyy-MM-dd"))), data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
</div>
@*<div class="form-group col-lg-4 col-md-4 col-sm-4">
        @Html.LabelFor(model => model.InspectMark,"商检标志", htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.InspectMark, new { htmlAttributes = new { @class = "easyui-textbox",tabindex = Num++, style = "width:100%" } })
        @Html.ValidationMessageFor(model => model.InspectMark,"" , new { @class = "text-danger" })
    </div>*@
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.Status, "使用状态", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @Value = ((int)Model.Status), @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,20]'" } })
    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.ADDTS, "建档日期", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.ADDTS, new { htmlAttributes = new { @class = "easyui-datetimebox", tabindex = Num++, style = "width:100%", data_options = "formatter:datetimeformatter,readonly:true", @Value = ((Model == null || Model.ADDTS == null) ? DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") : Model.ADDTS.Value.ToString("yyyy-MM-dd HH:mm:ss")) } })
    @Html.ValidationMessageFor(model => model.ADDTS, "", new { @class = "text-danger" })
</div>
@*<div class="form-group col-lg-4 col-md-4 col-sm-4">
        @Html.LabelFor(model => model.GetOrdMark,"取单标志", htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.GetOrdMark, new { htmlAttributes = new { @class = "easyui-textbox",tabindex = Num++, style = "width:100%" } })
        @Html.ValidationMessageFor(model => model.GetOrdMark,"" , new { @class = "text-danger" })
    </div>*@
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.BillingUnit, "计费单位", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.BillingUnit, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.BillingUnit, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.Price, "单价", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "easyui-numberbox", tabindex = Num++, style = "width:100%", data_options = "required:true,min:0,precision:2" } })
    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.CurrencyCode, "币别", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.CurrencyCode, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.CurrencyCode, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.CalcFormula, "计算公式", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.CalcFormula, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:true ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.CalcFormula, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-2 col-md-2 col-sm-2">
    @Html.LabelFor(model => model.FeeConditionVal1, Html.DisplayNameFor(x => x.FeeConditionVal1).ToString(), htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeConditionVal1, new { htmlAttributes = new { @class = "easyui-numberbox", tabindex = Num++, style = "width:100%", data_options = "required:false,min:0,precision:2" } })
    @Html.ValidationMessageFor(model => model.FeeConditionVal1, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-2 col-md-2 col-sm-2">
    @Html.LabelFor(model => model.CalcSign1, "计费条件", htmlAttributes: new { @class = "control-label " }) <br />
    @Html.EditorFor(model => model.CalcSign1, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.CalcSign1, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.FeeCondition, "计算单位", htmlAttributes: new { @class = "control-label " }) <br />
    @Html.EditorFor(model => model.FeeCondition, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.FeeCondition, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-2 col-md-2 col-sm-2">
    @Html.LabelFor(model => model.CalcSign2, "计费条件2", htmlAttributes: new { @class = "control-label " }) <br />
    @Html.EditorFor(model => model.CalcSign2, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%" } })
    @Html.ValidationMessageFor(model => model.CalcSign2, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-2 col-md-2 col-sm-2">
    @Html.LabelFor(model => model.FeeConditionVal2, "计费条件值2", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeConditionVal2, new { htmlAttributes = new { @class = "easyui-numberbox", tabindex = Num++, style = "width:100%", data_options = "required:false,min:0,precision:2" } })
    @Html.ValidationMessageFor(model => model.FeeConditionVal2, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.FeeMin, "费用MIN", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeMin, new { htmlAttributes = new { @class = "easyui-numberbox", tabindex = Num++, @Value = ((Model == null || Model.FeeMin == null || Model.FeeMin.Value == 0) ? "" : Model.FeeMin.Value.ToString()), style = "width:100%", data_options = "required:false,min:0,precision:2" } })
    @Html.ValidationMessageFor(model => model.FeeMin, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.FeeMax, "费用MAX", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.FeeMax, new { htmlAttributes = new { @class = "easyui-numberbox", tabindex = Num++, @Value = ((Model == null || Model.FeeMax == null || Model.FeeMax.Value == 0) ? "" : Model.FeeMax.Value.ToString()), style = "width:100%", data_options = "required:false,min:0,precision:2" } })
    @Html.ValidationMessageFor(model => model.FeeMax, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-4 col-md-4 col-sm-4">
    @Html.LabelFor(model => model.DeliveryPoint, htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.DeliveryPoint, new { htmlAttributes = new { @class = "easyui-combogrid", tabindex = Num++, style = "width:100%", data_options = "required:false" } })
    @Html.ValidationMessageFor(model => model.DeliveryPoint, "", new { @class = "text-danger" })
</div>
<div class="form-group col-lg-8 col-md-8 col-sm-8">
    @Html.LabelFor(model => model.Description, "描述", htmlAttributes: new { @class = "control-label " })
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "easyui-textbox", tabindex = Num++, style = "width:100%", data_options = "required:false ,validType:'length[0,50]'" } })
    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
</div>
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.ADDWHO)
@Html.HiddenFor(model => model.OperatingPoint)
@*</div>*@
<script type="text/javascript">
    $(function () {
        initCombogrid("_FromCache");
        var FromData = @Html.Raw(Model==null?"{}":Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        var FormNAMEData = @Html.Raw(ViewData["FormNAME"] ?? "{}");
        FormNAMEData = $.extend(FromData,FormNAMEData);
        $("form").attr("id", "form1");
        //设置ComboGrid真实url(为了不页面进入后 不立即加载数据，优化页面载入速度)
        //表单名称，虚拟url名称，是否刷新数据，ComboGrid-Text值
        resetCombogridUrl('form1', null, false, FormNAMEData);

        noEdit();//审核中/审核通过 不可编辑
        var $Is_MoorLevel = $("#Is_MoorLevel");
        var $MoorLevel = $("#MoorLevel");
        //靠级绑定
        $Is_MoorLevel.on("change.Michel",{obj:$MoorLevel},function(event){
            var $MoorLevel = event.data.obj;
            $MoorLevel.combogrid("readonly",!$(this).prop('checked'));
            if(!$(this).prop('checked'))
                $("#MoorLevel").combogrid('setValue','');
        });
        $Is_MoorLevel.trigger("change.Michel",{obj:$MoorLevel});
    });
    //审核中/审核通过 不可编辑
    function noEdit() {
        var auditstatus = $("#AuditStatus").combogrid("getValue");
        if (auditstatus==1 || auditstatus==2 || auditstatus == 'Auditing' || auditstatus == 'AuditSuccess') {
            $("input.easyui-combogrid.text-box").combogrid("readonly",true);
            $("input.textbox-text.validatebox-text").attr("readonly", "readonly");
            $("a.textbox-icon.combo-arrow").addClass("textbox-icon-disabled");
            $("input[type='checkbox']").attr("disabled", "disabled");
            var Id = $("#Id").val();
            if(!isNaN(Id)){
                if(parseInt(Id)>0){
                    $("#EndDate").datebox("readonly",false);
                    $("#Status").combogrid("readonly",false);
                }
            }
        }
    }
    //渲染所有的combogrid控件
    function initCombogrid(_FromCache) {
        var FromCache ="";
        if (!(typeof _FromCache === 'undefined' || _FromCache == null ||_FromCache==''))
            FromCache= '_FromCache';
        //KSF
        var $Is_KSF = $("#Is_KSF");
        if($Is_KSF.length>0){
            $Is_KSF.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:false,
                mode: 'loacl',
                pagination: false,
                data: ArrUseStatus,
                onChange:function(newValue, oldValue){
                    if(ObjectIsEmpty(newValue))
                        $("#Is_Book_Flat").val("");
                    else
                    {
                        var num;
                        if(!isNaN(newValue))
                            num= parseInt(newValue);
                        if(newValue==1)
                            $("#Is_Book_Flat").val("true");
                        else if(newValue==0)
                            $("#Is_Book_Flat").val("false");
                        else
                            $("#Is_Book_Flat").val("");
                    }
                }
            }));
            //设置空值时，text清除但值未清除
            var $txt = $Is_KSF.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //费用代码
        var $FeeCode = $("#FeeCode");
        if($FeeCode.length>0){
            $FeeCode.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                textField: 'ID',
                url1: '/FeeTypes/GetPagerFeeTypes'+FromCache,
                onChange: function (newValue, oldValue) {
                    var data = $("#FeeCode").combogrid("grid").datagrid("getSelected");
                    if (data != null) {//费用代码存在时，自动填写费用名称
                        $('#FeeName').textbox("setValue", data.TEXT);
                    } else {//清空费用名称
                        $('#FeeName').textbox("setValue", "");
                    }
                }
            }));
            //keyup事件 小写转大写
            $FeeCode.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //结算方，获取的客商信息
        var $SettleAccount = $("#SettleAccount");
        if($SettleAccount.length>0){
            $SettleAccount.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                url1: '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            }));
            //keyup事件 小写转大写
            $SettleAccount.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //订舱方
        var $WHBuyer = $("#WHBuyer");
        if($WHBuyer.length>0){
            $WHBuyer.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:false,
                url1: '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            }));
            //keyup事件 小写转大写
            $WHBuyer.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //成交条款
        var $DealWithArticle = $("#DealWithArticle");
        if($DealWithArticle.length>0){
            $DealWithArticle.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/DealArticles/GetPagerDealArticle'+FromCache
            }));
            //keyup事件 小写转大写
            $DealWithArticle.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //起始地
        var $StartPlace = $("#StartPlace");
        if($StartPlace.length>0){
            $("#StartPlace").combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
            }));
            //keyup事件 小写转大写
            $StartPlace.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        ////中转地
        //var $TransitPlace = $("#TransitPlace");
        //if($TransitPlace.length>0){
        //    $TransitPlace.combogrid($.extend({},combogrid_DefaultSettings,{
        //        url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
        //    }));
        //    //keyup事件 小写转大写
        //    $TransitPlace.combogrid("textbox").bind('keyup',keyupToUpper);
        //}
        //目的地
        var $EndPlace = $("#EndPlace");
        if($EndPlace.length>0){
            $EndPlace.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:false,
                textField: 'ID',
                url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
            }));
            //keyup事件 小写转大写
            $EndPlace.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //航空公司
        var $AirLineCo = $("#AirLineCo");
        if($AirLineCo.length>0){
            $AirLineCo.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/CusBusInfos/GetPagerCusBusInfos'+FromCache
            }));
            //keyup事件 小写转大写
            $AirLineCo.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //航班号
        var $AirLineNo = $("#AirLineNo");
        if($AirLineNo.length>0){
            $AirLineNo.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/PARA_AirLines/GetPagerAirLine'+FromCache
            }));
            //keyup事件 小写转大写
            $AirLineNo.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //代操作
        var $ProxyOperator = $("#ProxyOperator");
        if($ProxyOperator.length>0){
            $ProxyOperator.combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                pagination: false,
                data: ArrUseStatus
            }));
            //设置空值时，text清除但值未清除
            var $txt = $ProxyOperator.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
            //keyup事件 小写转大写
            //$ProxyOperator.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //靠级
        var $MoorLevel = $("#MoorLevel");
        if($MoorLevel.length>0){
            $MoorLevel.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/BD_DEFDOC_LISTs/Get_DEFDOC_DICT'+FromCache+'?DOCCODE=MoorLevel'
            }));
            //keyup事件 小写转大写
            $MoorLevel.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //BSA
        var $BSA = $("#BSA");
        if($BSA.length>0){
            $BSA.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:false,
                mode: 'local',
                pagination: false,
                data: ArrUseStatus
            }));
            //设置空值时，text清除但值未清除
            var $txt = $BSA.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //审批状态
        var $AuditStatus = $("#AuditStatus");
        if($AuditStatus.length>0){
            $AuditStatus.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                mode: 'loacl',
                readonly: true,
                pagination: false,
                data: ArrAuditStatus
            }));
            //设置空值时，text清除但值未清除
            var $txt = $AuditStatus.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //使用状态
        var $Status = $("#Status");
        if($Status.length>0){
            $Status.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                mode: 'loacl',
                pagination: false,
                data: ArrStatus
            }));
            //设置空值时，text清除但值未清除
            var $txt = $Status.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //报关方式
        var $CustomsType = $("#CustomsType");
        if($CustomsType.length>0){
            $CustomsType.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/BD_DEFDOC_LISTs/GetPager_DEFDOC_DICT'+FromCache+'?DOCCODE=CusType',
            }));
            //keyup事件 小写转大写
            $CustomsType.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //币制
        var $CurrencyCode = $("#CurrencyCode");
        if($CurrencyCode.length>0){
            $CurrencyCode.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                url1: '/PARA_CURRs/GetPagerPARA_CURR'+FromCache
            }));
            //keyup事件 小写转大写
            $CurrencyCode.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //计费单位
        var $BillingUnit = $("#BillingUnit");
        if($BillingUnit.length>0){
            $BillingUnit.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                url1: '/FeeUnits/GetPagerFeeUnits'+FromCache,
            }));
            //keyup事件 小写转大写
            $BillingUnit.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //计算单位
        var $FeeCondition = $("#FeeCondition");
        if($FeeCondition.length>0){
            $FeeCondition.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/BD_DEFDOC_LISTs/GetPager_DEFDOC_DICT'+FromCache+'?DOCCODE=FeeConditionAp',
            }));
            //keyup事件 小写转大写
            $FeeCondition.combogrid("textbox").bind('keyup',keyupToUpper);
        }
        //商检标志
        var $InspectMark = $("#InspectMark");
        if($InspectMark.length>0){
            $InspectMark.combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                pagination: false,
                data: ArrUseStatus,
            }));
            //设置空值时，text清除但值未清除
            var $txt = $InspectMark.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //取单标志
        var $GetOrdMark = $("#GetOrdMark");
        if($GetOrdMark.length>0){
            $GetOrdMark.combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                pagination: false,
                data: ArrUseStatus,
            }));
            //设置空值时，text清除但值未清除
            var $txt = $GetOrdMark.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //计费运算符1
        var $CalcSign1 = $("#CalcSign1");
        if($CalcSign1.length>0){
            $CalcSign1.combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                idField: 'TEXT',
                valueField: 'TEXT',
                pagination: false,
                data: ArrUseCalcSign
            }));
            //设置空值时，text清除但值未清除
            var $txt = $CalcSign1.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //计费运算符2
        var $CalcSign2 = $("#CalcSign2");
        if($CalcSign2.length>0){
            $CalcSign2.combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'local',
                idField: 'TEXT',
                valueField: 'TEXT',
                pagination: false,
                data: ArrUseCalcSign
            }));
            //设置空值时，text清除但值未清除
            var $txt = $CalcSign2.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //计费公式
        var $CalcFormula = $("#CalcFormula");
        if($CalcFormula.length>0){
            $CalcFormula.combogrid($.extend({}, combogrid_DefaultSettings, {
                required:true,
                mode: 'local',
                pagination: false,
                data: ArrBillFormula
            }));
            //设置空值时，text清除但值未清除
            var $txt = $CalcFormula.combogrid('textbox');
            $txt.bind('keyup', SetkeyUpVal);
        }
        //交货点
        var $DeliveryPoint = $("#DeliveryPoint");
        if($DeliveryPoint.length>0){
            $DeliveryPoint.combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/BD_DEFDOC_LISTs/Get_DEFDOC_DICT'+FromCache+'?DOCCODE=Delivery_Point'
            }));
            //keyup事件 小写转大写
            $DeliveryPoint.combogrid("textbox").bind('keyup',keyupToUpper);
        }
    }
    //复制新增
    function copyAdd() {
        $(location).attr('href', "/CostMoneys/Create?id=" + $("#Id").val());
    }
</script>
