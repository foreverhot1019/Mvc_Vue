@model AirOut.Web.Models.CostMoney
@{
    ViewBag.Title = "成本管理";
    var Num = 1;
    var ArrStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrAuditStatus = AirOut.Web.Extensions.Common.GetEnumToDic("AuditStatusEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrUseStatus = AirOut.Web.Extensions.Common.GetEnumToDic("UseStatusIsOrNoEnum", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
    var ArrBms_BillCreate_Status = AirOut.Web.Extensions.Common.GetEnumToDic("Bms_BillCreate_Status", "AirOut.Web.Models.AirOutEnumType").Select(n => new { ID = n.Value.ToString(), TEXT = n.DisplayName, Value = n.Value, DisplayName = n.DisplayName });
}
<!--DataGrid 回车Editor下一个 和 为控件添加 Key事件 -->
<script src="~/Scripts/jsext.js?date=2019013001"></script>
<!--真实 下载进度条 -->
<script async defer src="~/Scripts/DownLoadProgress.js"></script>
<script type="text/javascript">
    //表单唯一值，防止重复提交
    var ActionGuidName = '@(ViewData["ActionGuidName"]??"")';
    var ActionGuid = '@(ViewData["ActionGuidName"] == null ? "" : (ViewData[ViewData["ActionGuidName"].ToString()] ?? ""))';
</script>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">主页</a>
            </li>
            <li>
                <a href="#">成本信息</a>
            </li>
            @*<li class="active">
                    <strong>@ViewBag.Title</strong>
                </li>*@
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>成本信息</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <!--
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="table_data_tables.html#">Config option 1</a>
                            </li>
                            <li>
                                <a href="table_data_tables.html#">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                        -->
                    </div>
                </div>
                <div class="ibox-content">
                    <form id="searchform" method="post" style="padding-bottom:10px; width:auto">
                        <div id="div_search" style="padding-top:5px; padding-bottom:3px; width:auto;" class="easyui-panel" title="查询条件"
                             data-options="collapsible:true">
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">费用代码:</label>
                                <input id="FeeCodeQuery" name="FeeCodeQuery" tabindex="@(Num++)" data-options="prompt1:'费用代码'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">费用名称:</label>
                                <input id="FeeNameQuery" name="FeeNameQuery" tabindex="@(Num++)" data-options="prompt1:'费用名称'" style="width:100%" class="easyui-textbox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">结算方:</label>
                                <input id="SettleAccountQuery" name="SettleAccountQuery" tabindex="@(Num++)" data-options="prompt1:'结算方'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            @*<div class="form-group col-md-3">
                                    <label for="name" style="width:100px">起始地:</label>
                                    <input id="StartPlaceQuery" name="StartPlaceQuery" tabindex="@(Num++)" data-options="prompt1:'起始点'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="name" style="width:100px">中转地:</label>
                                    <input id="TransitPlaceQuery" name="TransitPlaceQuery" tabindex="@(Num++)" data-options="prompt1:'中转地'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>*@
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">目的地:</label>
                                <input id="EndPlaceQuery" name="EndPlaceQuery" tabindex="@(Num++)" data-options="prompt1:'目的地'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">航空公司:</label>
                                <input id="AirLineCoQuery" name="AirLineCoQuery" tabindex="@(Num++)" data-options="prompt1:'航空公司'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            @*<div class="form-group col-md-3">
                                    <label for="name" style="width:100px">航班号:</label>
                                    <input id="AirLineNoQuery" name="AirLineNoQuery" tabindex="@(Num++)" data-options="prompt1:'航班号'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="name" style="width:100px">代操作:</label>
                                    <input id="ProxyOperatorQuery" name="ProxyOperatorQuery" tabindex="@(Num++)" data-options="prompt1:'代操作'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>*@
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">审批状态:</label>
                                <input id="AuditStatusQuery" name="AuditStatusQuery" tabindex="@(Num++)" data-options="prompt1:'审批状态'" style="width:100%" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">使用状态:</label>
                                <input id="StatusQuery" name="StatusQuery" tabindex="@(Num++)" data-options="prompt1:'使用状态'" style="width:100%" value="1" class="easyui-combogrid" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">&nbsp;</label>
                                <div style="width:100%;height:28px;">&nbsp;</div>
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">开始日期起:</label>
                                <input id="StartDateQuery1" name="StartDateQuery1" tabindex="@(Num++)" data-options="prompt1:'接单日期起'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">至:</label>
                                <input id="StartDateQuery2" name="StartDateQuery2" tabindex="@(Num++)" data-options="prompt1:'接单日期讫'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">结束日期:</label>
                                <input id="EndDateQuery1" name="EndDateQuery1" tabindex="@(Num++)" data-options="prompt1:'结束日期'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">至:</label>
                                <input id="EndDateQuery2" name="EndDateQuery2" tabindex="@(Num++)" data-options="prompt1:'至'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>

                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">建档日期:</label>
                                <input id="ADDTSQuery1" name="ADDTSQuery1" tabindex="@(Num++)" data-options="prompt1:'建档日期'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">至:</label>
                                <input id="ADDTSQuery2" name="ADDTSQuery2" tabindex="@(Num++)" data-options="prompt1:'至'" style="width:100%" class="easyui-datebox" type="text" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="name" style="width:100px">BSA:</label>
                                <input id="BSA_Query" name="BSAQuery" tabindex="@(Num++)" style="width:100%" class="easyui-checkbox" type="checkbox" />
                            </div>
                            @*<div class="form-group col-md-3">
                                    <label for="name" style="width:100px">记录号:</label>
                                    <input id="SerialNoQuery" name="SerialNoQuery" tabindex="@(Num++)" data-options="prompt1:'记录号'" style="width:100%" class="easyui-textbox" type="text" />
                                </div>

                                <div class="form-group col-md-3">
                                    <label for="name" style="width:100px">报关方式:</label>
                                    <input id="CustomsTypeQuery" name="CustomsTypeQuery" tabindex="@(Num++)" data-options="prompt1:'报关方式'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="name" style="width:100px">商检标志:</label>
                                    <input id="InspectMarkQuery" name="InspectMarkQuery" tabindex="@(Num++)" data-options="prompt1:'商检标志'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="name" style="width:100px">取单标志:</label>
                                    <input id="GetOrdMarkQuery" name="GetOrdMarkQuery" tabindex="@(Num++)" data-options="prompt1:'取单标志'" style="width:100%" class="easyui-combogrid" type="text" />
                                </div>*@
                            <div class="form-group col-md-12" style="text-align:center;">
                                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="searchf()">查询</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="clearfrom()">重置</a>*@
                                <button id="btn-search" class="btn btn-primary">
                                    <i class="fa fa-search"></i>
                                    搜索
                                </button>
                                <button id="btn-reset" class="btn btn-default">
                                    <i class="fa fa-reset"></i>
                                    重置
                                </button>
                            </div>
                        </div>
                        <div class="row" id="" style="margin-bottom:0px;">
                            <div class="col-md-12">
                                <div class="form-group col-md-6" style="border: 1px solid #ddd; border-top:none; border-right:none; padding-top:3px; padding-bottom: 3px;">
                                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "col-md-2 col-form-label ", style = "padding-top:5px;" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(x => x.EndDate, new { htmlAttributes = new { @class = "easyui-datebox", data_options = "required:true,validType:'length[0,50]'",@Value=DateTime.Today.ToString("yyyy-MM-dd") } })
                                    </div>
                                </div>
                                <div class="form-group col-md-6" style="border: 1px solid #ddd; border-top:none; border-left:none; padding-top:3px; padding-bottom: 3px;">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-edit',plain:true" onclick="BatchEdit()">批量修改</a>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="table-responsive">
                        @Html.Partial("ListView")
                        <div id="costmoney_toolbar" style="height:auto">
                            @if (Html.IsAuthorize("Create"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="copyappend()">复制新增</a>
                            }
                            @if (Html.IsAuthorize("Delete"))
                            {
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="BatchDelete()">批量删除</a>
                            }
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="BatchTrial()">批量送审</a>
                            @if (Html.IsAuthorize("Edit"))
                            {
                                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>*@
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload()">刷新</a>
                            }
                            @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>*@
                            @if (Html.IsAuthorize("Import"))
                            {
                                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true" onclick="exportexcel()">导出 Excel</a>*@
                            }
                        </div>
                    </div>
                    <!-- end ibox-content -->
                </div>
            </div>
        </div>
    </div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
    <p><input type="file" name="file_upload" id="file_upload" /></p>
</div>

@section Scripts {
    <script type="text/javascript">
        const ArrStatus = @Html.Raw(ArrStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrStatus));//数据状态
        const ArrAuditStatus = @Html.Raw(ArrAuditStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrAuditStatus));//数据审核状态
        const ArrUseStatus = @Html.Raw(ArrUseStatus == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrUseStatus));//数据bool状态
        const ArrBms_BillCreate_Status = @Html.Raw(ArrBms_BillCreate_Status == null ? "[]" : Newtonsoft.Json.JsonConvert.SerializeObject(ArrBms_BillCreate_Status));//账单产生标志
        const Editable = '@Html.IsAuthorize("CostMoneys", "Index", "Edit")';

        $(function () {
            $("#file_upload").uploadifive({
                'height': 30,
                'fileTypeDesc': 'Excel 2010 Files',
                'fileTypeExts': '*.xlsx',
                'uploadScript': '/FileUpload/Upload',
                'buttonText': '选择EXCEL',
                'multi': true,
                'displayData': 'speed',
                'formData': { 'modelType': 'CostMoney' },
                'width': 120,
                'successTimeout': 100000,
                'onFallback': function () {
                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                    $('#file_upload').uploadifive('clearQueue')
                },
                'onSelect': function (queue) {
                    $.messager.progress({
                        title: '执行导入',
                        msg: '请等待...'
                    });
                },
                'onUploadComplete': function (file, data) {
                    $.messager.progress('close');
                    var data = $.parseJSON(data);
                    //console.log(data);
                    if (data.success == false) {
                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                        $("#file_upload").uploadifive('clearQueue')
                    } else {
                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                        $dg.datagrid('reload');
                        $('#importwindow').window('close');
                    }
                    return true;
                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                }
            });
            initPage("_FromCache");//初始化页面
            var FromData = "{}";
            var FormNAMEData = @Html.Raw(ViewData["FormNAME"] ?? "{}");
            FormNAMEData = $.extend(FromData,FormNAMEData);
            //设置ComboGrid真实url(为了不页面进入后 不立即加载数据，优化页面载入速度)
            //表单名称，虚拟url名称，是否刷新数据，ComboGrid-Text值
            resetCombogridUrl('div_search', null, false, {});
        });
        //初始化页面
        function initPage(_FromCache) {
            var FromCache = ""
            if (!(typeof (_FromCache) === 'undefined' || _FromCache == null || _FromCache == ''))
                FromCache = "_FromCache";
            //费用代码
            $("#FeeCodeQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url1: '/FeeTypes/GetPagerFeeTypes' + FromCache,
                onChange: function (newValue, oldValue) {
                    var data = $("#FeeCodeQuery").combogrid("grid").datagrid("getSelected");
                    if (data != null) {//费用代码存在时，自动填写费用名称
                        $('#FeeNameQuery').textbox("setValue", data.TEXT);
                    } else {//清空费用名称
                        $('#FeeNameQuery').textbox("setValue", "");
                    }
                }
            }));
            //结算方，获取的客商信息
            $("#SettleAccountQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                textField: 'IDTEXT',
                url1: '/CusBusInfos/GetPagerCusBusInfos' + FromCache
            }));
            //起始地
            $("#StartPlaceQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                //url1: '/PARA_Areas/GetPagerAddressPlace' + FromCache
                url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
            }));
            //中转地
            $("#TransitPlaceQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                //url1: '/PARA_Areas/GetPagerAddressPlace' + FromCache
                url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
            }));
            //目的地
            $("#EndPlaceQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                //url1: '/PARA_Areas/GetPagerAddressPlace' + FromCache
                url1: '/PARA_AirPorts/GetPARA_AirPorts' + FromCache
            }));
            //航空公司
            $("#AirLineCoQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/CusBusInfos/GetPagerCusBusInfos' + FromCache
            }));
            //航班号
            $("#AirLineNoQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                url1: '/PARA_AirLines/GetPagerAirLine' + FromCache,
                columns: [[
                    { field: 'ID', title: '代码', width: 220 }
                ]],
            }));
            //代操作
            $("#ProxyOperatorQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'loacl',
                pagination: false,
                data:ArrUseStatus
            }));
            //审批状态
            $("#AuditStatusQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'loacl',
                pagination: false,
                data:ArrAuditStatus
            }));
            //使用状态
            $("#StatusQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'loacl',
                pagination: false,
                data:ArrStatus
            }));
            //报关方式
            $("#CustomsTypeQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                url1:'/BD_DEFDOC_LISTs/GetPager_DEFDOC_DICT' + FromCache + '?DOCCODE=DeclCustom'
            }));
            //商检标志
            $("#InspectMarkQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'loacl',
                pagination: false,
                data:ArrUseStatus
            }));
            //取单标志
            $("#GetOrdMarkQuery").combogrid($.extend({}, combogrid_DefaultSettings, {
                mode: 'loacl',
                pagination: false,
                data:ArrUseStatus
            }));
        }
        //查询条件重置按钮 点击事件
        $("#btn-reset").click(function (e) {
            e.preventDefault();
            clearfrom();
        });
        $("#btn-search").click(function (e) {
            e.preventDefault();
            searchf();
            $dg.datagrid("clearChecked");
            $dg.datagrid("clearSelections");
        });
        //点击重置按钮时，触发，清空查询条件
        function clearfrom() {
            $('#searchform').form('clear');
        }
        //点击查询按钮时，触发
        function searchf() {
            setfilteropts();//设置查询条件
            var opts = $dg.datagrid('options');
            opts.pageNumber = 1;
            var pager = $dg.datagrid('getPager');
            pager.pagination('refresh', {
                pageNumber: 1
            });
            $dg.datagrid('reload');
        }
        //设置查询条件
        function setfilteropts() {
            var params = [];
            var searchData = getFormSerializeJson("#searchform");
            for(var i in searchData){
                var data = searchData[i];
                if (!(typeof (data) === 'undefined' || data == null || data == "")) {
                    if(i.indexOf("Query1")>0 ){
                        params.push({ "field": "_"+i.replace('Query1',''), "op": "equal", "value": data });
                    }else if(i.indexOf("Query2")>0 ){
                        params.push({ "field": i.replace('Query2','')+"_", "op": "equal", "value": data });
                    }else if(i.indexOf("Query")>0 ){
                        params.push({ "field": i.replace('Query',''), "op": "equal", "value": data });
                    }
                }
            }
            var opts = $dg.datagrid('options');
            opts.queryParams = {
                'filterRules': JSON.stringify(params)
            };
        }
        //批量修改 结束时间
        function BatchEdit(){
            var SeltRows = $dg.datagrid('getSelections');
            if (SeltRows.length <= 0) {
                $.messager.alert("提示", "请至少选择一条需要批量修改的数据！");
                return false;
            }
            var ArrId = SeltRows.map(function(item){
                return item.Id;
            });
            var url = "/CostMoneys/BatchEdit";
            var postdata={};
            postdata.EndDate = $("#EndDate").datebox('getValue');
            postdata.ArrId = ArrId;
            $.ajax({
                type: "POST",
                datatype: "json",//接收的数据类型
                contentType: "application/json; charset=utf-8;",//告诉服务端 发送的数据类型
                async: true,
                data: JSON.stringify(postdata),
                url: url,
                success: function (data) {
                    $.messager.progress('close');
                    if (data) {
                        if (data.Success) {
                            $dg.datagrid('reload');
                        } else{
                            $.messager.alert('警告', data.ErrMsg);
                        }
                    }
                    else{
                        $.messager.alert('警告', '未知错误');
                    }
                },
                error: function () {
                    $.messager.progress('close');
                    $.messager.alert('警告', '数据处理中,出现网络错误');
                }
            });
        }
        //获取选中行Id
        function getSelectDatagrid(rows) {
            var ids = [];
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].AuditStatus == "0" || rows[i].AuditStatus == "-1") {
                    ids.push(rows[i].Id);
                }
            }
            return ids;
        }
        //批量送审
        function BatchTrial() {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要送审成本信息！");
                return false;
            }
            $.messager.confirm('确认对话框', '您确认送审所有选中信息！', function (r) {
                if (r) {
                    var ids = getSelectDatagrid(rows);
                    if (ids.length > 0) {
                        SaveBatchAuditStatus(ids);
                    } else {
                        $.messager.alert("提示", "选中的成本信息不符合送审所需的状态！", "error");
                    }
                }
            });
        }
        //批量送审保存
        function SaveBatchAuditStatus(ids) {
            var IDS = JSON.stringify(ids);
            var url = '/CostMoneys/SaveBatchAuditStatus?ids=' + ids;
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        $.messager.alert("提示", "提交成功！", "info");
                        //$dg.datagrid('acceptChanges');
                        $dg.datagrid('reload');
                    }
                    else {
                        var ErrMsgStr = '提交错误了！';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //批量删除
        function BatchDelete() {
            var rows = $dg.datagrid('getSelections');
            if (rows.length == 0) {
                $.messager.alert("提示", "请选择需要删除的成本信息！");
                return false;
            }
            $.messager.confirm('确认对话框', '您确认删除所有选中信息！', function (r) {
                if (r) {
                    var ids = getSelectDatagrid(rows);
                    if (ids.length > 0) {
                        SaveBatchDelete(ids);
                    } else {
                        $.messager.alert("提示", "选中的成本信息不符合删除所需的状态！", "error");
                    }
                }
            });
        }
        //批量删除保存
        function SaveBatchDelete(ids) {
            var IDS = JSON.stringify(ids);
            var url = '/CostMoneys/SaveBatchDelete?ids=' + ids;
            $.ajax({
                type: 'POST',
                url: url,//获取数据的函数
                async: true,//true 异步，false 同步
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function (xhr) {//发送请求前运行的函数
                    //console.log('beforeSend');
                    $.messager.progress({
                        title: '数据处理中',
                        msg: '数据处理中，请等待...'
                    });
                    AddAjaxActionGuidName(this);
                },
                success: function (data) {//查询成功,data为返回的数据
                    if (data.Success) {
                        $.messager.alert("提示", "提交成功！", "info");
                        $dg.datagrid('reload');
                        $dg.datagrid('clearSelections');
                    }
                    else {
                        var ErrMsgStr = '提交错误了！';
                        if (!(typeof (data.ErrMsg) === 'undefined' || data.ErrMsg == null || data.ErrMsg == ''))
                            ErrMsgStr = data.ErrMsg;
                        $.messager.alert("错误", ErrMsgStr, 'error');
                    }
                },
                error: function () {//查询失败
                    $.messager.alert("错误", "提交错误了！", 'error');
                },
                complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                    $.messager.progress('close');
                }
            });
        }
        //导入
        function importexcel() {
            $('#importwindow').window('open');
        }
        //导出
        function exportexcel() {
            setfilteropts();//设置查询条件
            var opts = $dg.datagrid('options');
            //var filterRules = JSON.stringify(opts.filterRules);
            //$.messager.progress({ title: '正在执行导出！' });
            //var formData = new FormData();
            //formData.append('filterRules', filterRules);
            //formData.append('sort', 'Id');
            //formData.append('order', 'asc');
            //$.postDownload('/CostMoneys/ExportExcel', formData, function (fileName) {
            //	$.messager.progress('close');
            //});

            var formData = { filterRules: opts.queryParams.filterRules, sort: opts.sortName, order: opts.sortOrder };
            var url = '/CostMoneys/ExportExcel';
            $.DownLoadProgress({
                url: url,         //下载文件的url
                method: 'Post',   //链接打开方式
                data: formData,         //要发送的数据
                downLoadInfo: '下载文件', //下载界面文字
                closeDelay: 2000, //自动关闭时间(毫秒) 0则立马关闭
                callbackFuc: function () {
                    $.messager.progress('close');
                }
            });
        }
        //datagrid
        const Curr$dgCtrl = 'costmoney'; //当前dg是应收/应付账单 id前缀
        var $dg = $('#costmoney_datagrid');
        var editIndex = undefined;
        //刷新
        function reload() {
            reject();//回滚所有变更
            $dg.datagrid('reload');
        }
        //datagrid  键盘事件(写在 jsext/EasyUIDataGrid_ControlNext 文件中)
        //var dg_keyHandler = dg_keyHandler;
        //datagrid 编辑时的 combogrid通用参数设置
        var dg_combo_coSettings = combogrid_DefaultSettings;
        //datagrid 编辑时的 combogrid参数设置
        var Arrcombogrid_Settings = {};
        Arrcombogrid_Settings = function setInitCombogridSettings(){
            var _Arrcombogrid_Settings ={};
            _Arrcombogrid_Settings[Curr$dgCtrl + '_datagrid'] = {
                'COUNTRY': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/PARA_COUNTRYS/GetPagerPARA_COUNTRY',
                    idField: 'COUNTRY_CO',
                    valueField: 'COUNTRY_CO',
                    textField: 'COUNTRY_NA',
                    columns: [[
                        { field: 'COUNTRY_CO', title: '代码', width: 53 },
                        { field: 'COUNTRY_NA', title: '名称', width: 150 }
                    ]],
                    onChange: function (value) {
                        var targetEditor = $dg.datagrid('getEditor', {
                            field: 'COUNTRY',
                            index: editIndex
                        });
                        if (targetEditor != null) {
                            var Selted = $(targetEditor.target).combogrid('grid').datagrid('getSelected');
                            if (Selted) {
                                var datarow = $dg.datagrid('getData').rows[editIndex];
                                if (!(typeof datarow === 'undefined' || datarow == null)) {
                                    datarow['COUNTRY' + 'NAME'] = Selted[$(targetEditor.target).combogrid('options').textField];
                                }
                            }
                        }
                    }
                }),
                'Money_Code': $.extend({}, dg_combo_coSettings, {
                    required: true,
                    url: '/PARA_Currs/GetPARA_CURR_FromCache',
                }),
                'Status':$.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrStatus
                }),
                'AuditStatus':$.extend({}, dg_combo_coSettings, {
                    required: true,
                    mode:'local',
                    pagination: false,
                    data:ArrAuditStatus
                }),
            };
            //bool状态
            var ArrboolCol = [
                /*应收/应付*/
                "Create_Status",//产生标志
                "Jk_Status",//集卡产生标志
                "Ishk_Status", //记录是否传入香港
                "Sbsx_Status",//实报实销状态
                "Dsdf_Status",//代收代付状态
                /*应收/应付-明细*/
                //"Create_Status",//产生标志
                "Invoice_Status",//开票标志
                "Chalk_Status",//签收标志
                "Collate_Status",//对帐标志
                "Refer_Status",//提交标志
                "Blank_Status",//销帐标志
                "Special_Status",//专项标志
                "Invos_Status",//开票后修改标志
            ];
            //设置combogrid-bool状态
            for(var i in _Arrcombogrid_Settings){
                for(var ii in ArrboolCol){
                    _Arrcombogrid_Settings[i][ArrboolCol[ii]] = $.extend({}, dg_combo_coSettings, {
                        required: true,
                        mode:'local',
                        pagination: false,
                        data:ArrUseStatus
                    });
                }
            }
            return _Arrcombogrid_Settings;
        }();
        //开始编辑行时，赋值 联动数据
        function onBeginEdit(rowIndex, rowData) {
            var num = 0;
            var regx = /^\/Date\([0-9]+(\)\/)$/g;
            for (var i in rowData) {
                if (regx.test(rowData[i])) {
                    rowData[i] = datetimeformatter(rowData[i]);
                }
                var targetEditor = $dg.datagrid('getEditor', {
                    field: i,
                    index: rowIndex
                });
                //console.log("targetEditor", i, targetEditor);
                if (targetEditor) {
                    num++;
                    if (num == 1 && $(targetEditor.target).val() == '') {
                        $(targetEditor.target).parent().children("span:eq(0)").children("input:eq(0)").focus();
                    }

                    var OldVal = targetEditor.oldHtml;
                    switch (targetEditor.type.toLowerCase()) {
                        case "combogrid":
                            //console.log(targetEditor);
                            let combogrid_Setting = Arrcombogrid_Settings[$(this).attr('id')][targetEditor.field];
                            if (combogrid_Setting) {
                                //设置 combogrid 参数（回车下一个等）利用JS闭包原理，让js不回收变量
                                var fnGetcmgrid_Setting = function (_combogrid_Setting,field, _rowIndex) {
                                    return $.extend(combogrid_Setting, {
                                        onLoadSuccess: function (data) {
                                            ondgLoadSuccess($dg, field, _rowIndex);
                                        }
                                    }, dg_keyHandler);
                                };
                                $(targetEditor.target).combogrid(fnGetcmgrid_Setting(combogrid_Setting, targetEditor.field, rowIndex));
                                //设置Combogrid 分页控件 简单模式
                                SetCombogridPager(targetEditor.target);
                            }
                            if (!(typeof (OldVal) === 'undefined' || OldVal == null || OldVal == '')) {
                                if (rowData[targetEditor.field]) {
                                    OldVal = rowData[targetEditor.field];
                                }
                                $(targetEditor.target).combogrid('setValue', OldVal);
                                var opts = $(targetEditor.target).combogrid('options');
                                var url = opts.url;
                                //设置查询参数
                                var queryParams = {
                                    page: 1,
                                    rows: opts.pageSize,
                                    q: OldVal
                                };
                                $(targetEditor.target).combogrid('grid').datagrid('load', queryParams);
                            }
                            break;
                        case "combobox":
                            var opts = $(targetEditor.target).combobox({
                                inputEvents: $.extend({}, $.fn.combobox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        combobox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "textbox":
                        case "numberbox":
                        case "datebox":
                        case "datetimebox":
                            var data = $(targetEditor.target).data();
                            var $txtbox = $(data.textbox).find("input.textbox-text");
                            var $target = $(targetEditor.target);
                            $target.textbox({
                                inputEvents: $.extend({}, $.fn.textbox.defaults.inputEvents, {
                                    keydown: function (event) {
                                        dg_Listtextbox_keydown(this, event, $dg, rowIndex);
                                    }
                                })
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                        case "checkbox":
                            $(targetEditor.target).keydown(function (e) {
                                chk_rdo_keydown(this, e, $dg, rowIndex);
                            });
                            setTargetVal(targetEditor, OldVal);
                            break;
                    }
                }
            }
        }
        //结束编辑时
        function endEditing() {
            if (editIndex == undefined)
                return true;
            if ($dg.datagrid('validateRow', editIndex)) {
                $dg.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }
        //双击当前行，打开编辑窗口
        function onDblClickRow(index, row) {
            //var row = $dg.datagrid('selectRow', editIndex);
            //console.log("editIndex:", editIndex);
            //var rows = $dg.datagrid('getSelections');
            var url = "/CostMoneys/Edit?id=" + row.Id;
            //$(location).attr('href', url);
            window.open(url);
        }
        //单击单元格
        function onClickCell(index, field) {
            var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
            if ($.inArray(field, _operates) >= 0) {
                return;
            }
            if (editIndex != index) {
                if (endEditing()) {
                    if (!Editable)
                    {
                        $.messager.alert('提示', '您没有编辑权限！');
                        return false;
                    }
                    //动态设置 编辑样式
                    //var byteColumn = $dg.datagrid('getColumnOption', 'ADDWHO');
                    //if (!(typeof (byteColumn) === 'undefined' || byteColumn == null || byteColumn == '')) {
                    //    byteColumn.editor = {};
                    //    byteColumn = $dg.datagrid('getColumnOption', 'ADDTS');
                    //    byteColumn.editor = {};
                    //    var byteColumn = $dg.datagrid('getColumnOption', 'EDITWHO');
                    //    byteColumn.editor = {
                    //        type: 'textbox',
                    //        options: {
                    //            required: false,
                    //            validType: 'length[0,20]'
                    //        }
                    //    };
                    //    byteColumn = $dg.datagrid('getColumnOption', 'EDITTS');
                    //    byteColumn.editor = {
                    //        type: 'datebox',
                    //        options: {
                    //            required: false
                    //        }
                    //    };
                    //}

                    //$dg.datagrid('selectRow', index).datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        //开始加载数据前
        function onBeforeLoad(param){
            $(this).data("LoadSuccess",false);
        }
        //加载成功
        function onLoadSuccess(rowdata) {
            $(this).data("LoadSuccess",true);
            //行号自适应宽度
            $(this).datagrid("fixRownumber");
        }
        //复制新增
        function copyappend() {
            var SeltRows = $dg.datagrid('getSelections');
            if (SeltRows.length <= 0) {
                $.messager.alert("提示", "请至少选择一条需要复制新增的数据！");
                return false;
            }
            var ArrId = SeltRows.map(function(item){
                return item.Id;
            });
            var url = "/CostMoneys/BatchCopyAdd";
            var postdata={};
            postdata.ArrId = ArrId;
            $.ajax({
                type: "POST",
                datatype: "json",//接收的数据类型
                contentType: "application/json; charset=utf-8;",//告诉服务端 发送的数据类型
                async: true,
                data: JSON.stringify(postdata),
                url: url,
                success: function (data) {
                    $.messager.progress('close');
                    if (data) {
                        if (data.Success) {
                            $dg.datagrid('reload');
                        } else{
                            $.messager.alert('警告', data.ErrMsg);
                        }
                    }
                    else{
                        $.messager.alert('警告', '未知错误');
                    }
                },
                error: function () {
                    $.messager.progress('close');
                    $.messager.alert('警告', '数据处理中,出现网络错误');
                }
            });
        }
        //新增
        function append() {
            var url = "/CostMoneys/Create";
            //$(location).attr('href', "/CostMoneys/Create");
            window.open(url);
        }
        //删除选中行
        function removeit() {
            var Seltdata = $dg.datagrid('getSelections');
            if (!(typeof editIndex === 'undefined' || editIndex == null || isNaN(editIndex))) {
                $dg.datagrid('cancelEdit', editIndex);
                editIndex = undefined;
            }
            for (var i = Seltdata.length; i > 0; i--) {
                var rowindex = $dg.datagrid('getRowIndex', Seltdata[i - 1]);
                console.log(Seltdata[i - 1]);
                $dg.datagrid('deleteRow', rowindex);
            }
            //accept();
        }
        //提交变更
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    var url = '/CostMoneys/SaveData';
                    $.ajax({
                        type: 'POST',
                        url: url,//获取数据的函数
                        async: true,//true 异步，false 同步
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(effectRow),//查询条件JSON.stringify()
                        beforeSend: function (xhr) {//发送请求前运行的函数
                            $.messager.progress({
                                title: '数据处理中',
                                msg: '数据处理中，请等待...'
                            });
                            //验证重复提交时 请加上 这句
                            AddAjaxActionGuidName(this);
                        },
                        success: function (response) {//查询成功,data为返回的数据
                            if (response.Success) {
                                $.messager.alert("提示", "提交成功！");
                                $dg.datagrid('acceptChanges');
                                $dg.datagrid('reload');
                            }
                            else {
                                var ErrMsgStr = '提交错误了！';
                                if (!(typeof (response.ErrMsg) === 'undefined' || response.ErrMsg == null || response.ErrMsg == ''))
                                    ErrMsgStr = response.ErrMsg;
                                $.messager.alert("错误", ErrMsgStr, 'error');
                            }
                        },
                        error: function () {//查询失败
                            $.messager.alert("错误", "提交错误了！", 'error');
                        },
                        complete: function (xhr, status) {//请求完成时运行的函数（在请求成功或失败之后均调用，即在 success 和 error 函数之后）。
                            $.messager.progress('close');
                        }
                    });
                }
                //$dg.datagrid('acceptChanges');
            }
        }
        //回滚变更
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        //获取变更
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }
        //自动添加 textbox 或 text的值
        function AutoAddFilterRule($dg_) {
            var ColumnsFields = $dg_.datagrid('getColumnFields');
            $.each(ColumnsFields, function (i, ColumnName) {
                var input = $dg_.datagrid('getFilterComponent', ColumnName);
                if (!(input.data("datebox") || input.data("datetimebox") || input.data("combobox") || input.data("checkbox") || input.data("combotree") || input.data("combogrid") || input.data("numberbox"))) {
                    var rule = $dg_.datagrid('getFilterRule', ColumnName);
                    var value = input.val();
                    if (!(typeof (value) === 'undefined' || value == null || value == '')) {
                        if ((rule && rule.value != value) || !rule) {
                            $dg_.datagrid('addFilterRule', {
                                field: ColumnName,
                                op: 'equal',
                                value: value
                            });
                        }
                    } else {
                        if (rule) {
                            $dg_.datagrid('removeFilterRule', ColumnName);
                        }
                    }
                }
            });
        }
        //选中行时触发
        function onSelect(index, row) {
            //console.log(index, row);
        }
        //自适应页面大小
        function MyNavResize() {
            var opts = $("#navbar-minimalize").NavResize('getOptions');
            opts.Auto = false;
            opts.OnNavResizefunc = function () {
                //$("#edit_div_one").css('width', "100%");
                //$("#edit_div_two").css('width', "100%");
                //$("#OrderInfo").datagrid("resize", { width: "100%" });
                //$("#OrderDetail").datagrid("resize", { width: "100%" });
                //$("#ProductNameMerge").datagrid("resize", { width: "100%" });
                //$("#Order_Head_panel").panel("resize", { width: "100%" });
                //setTimeout(function () {
                //    var paddigLeftRight = { "padding-left": "0px", "margin-left": "0px", "padding-right": "0px", "margin-right": "0px" };
                //    $("#edit_div_one").css(paddigLeftRight);
                //    $("#edit_div_two").css(paddigLeftRight);
                //    $("#OrderInfo").css(paddigLeftRight);
                //    $("#OrderDetail").css(paddigLeftRight);
                //    $("#ProductNameMerge").css(paddigLeftRight);
                //    $("#Order_Head_panel").css(paddigLeftRight);
                //    SetbuttonssWidth();
                //}, 100);
            };
        }
        //页面加载结束
        $(function (){
            var opts = $dg.datagrid('options');
            opts.url = '/CostMoneys/GetData';
            opts.onClickCell = onClickCell;
            opts.onBeginEdit = onBeginEdit;
            opts.onSelect = onSelect;
            opts.onDblClickRow = onDblClickRow;
            opts.onBeforeLoad = onBeforeLoad;
            opts.onLoadSuccess = onLoadSuccess;
        });
    </script>
}